{
    "Cc1ccnc(-c2ccc(N)cc2)n1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ccnc(-c2ccc(N)cc2)n1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ccnc(-c2ccc(N)c(Cl)c2)n1",
                "Cc1ccnc(-c2ccc(N)c(O)c2)n1",
                "Cc1ccnc(-c2ccc(N)c(S(=O)(=O)O)c2)n1",
                "Cc1ccnc(-c2ccc(N)nc2)n1",
                "Cc1ccnc(-c2ccc(N)c(C)c2)n1",
                "Cc1ccnc(-c2ccc(N)c(N)c2)n1",
                "Cc1ccnc(-c2ccc(N)cc2)n1",
                "Cc1ccnc(-c2ccc(N)c(C#N)c2)n1",
                "Cc1ccnc(-c2ccc(N)c(C(=O)O)c2)n1",
                "Cc1ccnc(-c2ccc(N)c(F)c2)n1"
            ],
            "total_raw_response_smiles": [
                "Cc1ccnc(-c2ccc(N)cc2)n1",
                "Cc1ccnc(-c2ccc(N)nc2)n1",
                "Cc1ccnc(-c2ccc(N)c(F)c2)n1",
                "Cc1ccnc(-c2ccc(N)c(Cl)c2)n1",
                "Cc1ccnc(-c2ccc(N)c(C)c2)n1",
                "Cc1ccnc(-c2ccc(N)c(O)c2)n1",
                "Cc1ccnc(-c2ccc(N)c(N)c2)n1",
                "Cc1ccnc(-c2ccc(N)c(C(=O)O)c2)n1",
                "Cc1ccnc(-c2ccc(N)c(C#N)c2)n1",
                "Cc1ccnc(-c2ccc(N)c(S(=O)(=O)O)c2)n1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008426904678344727,
            "chemical_diversity": 0.3679662408537755,
            "average_molecular_weight": 209.98469999999998,
            "api_call_time": 10.397258758544922
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ccnc(-c2ccc(N)cc2)n1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Fc1ccc(-c2csc(N3CCOCC3)n2)cc1",
                "COc1ccc(-c2nc3ccccc3[nH]2)cc1OC",
                "N#Cc1ccc(Cn2ccc3ccccc32)cc1",
                "O=C(Cn1cnc2ccccc21)Nc1ccc(F)cc1",
                "O=C(NCc1ccccc1)c1ccc(Cl)cc1",
                "COc1cccc(NC(=O)Nc2ccccn2)c1",
                "Cc1cc(NC(=O)CSc2ncccn2)no1",
                "Cc1nnc(SCC(=O)Nc2ccccc2)s1",
                "Cc1cc(C)n(-c2ccc(C(=O)O)cc2)n1",
                "CCOc1ccc(C(=O)NCc2cccs2)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C(NCc1ccccc1)c1ccc(Cl)cc1",
                "COc1ccc(-c2nc3ccccc3[nH]2)cc1OC",
                "Cc1nnc(SCC(=O)Nc2ccccc2)s1",
                "O=C(Cn1cnc2ccccc21)Nc1ccc(F)cc1",
                "Cc1cc(C)n(-c2ccc(C(=O)O)cc2)n1",
                "N#Cc1ccc(Cn2ccc3ccccc32)cc1",
                "CCOc1ccc(C(=O)NCc2cccs2)cc1",
                "Fc1ccc(-c2csc(N3CCOCC3)n2)cc1",
                "COc1cccc(NC(=O)Nc2ccccn2)c1",
                "Cc1cc(NC(=O)CSc2ncccn2)no1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009900569915771484,
            "chemical_diversity": 0.8385822093264763,
            "average_molecular_weight": 250.2386,
            "api_call_time": 13.06893539428711
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ccnc(-c2ccc(N)cc2)n1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ccnc(-c2ccc(Br)cc2)n1",
                "Cc1ccnc(-c2ccc(F)cc2)n1",
                "Cc1ccc(-c2nccc(C)n2)cc1",
                "Cc1ccnc(-c2ccc(CF)cc2)n1",
                "Cc1ccnc(-c2ccc(N)cc2)n1",
                "Cc1ccnc(-c2ccc(CCl)cc2)n1",
                "Cc1ccnc(-c2ccc(CN)cc2)n1",
                "Cc1ccnc(-c2ccc(O)cc2)n1",
                "Cc1ccnc(-c2ccc(Cl)cc2)n1",
                "Cc1ccnc(-c2ccc(CO)cc2)n1"
            ],
            "total_raw_response_smiles": [
                "Cc1ccnc(-c2ccc(N)cc2)n1",
                "Cc1ccnc(-c2ccc(O)cc2)n1",
                "Cc1ccnc(-c2ccc(F)cc2)n1",
                "Cc1ccnc(-c2ccc(Cl)cc2)n1",
                "Cc1ccnc(-c2ccc(Br)cc2)n1",
                "Cc1ccnc(-c2ccc(C)cc2)n1",
                "Cc1ccnc(-c2ccc(CN)cc2)n1",
                "Cc1ccnc(-c2ccc(CO)cc2)n1",
                "Cc1ccnc(-c2ccc(CF)cc2)n1",
                "Cc1ccnc(-c2ccc(CCl)cc2)n1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008055448532104492,
            "chemical_diversity": 0.34353722409277987,
            "average_molecular_weight": 201.80789999999996,
            "api_call_time": 7.572754859924316
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ccnc(-c2ccc(N)cc2)n1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)NC(=O)C1CCN(C(=O)c2ccc(F)cc2)CC1",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1ccco1",
                "CC(C)(C)OC(=O)N1CCC(Oc2ccc(C(=O)O)cc2)CC1",
                "CC(C)Cn1cnc2c(Cl)nc(N)nc21",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "Cc1cc(C)n2nc(SCc3cccc(Cl)c3)nc2n1",
                "COc1ccc(C2C(C(=O)OC(C)C)=C(C)NC3=C2C(=O)CCC3)cc1",
                "O=C1CSC(c2ccccc2)N1NS(=O)(=O)c1ccc(Cl)cc1",
                "Cn1c(=O)c2c(ncn2CC(=O)N2CCOCC2)n(C)c1=O",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc3ccccc3nc1N2"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "CC(C)(C)OC(=O)N1CCC(Oc2ccc(C(=O)O)cc2)CC1",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc3ccccc3nc1N2",
                "O=C(Cn1cnc2c1c(=O)n(C)c(=O)n2C)N1CCOCC1",
                "CC(C)Cn1cnc2c(Cl)nc(N)nc21",
                "Cc1cc(C)n2nc(SCc3cccc(Cl)c3)nc2n1",
                "COc1ccc(C2C(C(=O)OC(C)C)=C(C)NC3=C2C(=O)CCC3)cc1",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1ccco1",
                "O=C1CSC(c2ccccc2)N1NS(=O)(=O)c1ccc(Cl)cc1",
                "CC(C)(C)NC(=O)C1CCN(C(=O)c2ccc(F)cc2)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011699676513671875,
            "chemical_diversity": 0.8747244049437819,
            "average_molecular_weight": 297.47310000000004,
            "api_call_time": 15.621787786483765
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ccnc(-c2ccc(N)cc2)n1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCc1ccnc(-c2ccc(N)cc2)n1",
                "Cc1ccnc(-c2ccc(NO)cc2)n1",
                "Cc1ccnc(-c2ccc(NCO)cc2)n1",
                "Cc1ccnc(-c2ccc(NCCO)cc2)n1",
                "CC(=O)Nc1ccc(-c2nccc(C)n2)cc1",
                "Cc1ccnc(-c2ccc(NCCCO)cc2)n1",
                "Cc1ccnc(-c2ccc(NCCCCO)cc2)n1",
                "Nc1ccc(-c2nccc(C(F)(F)F)n2)cc1",
                "Cc1ccnc(-c2ccc(N)cc2)n1",
                "Cc1ccnc(-c2ccc(NS(C)(=O)=O)cc2)n1"
            ],
            "total_raw_response_smiles": [
                "Cc1ccnc(-c2ccc(N)cc2)n1",
                "CCc1ccnc(-c2ccc(N)cc2)n1",
                "Nc1ccc(-c2nccc(C(F)(F)F)n2)cc1",
                "Cc1ccnc(-c2ccc(NC(=O)C)cc2)n1",
                "Cc1ccnc(-c2ccc(NS(=O)(=O)C)cc2)n1",
                "Cc1ccnc(-c2ccc(NO)cc2)n1",
                "Cc1ccnc(-c2ccc(NCO)cc2)n1",
                "Cc1ccnc(-c2ccc(NCCO)cc2)n1",
                "Cc1ccnc(-c2ccc(NCCCO)cc2)n1",
                "Cc1ccnc(-c2ccc(NCCCCO)cc2)n1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009070396423339844,
            "chemical_diversity": 0.4640217443872132,
            "average_molecular_weight": 226.0691,
            "api_call_time": 9.085504055023193
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ccnc(-c2ccc(N)cc2)n1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCc1ccccc1)c1ccc2c(c1)OCO2",
                "O=C1Nc2ccc(Cl)cc2C(c2ccccc2)(C(F)(F)F)O1",
                "CC(C)(C)c1cc(C(=O)N2CCOCC2)cc(C(C)(C)C)c1O",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccs1",
                "COc1ccc(C2C(C(=O)OC(C)C)=C(C)NC3=C2C(=O)CCC3)cc1",
                "COc1cc(OC)c(C(=O)N2CCN(C(=O)c3ccco3)CC2)cc1Br",
                "Cc1nc2nc(N)nc(N)c2c(=O)[nH]1",
                "Cn1c(=O)c2c(ncn2CC(=O)N2CCOCC2)n(C)c1=O",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc3ccccc3nc1N2",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3sc4c(c23)CCCC4)CC1"
            ],
            "total_raw_response_smiles": [
                "O=C(NCc1ccccc1)c1ccc2c(c1)OCO2",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3sc4c(c23)CCCC4)CC1",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc3ccccc3nc1N2",
                "CC(C)(C)c1cc(C(=O)N2CCOCC2)cc(C(C)(C)C)c1O",
                "O=C(Cn1cnc2c1c(=O)n(C)c(=O)n2C)N1CCOCC1",
                "COc1ccc(C2C(C(=O)OC(C)C)=C(C)NC3=C2C(=O)CCC3)cc1",
                "Cc1nc2nc(N)nc(N)c2c(=O)[nH]1",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccs1",
                "O=C1Nc2ccc(Cl)cc2C(c2ccccc2)(C(F)(F)F)O1",
                "COc1cc(OC)c(C(=O)N2CCN(C(=O)c3ccco3)CC2)cc1Br"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011990547180175781,
            "chemical_diversity": 0.8789114334532984,
            "average_molecular_weight": 311.78049999999996,
            "api_call_time": 17.405948162078857
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ccnc(-c2ccc(N)cc2)n1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ccnc(-c2ccc(N)c(Cl)c2)n1",
                "Cc1ccnc(-c2ccc(N)cc2)c1",
                "Cc1ccnc(-c2ccc(F)cc2)n1",
                "Cc1ccnc(-c2ccc(N)nc2)n1",
                "Cc1ccnc(-c2ccc(N)c(C)c2)n1",
                "Cc1ccc(-c2nccc(C)n2)cc1",
                "Cc1ccnc(-c2ccccc2)n1",
                "Cc1ccnc(-c2ccc(O)cc2)n1",
                "Cc1ccnc(-c2ccc(Cl)cc2)n1",
                "Cc1ccnc(-c2ccc(N)c(F)c2)n1"
            ],
            "total_raw_response_smiles": [
                "Cc1ccnc(-c2ccc(N)cc2)c1",
                "Cc1ccnc(-c2ccc(O)cc2)n1",
                "Cc1ccnc(-c2ccc(F)cc2)n1",
                "Cc1ccnc(-c2ccc(C)cc2)n1",
                "Cc1ccnc(-c2ccc(Cl)cc2)n1",
                "Cc1ccnc(-c2ccccc2)n1",
                "Cc1ccnc(-c2ccc(N)nc2)n1",
                "Cc1ccnc(-c2ccc(N)c(F)c2)n1",
                "Cc1ccnc(-c2ccc(N)c(C)c2)n1",
                "Cc1ccnc(-c2ccc(N)c(Cl)c2)n1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009119510650634766,
            "chemical_diversity": 0.4554334989343628,
            "average_molecular_weight": 192.6148,
            "api_call_time": 8.23827052116394
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ccnc(-c2ccc(N)cc2)n1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 7,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ccnc(-c2ccc(I)cc2)n1",
                "Cc1ccnc(-c2ccc(Br)cc2)n1",
                "Cc1cnc(-c2ccc(N)cc2)s1",
                "Cc1cc(-c2ccc(N)cc2)on1",
                "Cc1nnc(-c2ccc(O)cc2)o1",
                "Cc1ccnc(-c2ccc(P)cc2)n1",
                "Cc1nc(-c2ccc(N)cc2)oc1C"
            ],
            "total_raw_response_smiles": [
                "Cc1nnc(-c2ccc(O)cc2)o1",
                "Cc1ccnc(-c2ccc(S)cc2)s1",
                "Cc1oc(-c2ccc(N)cc2)nc1C",
                "Cc1ccnc(-c2ccc(P)cc2)n1",
                "Cc1cc(-c2ccc(N)cc2)on1",
                "Cc1ccsc(-c2ccc(N)cc2)n1",
                "Cc1cnc(-c2ccc(N)cc2)s1",
                "Cc1csnc(-c2ccc(N)cc2)n1",
                "Cc1ccnc(-c2ccc(Br)cc2)n1",
                "Cc1ccnc(-c2ccc(I)cc2)n1"
            ],
            "validity_ratio": 0.7,
            "post_processing_time": 0.007985353469848633,
            "chemical_diversity": 0.6935928088367111,
            "average_molecular_weight": 210.89971428571425,
            "api_call_time": 7.6014180183410645
        }
    ],
    "CO[C@H](C)CNC(=O)C1=CCOCC1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CO[C@H](C)CNC(=O)C1=CCOCC1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CO[C@H](C)CNC(=O)C1=CCOCC1F",
                "CO[C@H](C)CNC(=O)C1=CCOC1O",
                "CO[C@H](C)CNC(=O)C1=CCSCC1F",
                "CO[C@H](C)CNC(=O)C1=CCOCC1O",
                "CO[C@H](C)CNC(=O)C1=CCSCC1O",
                "CO[C@H](C)CNC(=O)C1=CCOC1F",
                "CO[C@H](C)CNC(=O)C1=CCOCC1",
                "CO[C@H](C)CNC(=O)C1=CCSCC1",
                "CO[C@H](C)CNC(=O)C1=CCOC1",
                "CO[C@H](C)CNC(=O)C1=CCNCC1"
            ],
            "total_raw_response_smiles": [
                "CO[C@H](C)CNC(=O)C1=CCOCC1",
                "CO[C@H](C)CNC(=O)C1=CCOC1",
                "CO[C@H](C)CNC(=O)C1=CCSCC1",
                "CO[C@H](C)CNC(=O)C1=CCOCC1O",
                "CO[C@H](C)CNC(=O)C1=CCOCC1F",
                "CO[C@H](C)CNC(=O)C1=CCOC1F",
                "CO[C@H](C)CNC(=O)C1=CCOC1O",
                "CO[C@H](C)CNC(=O)C1=CCSCC1O",
                "CO[C@H](C)CNC(=O)C1=CCSCC1F",
                "CO[C@H](C)CNC(=O)C1=CCNCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006568431854248047,
            "chemical_diversity": 0.4234854292367378,
            "average_molecular_weight": 209.96059999999997,
            "api_call_time": 9.040771245956421
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CO[C@H](C)CNC(=O)C1=CCOCC1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ccc(C(=O)N2CCN(c3ccccc3)CC2)cc1",
                "Cc1cc(=O)n(Cc2ccc(C#N)cc2)[nH]1",
                "Cc1nnc(-c2cccc(C(=O)N3CCOCC3)c2)n1C",
                "COc1cc(Cl)ccc1C(=O)NCc1ccncc1",
                "O=C(Cc1ccccc1)Nc1nccs1",
                "COc1ccc(N2C(=O)c3ccccc3C2=O)cc1",
                "O=c1cc[nH]c(=O)n1Cc1ccc(O)cc1",
                "O=C(CN1CCCC1=O)Nc1cccc(Br)c1",
                "CC(C)c1nc(Cn2ccnc2-c2ccco2)cs1",
                "CNC(=O)c1ccc(Oc2ccccn2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC1=CC=C(C=C1)C(=O)N1CCN(CC1)C1=CC=CC=C1",
                "O=C1NC=CC(=O)N1CC1=CC=C(O)C=C1",
                "CC1=NN=C(N1C)C1=CC=CC(=C1)C(=O)N1CCOCC1",
                "COC1=CC=C(C=C1)N1C(=O)C2=C(C1=O)C=CC=C2",
                "CC(C)C1=NC(=CS1)CN1C=CN=C1C1=CC=CO1",
                "O=C(CC1=CC=CC=C1)NC1=NC=CS1",
                "COC1=C(C=CC(=C1)Cl)C(=O)NCC1=CC=NC=C1",
                "CC1=CC(=O)N(N1)CC1=CC=C(C=C1)C#N",
                "O=C(CN1CCCC1=O)NC1=CC(=CC=C1)Br",
                "CNC(=O)C1=CC=C(C=C1)OC1=CC=CC=N1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009998321533203125,
            "chemical_diversity": 0.8505936974030096,
            "average_molecular_weight": 254.5183,
            "api_call_time": 15.755630493164062
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CO[C@H](C)CNC(=O)C1=CCOCC1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CO[C@H](C)CNC(=O)c1ccoc1",
                "CO[C@H](C)CNC(=O)c1ccsc1",
                "CO[C@H](C)CNC(=O)c1cccs1",
                "CO[C@H](C)CNC(=O)C1=CCNC1",
                "CO[C@H](C)CNC(=O)c1ccco1",
                "CO[C@H](C)CNC(=O)C1=CCSCC1",
                "CO[C@H](C)CNC(=O)C1=CCSC1",
                "CO[C@H](C)CNC(=O)C1=CCOC1",
                "CO[C@H](C)CNC(=O)C1=CCNCC1",
                "CO[C@H](C)CNC(=O)c1ccncc1"
            ],
            "total_raw_response_smiles": [
                "CO[C@H](C)CNC(=O)c1ccoc1",
                "CO[C@H](C)CNC(=O)c1ccsc1",
                "CO[C@H](C)CNC(=O)c1ccncc1",
                "CO[C@H](C)CNC(=O)c1ccco1",
                "CO[C@H](C)CNC(=O)c1cccs1",
                "CO[C@H](C)CNC(=O)C1=CCNCC1",
                "CO[C@H](C)CNC(=O)C1=CCSCC1",
                "CO[C@H](C)CNC(=O)C1=CCOC1",
                "CO[C@H](C)CNC(=O)C1=CCSC1",
                "CO[C@H](C)CNC(=O)C1=CCNC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0066912174224853516,
            "chemical_diversity": 0.48009561304463755,
            "average_molecular_weight": 194.3535,
            "api_call_time": 8.982908487319946
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CO[C@H](C)CNC(=O)C1=CCOCC1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=c1[nH]cnc2c(NCc3ccco3)ncnc12",
                "Cc1ccc(C(=O)N2CCN(c3ncccn3)CC2)cc1",
                "CC(C)NCC1COc2cc(Cl)ccc2O1",
                "Cc1nnc(-c2ccc(O)cc2)o1",
                "CCOC(=O)c1ccc(NC(=O)Nc2ccccc2)cc1",
                "Cc1nc(-c2ccncc2)[nH]c(=O)c1C",
                "O=C(NC1CCCC1)c1ccc(O)c(Cl)c1",
                "CC(C)(C)OC(=O)NCCc1c[nH]c2ccccc12",
                "C1CCC2(CC1)OCCO2",
                "CN1CCC(OC(=O)c2cccc3ccccc23)CC1"
            ],
            "total_raw_response_smiles": [
                "CC1=CC=C(C=C1)C(=O)N1CCN(CC1)C1=NC=CC=N1",
                "C1CCC2(CC1)OCCO2",
                "CC(C)(C)OC(=O)NCCC1=CNC2=C1C=CC=C2",
                "O=C(NC1CCCC1)C1=CC=C(O)C(=C1)Cl",
                "CN1CCC(CC1)OC(=O)C1=CC=CC2=C1C=CC=C2",
                "CC1=NN=C(O1)C1=CC=C(O)C=C1",
                "CCOC(=O)C1=CC=C(NC(=O)NC2=CC=CC=C2)C=C1",
                "CC(C)NCC1COC2=C(O1)C=CC(=C2)Cl",
                "O=C1NC=NC2=C1N=CN=C2NCC1=CC=CO1",
                "CC1=C(C)N=C(NC1=O)C1=CC=NC=C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009485960006713867,
            "chemical_diversity": 0.8889606131025688,
            "average_molecular_weight": 234.0591,
            "api_call_time": 15.678584814071655
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CO[C@H](C)CNC(=O)C1=CCOCC1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CO[C@H](C)CNC(=O)C1=CCCS1",
                "CO[C@H](C)CNC(=O)C1=CCCO1",
                "CO[C@H](C)CNC(=O)C1=CCCCC1",
                "CO[C@H](C)CNC(=O)C1=CCNC1",
                "CO[C@H](C)CNC(=O)C1=CCOCC1",
                "CO[C@H](C)CNC(=O)C1=CCCC1",
                "CO[C@H](C)CNC(=O)C1=CCSCC1",
                "CO[C@H](C)CNC(=O)C1=CCSC1",
                "CO[C@H](C)CNC(=O)C1=CCOC1",
                "CO[C@H](C)CNC(=O)C1=CCNCC1"
            ],
            "total_raw_response_smiles": [
                "CO[C@H](C)CNC(=O)C1=CCOCC1",
                "CO[C@H](C)CNC(=O)C1=CCNCC1",
                "CO[C@H](C)CNC(=O)C1=CCSCC1",
                "CO[C@H](C)CNC(=O)C1=CCCCC1",
                "CO[C@H](C)CNC(=O)C1=CCOC1",
                "CO[C@H](C)CNC(=O)C1=CCSC1",
                "CO[C@H](C)CNC(=O)C1=CCNC1",
                "CO[C@H](C)CNC(=O)C1=CCCC1",
                "CO[C@H](C)CNC(=O)C1=CCCO1",
                "CO[C@H](C)CNC(=O)C1=CCCS1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006129741668701172,
            "chemical_diversity": 0.4064643485521854,
            "average_molecular_weight": 195.06299999999996,
            "api_call_time": 8.446159362792969
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CO[C@H](C)CNC(=O)C1=CCOCC1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1ccc(C(=O)CSc2nncs2)cc1",
                "CC(C)C(=O)N1CCN(C(=O)c2ccc(Cl)s2)CC1",
                "O=C(Cn1cnc2c(F)cc(Br)cc21)N1CCCC1",
                "O=C(CCc1ccccc1)N1CCN(Cc2cccs2)CC1",
                "CC(C)(C)C(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "Cc1nnc(SCC(=O)N2CCCCC2)s1",
                "O=C(CSc1nccs1)N1CCN(c2ccccc2)CC1",
                "Cc1cc(C)n(CC(=O)N2CCc3ccccc32)n1",
                "CC1(C)CC(=O)N(Cc2ccc(F)cc2)C(=O)C1",
                "COc1cc(C=NNC(=O)c2ccco2)ccc1O"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)C(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "O=C(CCc1ccccc1)N1CCN(Cc2cccs2)CC1",
                "COc1cc(C=NNC(=O)c2ccco2)ccc1O",
                "CC(C)C(=O)N1CCN(C(=O)c2ccc(Cl)s2)CC1",
                "Cc1nnc(SCC(=O)N2CCCCC2)s1",
                "O=C(Cn1cnc2c(F)cc(Br)cc21)N1CCCC1",
                "CC1(C)CC(=O)N(Cc2ccc(F)cc2)C(=O)C1",
                "COc1ccc(C(=O)CSc2nncs2)cc1",
                "O=C(CSc1nccs1)N1CCN(c2ccccc2)CC1",
                "Cc1cc(C)n(CC(=O)N2CCc3ccccc32)n1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010790348052978516,
            "chemical_diversity": 0.8319746810308136,
            "average_molecular_weight": 287.58930000000004,
            "api_call_time": 13.140652179718018
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CO[C@H](C)CNC(=O)C1=CCOCC1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CO[C@H](C)CNC(=S)C1=CCOCC1",
                "CO[C@H](C)CN(C)C(=O)C1=CCOCC1",
                "COC(C)CNC(=O)C1=CCOCC1",
                "CO[C@H](C)CNC(=O)C1=CCOBC1",
                "CO[C@H](C)CNC(=O)C1=CCOCC1",
                "CO[C@@H](C)CNC(=O)C1=CCOCC1",
                "CO[C@H](C)CNC(=O)C1=CCOC=C1",
                "CO[C@H](C)CNC(=O)C1=CCSCC1",
                "CO[C@H](C)CNC(=O)C1=CCOC1",
                "CO[C@H](C)CNC(=O)C1=CCNCC1"
            ],
            "total_raw_response_smiles": [
                "COC(C)CNC(=O)C1=CCOCC1",
                "CO[C@H](C)CNC(=O)C1=CCNCC1",
                "CO[C@H](C)CNC(=O)C1=CCSCC1",
                "CO[C@H](C)CNC(=O)C1=CCOCC1",
                "CO[C@@H](C)CNC(=O)C1=CCOCC1",
                "CO[C@H](C)CNC(=S)C1=CCOCC1",
                "CO[C@H](C)CNC(=O)C1=CCOC1",
                "CO[C@H](C)CNC(=O)C1=CCOC=C1",
                "CO[C@H](C)CN(C)C(=O)C1=CCOCC1",
                "CO[C@H](C)CNC(=O)C1=CCOBC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0061604976654052734,
            "chemical_diversity": 0.4023958855535117,
            "average_molecular_weight": 201.94289999999995,
            "api_call_time": 8.990777969360352
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CO[C@H](C)CNC(=O)C1=CCOCC1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CNC(=O)C1=CCOCC1F",
                "COC(C)CNC(=O)c1cccs1",
                "CCOC(=O)C1=CCOCC1Cl",
                "CCOC(=O)C1=CCNCC1",
                "COC(C)CNC(=O)c1ccco1",
                "CNC(=O)C1=CCSCC1",
                "COC(=O)C1=CCSCC1",
                "CNC(=O)C1=CCOCC1Br",
                "CCOC(=O)C1=CCSC1",
                "CNC(=O)C1=CCOC1"
            ],
            "total_raw_response_smiles": [
                "CCOC(=O)C1=CCNCC1",
                "CNC(=O)C1=CCOC1",
                "COC(=O)C1=CCSCC1",
                "CNC(=O)C1=CCSCC1",
                "CCOC(=O)C1=CCSC1",
                "COC(C)CNC(=O)c1ccco1",
                "CNC(=O)C1=CCOCC1F",
                "COC(C)CNC(=O)c1cccs1",
                "CCOC(=O)C1=CCOCC1Cl",
                "CNC(=O)C1=CCOCC1Br"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.005487918853759766,
            "chemical_diversity": 0.7202227373210632,
            "average_molecular_weight": 170.8356,
            "api_call_time": 7.72135066986084
        }
    ],
    "Cc1ncoc1CN[C@@H](C)C1CCC1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ncoc1CN[C@@H](C)C1CCC1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ncoc1CN[C@@H](C)C1CCCC1",
                "Cc1ncoc1CN(C)C(C)C1CCC1",
                "Cc1ncoc1CN[C@@H](C)C1CCC1C",
                "Cc1ncoc1CN[C@H](C)C1CCC1",
                "Cc1ncoc1CN[C@@H](C)C1CCC1F",
                "Cc1ncoc1CN[C@@H](C)C1CCCO1",
                "Cc1ncoc1CN[C@@H](C)C1CCC1N",
                "Cc1ncoc1CN[C@@H](C)C1CCCS1",
                "Cc1ncoc1CN[C@@H](C)C1CCCN1",
                "Cc1ncoc1CN[C@@H](C)C1CCC1O"
            ],
            "total_raw_response_smiles": [
                "Cc1ncoc1CN[C@@H](C)C1CCCC1",
                "Cc1ncoc1CN[C@@H](C)C1CCCO1",
                "Cc1ncoc1CN[C@@H](C)C1CCCS1",
                "Cc1ncoc1CN[C@@H](C)C1CCCN1",
                "Cc1ncoc1CN[C@@H](C)C1CCC(F)1",
                "Cc1ncoc1CN[C@@H](C)C1CCC(O)1",
                "Cc1ncoc1CN[C@@H](C)C1CCC(N)1",
                "Cc1ncoc1CN[C@@H](C)C1CCC(C)1",
                "Cc1ncoc1CN[C@H](C)C1CCC1",
                "Cc1ncoc1CN(C)C(C)C1CCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008283376693725586,
            "chemical_diversity": 0.3859651822664062,
            "average_molecular_weight": 209.69459999999998,
            "api_call_time": 8.60882043838501
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ncoc1CN[C@@H](C)C1CCC1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NC1CC1)C1CC1c1ccccc1",
                "O=S(=O)(c1ccccc1)N1CCOCC1",
                "O=C(OC1CCCNC1)c1ccccc1",
                "O=C(NC1CCCCC1)C1CCCC1",
                "O=C1c2ccccc2C(=O)N1C1CCCCC1",
                "O=C(Nc1ccccc1)C1CCCO1",
                "O=C(NC1CCCC1)c1cccs1",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "O=C1CCCN1c1cccc(C(F)(F)F)c1",
                "O=C(C1CC1)N1CCOCC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "C1CCC(CC1)N1C(=O)c2ccccc2C1=O",
                "C1CC(CNC1)OC(=O)c1ccccc1",
                "C1CCC(C1)C(=O)NC1CCCCC1",
                "O=C(NC1CCCC1)c1cccs1",
                "O=C(Nc1ccccc1)C1CCCO1",
                "O=C1CCCN1c1cccc(c1)C(F)(F)F",
                "C1CC1NC(=O)C1CC1c1ccccc1",
                "C1COCCN1C(=O)C1CC1",
                "C1COCCN1S(=O)(=O)c1ccccc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008214473724365234,
            "chemical_diversity": 0.8167583221614193,
            "average_molecular_weight": 208.15839999999997,
            "api_call_time": 10.958112239837646
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ncoc1CN[C@@H](C)C1CCC1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ncoc1CN[C@@H](C)C1CCCC1",
                "Cc1ncoc1CN[C@@H](C)C1CCCCC1",
                "Cc1ncsc1CN[C@@H](C)C1CCC1",
                "CC[C@H](NCc1ocnc1C)C1CCCC1",
                "Cc1ncsc1CN[C@@H](C)C1CCCCC1",
                "CC[C@H](NCc1ocnc1C)C1CCC1",
                "Cc1ncoc1CN[C@@H](C)C1CCC1",
                "Cc1ncsc1CN[C@@H](C)C1CCCC1",
                "CC[C@H](NCc1scnc1C)C1CCC1",
                "CC[C@H](NCc1ocnc1C)C1CCCCC1"
            ],
            "total_raw_response_smiles": [
                "Cc1ncoc1CN[C@@H](C)C1CCC1",
                "Cc1ncoc1CN[C@@H](C)C1CCCC1",
                "Cc1ncoc1CN[C@@H](C)C1CCCCC1",
                "Cc1ncoc1CN[C@@H](CC)C1CCC1",
                "Cc1ncoc1CN[C@@H](CC)C1CCCC1",
                "Cc1ncoc1CN[C@@H](CC)C1CCCCC1",
                "Cc1ncsc1CN[C@@H](C)C1CCC1",
                "Cc1ncsc1CN[C@@H](C)C1CCCC1",
                "Cc1ncsc1CN[C@@H](C)C1CCCCC1",
                "Cc1ncsc1CN[C@@H](CC)C1CCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009970903396606445,
            "chemical_diversity": 0.3929725713321742,
            "average_molecular_weight": 218.94029999999992,
            "api_call_time": 7.647291421890259
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ncoc1CN[C@@H](C)C1CCC1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)O[C@@H]2[C@@H](CO[C@]3(COS(N)(=O)=O)OC(C)(C)O[C@@H]23)O1",
                "Cc1ncc(CO)c(CN2CCOCC2)c1O",
                "COc1ccc(C2Oc3ccc(OC)cc3C(=O)C2O)cc1",
                "CC(=O)N1CCN(c2nc3ccccc3s2)CC1",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "O=C(NCCO)c1cc(Cl)cc(Cl)c1",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "O=C1CSC(c2ccco2)N1NS(=O)(=O)c1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)NCCSSCCNC(=O)OC(C)(C)C"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "CC(C)(C)OC(=O)NCCSSCCNC(=O)OC(C)(C)C",
                "O=C(O)c1ccc2c(c1)C(=O)OC21c2ccccc2",
                "CC1(C)O[C@@H]2CO[C@]3(COS(N)(=O)=O)OC(C)(C)O[C@H]3[C@@H]2O1",
                "CC(=O)N1CCN(c2nc3ccccc3s2)CC1",
                "O=C(NCCO)c1cc(Cl)cc(Cl)c1",
                "Cc1ncc(CO)c(CN2CCOCC2)c1O",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "O=C1CSC(c2ccco2)N1NS(=O)(=O)c1ccc(Cl)cc1",
                "COc1ccc(C2Oc3ccc(OC)cc3C(=O)C2O)cc1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.008219003677368164,
            "chemical_diversity": 0.9111729996163989,
            "average_molecular_weight": 285.92144444444443,
            "api_call_time": 15.574348211288452
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ncoc1CN[C@@H](C)C1CCC1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ncoc1CN[C@@H](C)C1CC1",
                "Cc1ncoc1CN[C@@H](C)C1CCCC1",
                "Cc1ncoc1CN[C@@H](C)C1CCCCC1",
                "Cc1ncoc1CN[C@@H](C)C1CCOC1",
                "Cc1ncsc1CN[C@@H](C)C1CCC1",
                "CC[C@H](NCc1ocnc1C)C1CCC1",
                "Cc1ncoc1CN[C@@H](CO)C1CCC1",
                "CCc1ncoc1CN[C@@H](C)C1CCC1",
                "Cc1ncoc1CN[C@@H](C)C1CCSC1",
                "Cc1ncoc1CN[C@@H](C)C1CCNC1"
            ],
            "total_raw_response_smiles": [
                "Cc1ncoc1CN[C@@H](C)C1CCCC1",
                "Cc1ncoc1CN[C@@H](C)C1CCCCC1",
                "Cc1ncoc1CN[C@@H](C)C1CC1",
                "Cc1ncoc1CN[C@@H](CC)C1CCC1",
                "Cc1ncoc1CN[C@@H](C)C1CCOC1",
                "Cc1ncoc1CN[C@@H](C)C1CCSC1",
                "Cc1ncoc1CN[C@@H](CO)C1CCC1",
                "Cc1ncoc1CN[C@@H](C)C1CCNC1",
                "CCc1ncoc1CN[C@@H](C)C1CCC1",
                "Cc1ncsc1CN[C@@H](C)C1CCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008923530578613281,
            "chemical_diversity": 0.3907742569085262,
            "average_molecular_weight": 209.40359999999995,
            "api_call_time": 9.010538101196289
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ncoc1CN[C@@H](C)C1CCC1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc(N)nc(N3CCN(C(=O)C4CC4)CC3)c1C2c1ccccc1Cl",
                "CC(C)Cn1cnc2c1c(=O)n(Cc1ccc(C(F)(F)F)cc1)c(=O)n2C",
                "CC1CCN(C(=O)c2ccc(-c3ccc(C#N)c(F)c3)cc2)CC1",
                "CC(=O)Nc1ccc(S(=O)(=O)Nc2nc(-c3ccco3)cs2)cc1",
                "COc1cc(C=NNC(=O)c2cc(OC)c(OC)c(OC)c2)ccc1O",
                "COc1ccc(CCn2c(C)nc3ccccc32)cc1OCC(O)CO",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(-c3ccc(C#N)cc3)o2)CC1",
                "O=C(O)c1ccc(NC(=O)c2cc(=O)c3ccccc3o2)cc1",
                "O=C(NCc1ccccn1)c1ccc2c(c1)C(=O)N(CCN1CCOCC1)C2=O"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(-c3ccc(C#N)cc3)o2)CC1",
                "COc1cc(C=NNC(=O)c2cc(OC)c(OC)c(OC)c2)ccc1O",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc(N)nc(N3CCN(C(=O)C4CC4)CC3)c1C2c1ccccc1Cl",
                "O=C(NCc1ccccn1)c1ccc2c(c1)C(=O)N(CCN1CCOCC1)C2=O",
                "CC(C)Cn1cnc2c1c(=O)n(Cc1ccc(C(F)(F)F)cc1)c(=O)n2C",
                "COc1ccc(CCn2c(C)nc3ccccc32)cc1OCC(O)CO",
                "O=C(O)c1ccc(NC(=O)C2=CC(=O)c3ccccc3O2)cc1",
                "CC(=O)Nc1ccc(S(=O)(=O)Nc2nc(-c3ccco3)cs2)cc1",
                "CC1CCN(C(=O)c2ccc(-c3ccc(C#N)c(F)c3)cc2)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.014697074890136719,
            "chemical_diversity": 0.8672325419551514,
            "average_molecular_weight": 383.70660000000015,
            "api_call_time": 18.713050365447998
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ncoc1CN[C@@H](C)C1CCC1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ncoc1CN[C@@H](C)C1CC1",
                "Cc1ncoc1CN[C@@H](C)C1CCCC1",
                "Cc1ccoc1CN[C@@H](C)C1CCC1",
                "Cc1ncsc1CN[C@@H](C)C1CCC1",
                "Cc1ncoc1CN(C)C(C)C1CCC1",
                "Cc1ncoc1CNC(C)C1CCC1",
                "Cc1ncoc1CN[C@@H](C)C1CCC1",
                "Cc1ncoc1CN[C@H](C)C1CCC1",
                "Cc1ncoc1CN[C@@H](C)C1CCCO1",
                "CCc1ncoc1CN[C@@H](C)C1CCC1"
            ],
            "total_raw_response_smiles": [
                "Cc1ncoc1CN[C@@H](C)C1CCC1",
                "Cc1ncoc1CN[C@H](C)C1CCC1",
                "Cc1ncsc1CN[C@@H](C)C1CCC1",
                "Cc1ncoc1CN[C@@H](C)C1CCCC1",
                "Cc1ccoc1CN[C@@H](C)C1CCC1",
                "Cc1ncoc1CN(C)C(C)C1CCC1",
                "Cc1ncoc1CNC(C)C1CCC1",
                "CCc1ncoc1CN[C@@H](C)C1CCC1",
                "Cc1ncoc1CN[C@@H](C)C1CC1",
                "Cc1ncoc1CN[C@@H](C)C1CCCO1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008872747421264648,
            "chemical_diversity": 0.36521912757523,
            "average_molecular_weight": 200.19129999999998,
            "api_call_time": 9.02898383140564
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ncoc1CN[C@@H](C)C1CCC1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ccoc1CNC(C)C1CCC1",
                "Cc1ncoc1CNC(C)C1CCOC1",
                "Cc1ncoc1CN(C)C(C)C1CCC1",
                "Cc1ncoc1CNC(C)C1C=CC1",
                "Cc1ncoc1CNC(C)C1CCCC1",
                "CC(NCc1ocnc1C)=C1CCC1",
                "Cc1ncoc1CNC(C)(C)C1CCC1",
                "Cc1ncoc1CNC(C)C1CCNC1",
                "Cc1ncsc1CN[C@H](C)C1CCCC1",
                "Cc1ncoc1CNC(C)C1CCSC1"
            ],
            "total_raw_response_smiles": [
                "Cc1ncsc1CN[C@H](C)C1CCCC1",
                "Cc1ccoc1CNC(C)C1CCC1",
                "Cc1ncoc1CNC(C)(C)C1CCC1",
                "Cc1ncoc1CN(C)C(C)C1CCC1",
                "Cc1ncoc1CNC(C)=C1CCC1",
                "Cc1ncoc1CNC(C)C1CCNC1",
                "Cc1ncoc1CNC(C)C1CCOC1",
                "Cc1ncoc1CNC(C)C1CCSC1",
                "Cc1ncoc1CNC(C)C1CC=C1",
                "Cc1ncoc1CNC(C)C1CCCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004881620407104492,
            "chemical_diversity": 0.5391272661998702,
            "average_molecular_weight": 207.30169999999998,
            "api_call_time": 7.435930490493774
        }
    ],
    "COCC[C@H]1CCCCNC1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'COCC[C@H]1CCCCNC1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCN1CCCC[C@H](CCOC)C1",
                "COCC[C@H]1CCCN(C)C1",
                "COCC[C@@H]1CCCCNC1",
                "COCC[C@H]1CCCC(C)NC1",
                "COCC[C@H]1CCC[C@H](C)NC1",
                "COCC[C@H]1CCCC(F)NC1",
                "COCC[C@H]1CCCNC1",
                "COCC[C@H]1CCCC(O)NC1",
                "COCC[C@H]1CCCCN1",
                "COCC[C@H]1CCCCN(C)C1"
            ],
            "total_raw_response_smiles": [
                "COCC[C@H]1CCCCN1",
                "COCC[C@@H]1CCCCNC1",
                "COCC[C@H]1CCCCN(C)C1",
                "COCC[C@H]1CCCCN(CC)C1",
                "COCC[C@H]1CCCC(C)NC1",
                "COCC[C@H]1CCCC(O)NC1",
                "COCC[C@H]1CCCC(F)NC1",
                "COCC[C@H]1CCCNC1",
                "COCC[C@H]1CCCN(C)C1",
                "COCC[C@H]1CCC[C@H](C)NC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006094217300415039,
            "chemical_diversity": 0.4753286173229416,
            "average_molecular_weight": 164.86399999999998,
            "api_call_time": 9.378411531448364
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COCC[C@H]1CCCCNC1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(NC(=O)c2cccc(-n3cnc4ccccc43)c2)s1",
                "O=C(Cc1cccs1)Nc1cccc(-c2noc3ccccc23)c1",
                "COc1ccc(C(=O)CSc2nnc(NC(=O)c3ccco3)s2)cc1",
                "O=C1N(c2ccccc2)C(=O)C2(CCCCC2)N1c1ccccc1Cl",
                "Cc1cc(C(=O)Nc2ccc(S(=O)(=O)N3CCCC3)cc2)no1",
                "O=C(Nc1nccs1)c1ccc(N2C(=O)c3ccccc3C2=O)cc1",
                "Cc1ccc(C(=O)Nc2cccc(-c3nc(-c4ccco4)cs3)c2)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(C#N)cc2)CC1",
                "COc1ccc(Cl)cc1C(=O)N1CCC(C(=O)N2CCOCC2)CC1",
                "O=C(CSc1nccn1-c1ccccc1)Nc1nccs1"
            ],
            "total_raw_response_smiles": [
                "CC1=CC=C(C=C1)C(=O)NC1=CC=CC(=C1)C1=NC(=CS1)C1=CC=CO1",
                "C1CCC2(CC1)C(=O)N(C(=O)N2C1=CC=CC=C1Cl)C1=CC=CC=C1",
                "CC(C)(C)OC(=O)N1CCC(CC1)NC(=O)C1=CC=C(C=C1)C#N",
                "O=C(NC1=NC=CS1)C1=CC=C(C=C1)N1C(=O)C2=C(C1=O)C=CC=C2",
                "COC1=CC=C(C=C1)C(=O)CSC1=NN=C(S1)NC(=O)C1=CC=CO1",
                "CC1=NN=C(S1)NC(=O)C1=CC(=CC=C1)N1C=NC2=CC=CC=C12",
                "O=C(CC1=CC=CS1)NC1=CC=CC(=C1)C1=NOC2=C1C=CC=C2",
                "CC1=CC(=NO1)C(=O)NC1=CC=C(C=C1)S(=O)(=O)N1CCCC1",
                "O=C(CSC1=NC=CN1C1=CC=CC=C1)NC1=NC=CS1",
                "COC1=C(C=C(C=C1)Cl)C(=O)N1CCC(CC1)C(=O)N1CCOCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004326581954956055,
            "chemical_diversity": 0.8199429650234475,
            "average_molecular_weight": 345.79100000000005,
            "api_call_time": 18.69277262687683
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COCC[C@H]1CCCCNC1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCN1CCCC[C@H](CCOC)C1",
                "COCC[C@H]1CCCC(Br)NC1",
                "COCC[C@H]1CCCC(C)NC1",
                "COCC[C@H]1CCCC(F)NC1",
                "COCC[C@H]1CCCCN(C(=O)OC)C1",
                "COCC[C@H]1CCCC(O)NC1",
                "COCC[C@H]1CCCCN(C(C)=O)C1",
                "COCC[C@H]1CCCCNC1",
                "COCC[C@H]1CCCC(Cl)NC1",
                "COCC[C@H]1CCCCN(C)C1"
            ],
            "total_raw_response_smiles": [
                "COCC[C@H]1CCCCNC1",
                "COCC[C@H]1CCCCN(C)C1",
                "COCC[C@H]1CCCCN(CC)C1",
                "COCC[C@H]1CCCCN(C(C)=O)C1",
                "COCC[C@H]1CCCCN(C(=O)OC)C1",
                "COCC[C@H]1CCCC(F)NC1",
                "COCC[C@H]1CCCC(Cl)NC1",
                "COCC[C@H]1CCCC(Br)NC1",
                "COCC[C@H]1CCCC(O)NC1",
                "COCC[C@H]1CCCC(C)NC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006396293640136719,
            "chemical_diversity": 0.49567291435611205,
            "average_molecular_weight": 187.6081,
            "api_call_time": 7.767940998077393
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COCC[C@H]1CCCCNC1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(Nc1ccccc1)c1ccc(CN2CCCC2)cc1",
                "c1coc(-c2csc(NC3=NCCN3)n2)c1",
                "CC(C)(C)OC(=O)NCCc1ccccc1",
                "Cc1cc(C(=O)Nc2ccc(C(F)(F)F)cc2)no1",
                "CC(C)NCC(O)COc1ccc(C#N)cc1",
                "CC1=NN(c2ccc(S(N)(=O)=O)cc2)C(=O)C1",
                "O=C(c1ccccc1Cl)N1CCOCC1",
                "COc1ccc(CC(=O)N2CCOCC2)cc1Cl",
                "C1CCC2(CC1)OCCO2",
                "O=C1C=CC(=O)C(=O)N1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)C=C1",
                "C1CCC2(CC1)OCCO2",
                "C1COCCN1C(=O)C2=CC=CC=C2Cl",
                "CC(C)(C)OC(=O)NCCC1=CC=CC=C1",
                "CC1=NN(C(=O)C1)C2=CC=C(C=C2)S(=O)(=O)N",
                "O=C(NC1=CC=CC=C1)C2=CC=C(C=C2)CN3CCCC3",
                "COC1=C(C=C(C=C1)CC(=O)N2CCOCC2)Cl",
                "CC1=CC(=NO1)C(=O)NC2=CC=C(C=C2)C(F)(F)F",
                "CC(C)NCC(COC1=CC=C(C=C1)C#N)O",
                "C1CN=C(N1)NC2=NC(=CS2)C3=CC=CO3"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004460573196411133,
            "chemical_diversity": 0.8900394325226145,
            "average_molecular_weight": 225.64309999999995,
            "api_call_time": 13.122681856155396
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COCC[C@H]1CCCCNC1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCC[C@H]1CCCCNC1",
                "COCCC(C)[C@H]1CCCCNC1",
                "COC(C)C[C@H]1CCCCNC1",
                "CCC[C@H]1CCCCNC1",
                "COCC(C)C[C@H]1CCCCNC1",
                "COCCCC[C@H]1CCCCNC1",
                "COCC[C@H]1CCCCNC1",
                "COCCOC[C@H]1CCCCNC1",
                "COCCNC[C@H]1CCCCNC1",
                "COC[C@H]1CCCCNC1"
            ],
            "total_raw_response_smiles": [
                "COCC[C@H]1CCCCNC1",
                "CCCC[C@H]1CCCCNC1",
                "COCCCC[C@H]1CCCCNC1",
                "COC[C@H]1CCCCNC1",
                "COCCC(C)[C@H]1CCCCNC1",
                "CCC[C@H]1CCCCNC1",
                "COCCOC[C@H]1CCCCNC1",
                "COCCNC[C@H]1CCCCNC1",
                "COCC(C)C[C@H]1CCCCNC1",
                "COC(C)C[C@H]1CCCCNC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006025075912475586,
            "chemical_diversity": 0.45394707798736234,
            "average_molecular_weight": 169.78289999999998,
            "api_call_time": 6.7765185832977295
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COCC[C@H]1CCCCNC1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H]1CC[C@@H](C(=O)N2CCN(c3ccc(F)cc3)CC2)CC1",
                "CC1=C(C)C(=O)C(c2ccc(O)c(Br)c2)=C(C)C1=O",
                "Cc1nnc(NS(=O)(=O)c2ccc(Cl)c(C)c2)s1",
                "NC(=O)c1cccc(-c2ccc(Cl)cc2)c1",
                "O=C(Nc1ccccc1)c1csc(-c2ccncc2)n1",
                "CC1=NN(c2ccccc2)C(=O)C1NC1=CC(=O)N=C(N)C1",
                "COc1ccc(C=CC(=O)Nc2nccs2)cc1OC",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(N)cc2)CC1",
                "O=C(Nc1ccc(C(F)(F)F)cc1)c1cncs1",
                "CN1CCN(C(=O)c2ccc(F)c(Nc3nccc(=O)[nH]3)c2)CC1"
            ],
            "total_raw_response_smiles": [
                "NC(=O)C1=CC=CC(C2=CC=C(Cl)C=C2)=C1",
                "CC1=C(C)C(=O)C(C2=CC=C(O)C(Br)=C2)=C(C)C1=O",
                "C[C@@H]1CC[C@H](C(=O)N2CCN(C3=CC=C(F)C=C3)CC2)CC1",
                "O=C(NC1=CC=C(C(F)(F)F)C=C1)C1=CN=CS1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)C2=CC=C(N)C=C2)CC1",
                "COC1=CC=C(C=CC(=O)NC2=NC=CS2)C=C1OC",
                "CC1=NN(C2=CC=CC=C2)C(=O)C1NC1=CC(=O)N=C(N)C1",
                "O=C(NC1=CC=CC=C1)C1=CSC(C2=CC=NC=C2)=N1",
                "CN1CCN(C(=O)C2=CC(NC3=NC=CC(=O)N3)=C(F)C=C2)CC1",
                "CC1=C(Cl)C=CC(=C1)S(=O)(=O)NC1=NN=C(C)S1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011245250701904297,
            "chemical_diversity": 0.8575123994324378,
            "average_molecular_weight": 295.3066,
            "api_call_time": 18.57282853126526
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COCC[C@H]1CCCCNC1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCC[C@H]1CCCCNC1",
                "COCC[C@H]1CCCCSC1",
                "COCC[C@H]1CCCCN1C",
                "COCC[C@@H]1CCCCNC1",
                "COCC[C@H]1CCCC=NC1",
                "COCC[C@H]1CCCCNC1",
                "COCC[C@H]1CCCCN1",
                "COCC[C@H]1CCCCOC1",
                "COCC[C@H]1CCCCN(C)C1",
                "CNCC[C@H]1CCCCNC1"
            ],
            "total_raw_response_smiles": [
                "COCC[C@H]1CCCCNC1",
                "COCC[C@@H]1CCCCNC1",
                "COCC[C@H]1CCCCN1",
                "COCC[C@H]1CCCCOC1",
                "COCC[C@H]1CCCCSC1",
                "COCC[C@H]1CCCCN1C",
                "COCC[C@H]1CCCCN(C)C1",
                "CCCC[C@H]1CCCCNC1",
                "CNCC[C@H]1CCCCNC1",
                "COCC[C@H]1CCCC=NC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.005404472351074219,
            "chemical_diversity": 0.5845706602383884,
            "average_molecular_weight": 158.5634,
            "api_call_time": 13.311601638793945
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COCC[C@H]1CCCCNC1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CNc1nccs1",
                "CC1=NN=C(O)CS1",
                "C1CCC2NCN=C2C1",
                "O=C1CCC(O)CN1",
                "OCC1C=CN=C(O)C1",
                "OC1CCNCC1",
                "C1CNCCN1",
                "O=C1CCNC(=O)C1",
                "CCOC(=O)C1=CCCN1",
                "CCCCC1=NCCS1"
            ],
            "total_raw_response_smiles": [
                "CCCCC1=NCCS1",
                "O=C1CCNC(=O)C1",
                "C1CCC2=NCNC2C1",
                "CCOC(=O)C1=CCCN1",
                "OC1=NC=CC(CO)C1",
                "CNC1=NC=CS1",
                "C1CC(O)CNC1=O",
                "CC1=NN=C(O)CS1",
                "OC1CCNCC1",
                "C1CNCCN1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004300117492675781,
            "chemical_diversity": 0.8920793524164395,
            "average_molecular_weight": 119.56349999999998,
            "api_call_time": 10.022084951400757
        }
    ],
    "CCCCN[C@](C)(CN)C(C)C": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCN[C@](C)(CN)C(C)C', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCCN[C@](C)(CN)C(C)N",
                "CCCCN[C@](C)(F)C(C)C",
                "CCCCN[C@@](C)(CC)CN",
                "CCCCN[C@](C)(CN)CCC",
                "CCCCN[C@](C)(CN)C(C)O",
                "CCCCN[C@](C)(N)C(C)C",
                "CCCCN[C@](C)(CN)C(C)C",
                "CCCCN[C@](C)(CN)C(C)F",
                "CCCCN[C@@](C)(CN)C(C)C",
                "CCCCN[C@](C)(CO)C(C)C"
            ],
            "total_raw_response_smiles": [
                "CCCCN[C@](C)(CN)C(C)C",
                "CCCCN[C@@](C)(CN)C(C)C",
                "CCCCN[C@](C)(CN)C(C)F",
                "CCCCN[C@](C)(CN)C(C)O",
                "CCCCN[C@](C)(CN)C(C)N",
                "CCCCN[C@](C)(CO)C(C)C",
                "CCCCN[C@](C)(F)C(C)C",
                "CCCCN[C@](C)(N)C(C)C",
                "CCCCN[C@](C)(CN)CC",
                "CCCCN[C@](C)(CN)CCC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004639625549316406,
            "chemical_diversity": 0.4300883447393459,
            "average_molecular_weight": 169.19609999999997,
            "api_call_time": 7.113963603973389
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCN[C@](C)(CN)C(C)C', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1NC(=O)C(c2cccc(Cl)c2)=C1c1ccccc1",
                "O=C1c2ccccc2C(=O)N1C1CCCCC1",
                "O=C1CC(c2ccccc2)C(=O)N1c1ccccc1",
                "O=C1NC(=O)C2(CCCCC2)c2c(Cl)cccc21",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "O=C1NC(=O)C2(CCCCC2)c2ccc(Cl)cc21",
                "O=C1c2ccc(Cl)cc2C(=O)N1C1CCCCC1",
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccccc1",
                "O=C1NC(=O)C2(CCCCC2)c2ccccc21",
                "O=C1CC(c2ccc(Cl)cc2)C(=O)N1c1ccccc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccccc1",
                "C1CCC2(CC1)C(=O)NC(=O)c1ccccc12",
                "C1CCC(CC1)N1C(=O)c2ccccc2C1=O",
                "O=C1CC(c2ccccc2)C(=O)N1c1ccccc1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "C1CCC2(CC1)C(=O)NC(=O)c1cc(Cl)ccc12",
                "C1CCC(CC1)N1C(=O)c2cc(Cl)ccc2C1=O",
                "O=C1CC(c2ccc(Cl)cc2)C(=O)N1c1ccccc1",
                "O=C1NC(=O)C(c2cccc(Cl)c2)=C1c1ccccc1",
                "C1CCC2(CC1)C(=O)NC(=O)c1cccc(Cl)c12"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012414216995239258,
            "chemical_diversity": 0.7040299285708536,
            "average_molecular_weight": 260.3442,
            "api_call_time": 11.87092638015747
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCN[C@](C)(CN)C(C)C', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCCN[C@](C)(C=O)C(C)C",
                "CCCCN[C@](C)(CC#N)C(C)C",
                "CCCCN[C@](C)(CC(N)=O)C(C)C",
                "CCCCN[C@](C)(CS)C(C)C",
                "CCCCN[C@](C)(CC(=O)O)C(C)C",
                "CCCCN[C@](C)(CF)C(C)C",
                "CCCCN[C@](C)(CO)C(C)C",
                "CCCCN[C@](C)(CBr)C(C)C",
                "CCCCN[C@](C)(CCl)C(C)C"
            ],
            "total_raw_response_smiles": [
                "CCCCN[C@](C)(CO)C(C)C",
                "CCCCN[C@](C)(CCl)C(C)C",
                "CCCCN[C@](C)(CBr)C(C)C",
                "CCCCN[C@](C)(CF)C(C)C",
                "CCCCN[C@](C)(CC#N)C(C)C",
                "CCCCN[C@](C)(CS)C(C)C",
                "CCCCN[C@](C)(C=O)C(C)C",
                "CCCCN[C@](C)(CC(=O)O)C(C)C",
                "CCCCN[C@](C)(CC(=O)N)C(C)C",
                "CCCCN[C@](C)(CC(N)=O)C(C)C"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.001508474349975586,
            "chemical_diversity": 0.41942068817597056,
            "average_molecular_weight": 191.23699999999997,
            "api_call_time": 8.24661660194397
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCN[C@](C)(CN)C(C)C', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1ccc(CCN)cc1OC",
                "Fc1ccc(OC2CCCNC2)cc1",
                "CC(C)CC(N)C(=O)NC1CCCCC1",
                "O=C(NC1CCCCC1)C1CCCN1C(=O)C1CC1",
                "Cc1ccc(S(=O)(=O)Nc2ccc(Cl)cc2)cc1",
                "CCOC(=O)c1ccc(N)cc1",
                "CC(C)(C)OC(=O)NCCc1ccccc1",
                "Cc1nnc(-c2ccccc2Cl)o1",
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccccc1",
                "C1CCC2(CC1)OCCO2"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccccc1",
                "CC(C)(C)OC(=O)NCCC1=CC=CC=C1",
                "C1CCC2(CC1)OCCO2",
                "CC1=CC=C(C=C1)S(=O)(=O)NC1=CC=C(C=C1)Cl",
                "CCOC(=O)C1=CC=C(C=C1)N",
                "O=C(NC1CCCCC1)C1CCCN1C(=O)C1CC1",
                "CC1=NN=C(O1)C1=CC=CC=C1Cl",
                "COC1=C(OC)C=C(CCN)C=C1",
                "CC(C)CC(N)C(=O)NC1CCCCC1",
                "C1CC(CNC1)OC1=CC=C(C=C1)F"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008278608322143555,
            "chemical_diversity": 0.9095121559332302,
            "average_molecular_weight": 210.75220000000004,
            "api_call_time": 13.760874271392822
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCN[C@](C)(CN)C(C)C', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCCN[C@](C)(CN)CC(C)C",
                "CCCCN[C@](C)(CN)C(C)CC",
                "CCCCN[C@](C)(CNC)C(C)C",
                "CCCCN[C@](C)(CN)CCC",
                "CCCCN[C@](C)(CN)C(C)(C)C",
                "CCCCN[C@@](CN)(CCC)C(C)C",
                "CCCCN[C@](CC)(CN)C(C)C",
                "CCCCN[C@](C)(CN)C(C)C",
                "CCCCCCN[C@](C)(CN)C(C)C",
                "CCCN[C@](C)(CN)C(C)C"
            ],
            "total_raw_response_smiles": [
                "CCCCN[C@](C)(CN)C(C)C",
                "CCCCN[C@](C)(CN)C(C)(C)C",
                "CCCCN[C@](C)(CN)CC(C)C",
                "CCCCN[C@](C)(CN)C(C)CC",
                "CCCCN[C@](C)(CN)CCC",
                "CCCCN[C@](CC)(CN)C(C)C",
                "CCCCN[C@](CCC)(CN)C(C)C",
                "CCCN[C@](C)(CN)C(C)C",
                "CCCCCCN[C@](C)(CN)C(C)C",
                "CCCCN[C@](C)(CNC)C(C)C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0047283172607421875,
            "chemical_diversity": 0.47242490154532046,
            "average_molecular_weight": 183.53759999999997,
            "api_call_time": 7.36518406867981
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCN[C@](C)(CN)C(C)C', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(=O)N1CCN(c2ccc(NC(=O)c3ccc(C#N)s3)cc2)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cn(C2CC2)nn1",
                "O=C(O)c1ccc2c(c1)C(=O)N(c1ccc(Cl)cc1)C2=O",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Br)cc1C2c1ccncc1",
                "COc1cc(OC)c(CN2C(=O)C(C)(C)Oc3ccc(Cl)cc32)cc1Br",
                "O=C1CSC(c2cccc(C(F)(F)F)c2)N1Cc1ccco1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(F)cc1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(F)(F)F)cc2)s1",
                "CC1(C)Oc2ccc(C#N)cc2C(=O)N1NC(=O)c1ccco1",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3sc4c(c23)CCCC4)CC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(F)cc1",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3sc4c(c23)CCCC4)CC1",
                "CC1(C)Oc2ccc(C#N)cc2C(=O)N1NC(=O)c1ccco1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cn(C2CC2)nn1",
                "COc1cc(OC)c(CN2C(=O)C(C)(C)Oc3ccc(Cl)cc32)cc1Br",
                "CC(=O)N1CCN(c2ccc(NC(=O)c3ccc(C#N)s3)cc2)CC1",
                "O=C(O)c1ccc2c(c1)C(=O)N(c1ccc(Cl)cc1)C2=O",
                "Cc1nnc(SCC(=O)Nc2ccc(C(F)(F)F)cc2)s1",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Br)cc1C2c1ccncc1",
                "O=C1CSC(c2cccc(C(F)(F)F)c2)N1Cc1ccco1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011786222457885742,
            "chemical_diversity": 0.865427554999976,
            "average_molecular_weight": 353.47960000000006,
            "api_call_time": 19.161276817321777
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCN[C@](C)(CN)C(C)C', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 11,
            "number_of_valid_canonicalized_smiles": 11,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCCN[C@](C)(CC)C(C)C",
                "CCCCN[C@](C)(CN)C(C)CC",
                "CCCCN[C@](O)(CN)C(C)C",
                "CCCCN[C@](C)(CN)C(C)O",
                "CCCCN[C@](CC)(CN)C(C)C",
                "CCCCN[C@](C)(CF)C(C)C",
                "CCCCN[C@](C)(CN)C(C)C",
                "CCCCN[C@@](C)(CN)C(C)C",
                "CCCCN[C@](C)(CO)C(C)C",
                "CCCCN[C@](F)(CN)C(C)C",
                "CCCCN[C@](C)(CN)C(C)F"
            ],
            "total_raw_response_smiles": [
                "CCCCN[C@](C)(CN)C(C)C",
                "CCCCN[C@@](C)(CN)C(C)C",
                "CCCCN[C@](C)(CO)C(C)C",
                "CCCCN[C@](C)(CF)C(C)C",
                "CCCCN[C@](C)(CC)C(C)C",
                "CCCCN[C@](C)(CN)C(C)CC",
                "CCCCN[C@](C)(CN)C(C)F",
                "CCCCN[C@](C)(CN)C(C)O",
                "CCCCN[C@](CC)(CN)C(C)C",
                "CCCCN[C@](F)(CN)C(C)C",
                "CCCCN[C@](O)(CN)C(C)C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004849672317504883,
            "chemical_diversity": 0.4106683883120863,
            "average_molecular_weight": 176.21554545454543,
            "api_call_time": 6.9162702560424805
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCN[C@](C)(CN)C(C)C', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C[C@@](C)(NCCCC)C(C)Br",
                "CCCCN(C)C(C)(C)C(C)=O",
                "C=C(C)[C@@](C)(CC#N)NCCCC",
                "CCCCS[C@@](C)(CO)C(C)O",
                "CCCCN1C(=O)C=CC1(C)CC",
                "CCCC[N+](C)(C)CC(C)(C)C",
                "C#C[C@@](C)(NCCCC)C(C)F",
                "CCCCN[C@](C)(C[Si])C(C)I",
                "C[B]C[C@@](C)(NCCCC)C(C)C",
                "CCCCN[C@](C)(CS)C(C)Cl"
            ],
            "total_raw_response_smiles": [
                "CCCCS[C@@](C)(CO)C(C)O",
                "CCCCN1C(=O)C=CC1(C)CC",
                "CCCCN[C@](C)(CC#N)C(C)=C",
                "CCCC[N+](C)(C)CC(C)(C)C",
                "CCCCN[C@](C)(CS)C(C)Cl",
                "CCCCN[C@](C)(C=C)C(C)Br",
                "CCCCN[C@](C)(C#C)C(C)F",
                "CCCC[N@@](C)C(C)(C)C(=O)C",
                "CCCCN[C@](C)(C[Si])C(C)I",
                "CCCCN[C@](C)(C[B]C)C(C)C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004637241363525391,
            "chemical_diversity": 0.7309109683498543,
            "average_molecular_weight": 199.11319999999998,
            "api_call_time": 9.590358018875122
        }
    ],
    "O=C(CC1CC1)Nc1ccccc1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C(CC1CC1)Nc1ccccc1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(CC1CC1)Nc1ccccc1O",
                "Nc1ccccc1NC(=O)CC1CC1",
                "O=C(CC1CC1)Nc1cccc(F)c1",
                "O=C(CC1CC1)Nc1ccccc1F",
                "O=C(CC1CC1)Nc1cccc(Cl)c1",
                "Cc1ccccc1NC(=O)CC1CC1",
                "O=C(CC1CC1)Nc1ccccc1I",
                "O=C(CC1CC1)Nc1ccccc1S",
                "O=C(CC1CC1)Nc1ccccc1Br",
                "O=C(CC1CC1)Nc1ccccc1Cl"
            ],
            "total_raw_response_smiles": [
                "O=C(CC1CC1)Nc1ccccc1F",
                "O=C(CC1CC1)Nc1ccccc1Cl",
                "O=C(CC1CC1)Nc1ccccc1Br",
                "O=C(CC1CC1)Nc1ccccc1I",
                "O=C(CC1CC1)Nc1ccccc1C",
                "O=C(CC1CC1)Nc1ccccc1O",
                "O=C(CC1CC1)Nc1ccccc1N",
                "O=C(CC1CC1)Nc1ccccc1S",
                "O=C(CC1CC1)Nc1cccc(F)c1",
                "O=C(CC1CC1)Nc1cccc(Cl)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008137226104736328,
            "chemical_diversity": 0.3891712942486938,
            "average_molecular_weight": 213.908,
            "api_call_time": 9.100043058395386
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C(CC1CC1)Nc1ccccc1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(CSc1nnc(-c2ccco2)o1)N1CCOCC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCCC2)cc1)C1CC1",
                "COc1ccc(CC(=O)N2CCOCC2)cc1OC",
                "O=c1[nH]cc(Cc2ccccc2)c(=O)[nH]1",
                "Cc1nnc(SCC(=O)Nc2ccc(Cl)cc2)s1",
                "Cc1cc(C)n2nc(NC(=O)C3CCCC3)nc2n1",
                "CC1(C)CC(=O)N(c2ccc(F)cc2)C(=O)C1",
                "CC(C)(C)OC(=O)Nc1ccc2c(c1)OCO2",
                "COc1cccc(CN2C(=O)CCC2C(=O)Nc2ccccc2)c1",
                "CC(C)C(=O)N1CCN(C(=O)c2ccco2)CC1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)OC(=O)Nc1ccc2c(c1)OCO2",
                "O=C1NC(=O)C(Cc2ccccc2)=CN1",
                "COc1ccc(CC(=O)N2CCOCC2)cc1OC",
                "CC1(C)CC(=O)N(c2ccc(F)cc2)C(=O)C1",
                "O=C(CSc1nnc(-c2ccco2)o1)N1CCOCC1",
                "Cc1nnc(SCC(=O)Nc2ccc(Cl)cc2)s1",
                "CC(C)C(=O)N1CCN(C(=O)c2ccco2)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCCC2)cc1)C1CC1",
                "Cc1cc(C)n2nc(NC(=O)C3CCCC3)nc2n1",
                "COc1cccc(CN2C(=O)CCC2C(=O)Nc2ccccc2)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010872125625610352,
            "chemical_diversity": 0.8379956151407768,
            "average_molecular_weight": 266.353,
            "api_call_time": 14.337918996810913
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C(CC1CC1)Nc1ccccc1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ccc(NC(=O)CC2CC2)cc1",
                "O=C(CC1CC1)Nc1cccc(F)c1",
                "O=C(CC1CC1)Nc1ccc([N+](=O)[O-])cc1",
                "O=C(CC1CC1)Nc1ccc(O)cc1",
                "O=C(CC1CC1)Nc1ccc(C(F)(F)F)cc1",
                "O=C(CC1CC1)Nc1ccccc1",
                "Nc1ccc(NC(=O)CC2CC2)cc1",
                "O=C(CC1CC1)Nc1ccc(Br)cc1",
                "O=C(CC1CC1)Nc1ccc(Cl)cc1",
                "COc1ccc(NC(=O)CC2CC2)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C(CC1CC1)Nc1ccccc1",
                "O=C(CC1CC1)Nc1cccc(F)c1",
                "O=C(CC1CC1)Nc1ccc(Cl)cc1",
                "O=C(CC1CC1)Nc1ccc(Br)cc1",
                "O=C(CC1CC1)Nc1ccc(C)cc1",
                "O=C(CC1CC1)Nc1ccc(O)cc1",
                "O=C(CC1CC1)Nc1ccc(N)cc1",
                "O=C(CC1CC1)Nc1ccc(C(F)(F)F)cc1",
                "O=C(CC1CC1)Nc1ccc(OC)cc1",
                "O=C(CC1CC1)Nc1ccc([N+](=O)[O-])cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007946252822875977,
            "chemical_diversity": 0.35677999075322087,
            "average_molecular_weight": 207.17020000000002,
            "api_call_time": 7.554626226425171
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C(CC1CC1)Nc1ccccc1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)c1ccc(S(=O)(=O)NCCO)cc1",
                "O=C(Nc1ccc(Cl)cc1)c1ccc(F)cc1",
                "CC(=O)Nc1ccc(NC(=O)c2ccco2)cc1",
                "Cc1ccc(C(=O)Nc2ccc(S(N)(=O)=O)cc2)o1",
                "CC(C)C(=O)NCc1ccc(C(=O)O)cc1",
                "COc1ccc(C=NNC(=O)c2ccncc2)cc1OC",
                "Cc1cc(C)c(NC(=O)c2ccc(N)cc2)c(C)c1",
                "O=C(Nc1cccc(C(F)(F)F)c1)c1cccs1",
                "COc1cc(OC)c(C(=O)NCc2ccccn2)c(OC)c1",
                "O=C(O)c1ccc(NC(=O)c2cccs2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)c1ccc(S(=O)(=O)NCCO)cc1",
                "O=C(Nc1ccc(Cl)cc1)c1ccc(F)cc1",
                "COc1ccc(C=NNC(=O)c2ccncc2)cc1OC",
                "CC(C)C(=O)NCc1ccc(C(=O)O)cc1",
                "Cc1cc(C)c(NC(=O)c2ccc(N)cc2)c(C)c1",
                "O=C(O)c1ccc(NC(=O)c2cccs2)cc1",
                "Cc1ccc(C(=O)Nc2ccc(S(N)(=O)=O)cc2)o1",
                "COc1cc(OC)c(C(=O)NCc2ccccn2)c(OC)c1",
                "CC(=O)Nc1ccc(NC(=O)c2ccco2)cc1",
                "O=C(Nc1cccc(C(F)(F)F)c1)c1cccs1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008639097213745117,
            "chemical_diversity": 0.7823538195882958,
            "average_molecular_weight": 261.3342,
            "api_call_time": 13.748555660247803
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C(CC1CC1)Nc1ccccc1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(CCC1CCCC1)Nc1ccccc1",
                "O=C(CC1CC1)Nc1ccccc1",
                "O=C(CCC1CC1)Nc1ccccc1",
                "O=C(CCC1CCCCC1)Nc1ccccc1",
                "O=C(CC1CCC1)Nc1ccccc1",
                "O=C(CC1CCCC1)Nc1ccccc1",
                "O=C(CCC1CCC1)Nc1ccccc1",
                "O=C(CCC1CCCCCC1)Nc1ccccc1",
                "O=C(CC1CCCCC1)Nc1ccccc1",
                "O=C(CC1CCCCCC1)Nc1ccccc1"
            ],
            "total_raw_response_smiles": [
                "O=C(CC1CC1)Nc1ccccc1",
                "O=C(CC1CCC1)Nc1ccccc1",
                "O=C(CC1CCCC1)Nc1ccccc1",
                "O=C(CC1CCCCC1)Nc1ccccc1",
                "O=C(CC1CCCCCC1)Nc1ccccc1",
                "O=C(CCC1CC1)Nc1ccccc1",
                "O=C(CCC1CCC1)Nc1ccccc1",
                "O=C(CCC1CCCC1)Nc1ccccc1",
                "O=C(CCC1CCCCC1)Nc1ccccc1",
                "O=C(CCC1CCCCCC1)Nc1ccccc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00826120376586914,
            "chemical_diversity": 0.23403964226484875,
            "average_molecular_weight": 210.29850000000005,
            "api_call_time": 6.854259252548218
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C(CC1CC1)Nc1ccccc1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(S(=O)(=O)N3CCOCC3)cc1N2",
                "O=C(NCc1ccc(Cl)cc1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2",
                "CC1=C(C(=O)Nc2ccccc2)C(c2ccc(Cl)cc2)NC(=O)N1",
                "CC1=NN(c2ccc(C(=O)N3CCOCC3)cc2)C(=O)C1",
                "O=C(Nc1ccc(C(F)(F)F)cc1)c1cccc2c1C(=O)N(Cc1ccccc1)C2",
                "CC(C)(C)OC(=O)Nc1ccc2c(c1)C(=O)c1ccccc1C2=O",
                "O=C(Cn1nnc2ccccc21)N1CCN(C(=O)c2ccco2)CC1",
                "COc1ccc(-c2n[nH]c(=O)c3ccccc23)cc1OC",
                "CC(C)C(=O)N1CCN(C(=O)c2ccc3c(c2)OCO3)CC1",
                "O=C(NC1CCCCC1)c1ccc2nccnc2c1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)OC(=O)Nc1ccc2c(c1)C(=O)c1ccccc1C2=O",
                "O=C(NCc1ccc(Cl)cc1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(S(=O)(=O)N3CCOCC3)cc1N2",
                "O=C(Cn1nnc2ccccc21)N1CCN(C(=O)c2ccco2)CC1",
                "CC(C)C(=O)N1CCN(C(=O)c2ccc3c(c2)OCO3)CC1",
                "O=C(NC1CCCCC1)c1ccc2nccnc2c1",
                "COc1ccc(C2=NNC(=O)C3=C2C=CC=C3)cc1OC",
                "CC1=NN(C(=O)C1)c1ccc(C(=O)N2CCOCC2)cc1",
                "O=C(Nc1ccc(C(F)(F)F)cc1)c1cccc2c1C(=O)N(Cc1ccccc1)C2",
                "CC1=C(C(=O)Nc2ccccc2)C(c2ccc(Cl)cc2)NC(=O)N1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.013435840606689453,
            "chemical_diversity": 0.8386182042972024,
            "average_molecular_weight": 331.25170000000014,
            "api_call_time": 19.06600570678711
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C(CC1CC1)Nc1ccccc1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ccc(NC(=O)CC2CC2)cc1",
                "O=C(CC1CC1)Nc1cccc(F)c1",
                "O=C(CC1CC1)Nc1ccc(O)cc1",
                "O=C(CC1CC1)Nc1ccccc1F",
                "O=C(CC1CC1)Nc1ccccc1",
                "O=C(CCC1CC1)Nc1ccccc1",
                "O=C(CC1CC1)Nc1cccc(O)c1",
                "O=C(CC1CC1)Nc1ccc(Cl)cc1",
                "O=C(CC1CCC1)Nc1ccccc1",
                "O=C(CC1CC1)Nc1cccc(Cl)c1"
            ],
            "total_raw_response_smiles": [
                "O=C(CC1CC1)Nc1ccccc1",
                "O=C(CC1CC1)Nc1cccc(F)c1",
                "O=C(CC1CC1)Nc1ccc(Cl)cc1",
                "O=C(CC1CC1)Nc1ccccc1F",
                "O=C(CC1CC1)Nc1ccc(O)cc1",
                "O=C(CC1CC1)Nc1cccc(O)c1",
                "O=C(CC1CC1)Nc1ccc(C)cc1",
                "O=C(CCC1CC1)Nc1ccccc1",
                "O=C(CC1CCC1)Nc1ccccc1",
                "O=C(CC1CC1)Nc1cccc(Cl)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0076601505279541016,
            "chemical_diversity": 0.4094873354696177,
            "average_molecular_weight": 193.12590000000003,
            "api_call_time": 7.9624505043029785
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C(CC1CC1)Nc1ccccc1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(CC1CCCS1)Nc1ccccc1",
                "O=C(CC1CC1)Nc1ccc(F)cc1",
                "O=S(CC1CC1)Nc1ccccc1",
                "O=C(CC1CC1)Nc1cccc(O)c1",
                "O=C(CC1CCC1)Nc1ccncc1",
                "O=C(CC1CCCC1)Nc1ccccc1",
                "O=C(CC1CC1)Nc1ccc(Cl)cc1",
                "O=C(CC1CCCCC1)Nc1ccccc1",
                "O=C(CC1CCNC1)Nc1ccccc1",
                "O=C(CC1CCCO1)Nc1ccccc1"
            ],
            "total_raw_response_smiles": [
                "O=C(CC1CCC1)Nc1ccncc1",
                "O=S(CC1CC1)Nc1ccccc1",
                "O=C(CC1CCCC1)Nc1ccccc1",
                "O=C(CC1CC1)Nc1ccc(Cl)cc1",
                "O=C(CC1CC1)Nc1cccc(O)c1",
                "O=C(CC1CCCCC1)Nc1ccccc1",
                "O=C(CC1CC1)Nc1ccc(F)cc1",
                "O=C(CC1CCNC1)Nc1ccccc1",
                "O=C(CC1CCCO1)Nc1ccccc1",
                "O=C(CC1CCCS1)Nc1ccccc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007525444030761719,
            "chemical_diversity": 0.4934027865041244,
            "average_molecular_weight": 203.11120000000005,
            "api_call_time": 8.060886144638062
        }
    ],
    "Cc1ccc(CN[C@@H](C)CN)s1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ccc(CN[C@@H](C)CN)s1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ccc(CN[C@@H](C)CS)s1",
                "Cc1ccc(CN[C@@H](C)CO)s1",
                "Cc1ccc(CNC(C)(C)CN)s1",
                "Cc1ccc(CNC(C)CN)s1",
                "CNC[C@H](C)NCc1ccc(C)s1",
                "Cc1ccc(CN[C@@H](C)CF)s1",
                "Cc1ccc(CN[C@@H](C)N)s1",
                "Cc1ccc(CN[C@H](C)CN)s1",
                "Cc1ccc(CN[C@@H](C)Cl)s1",
                "Cc1ccc(CN[C@@H](C)CN)o1"
            ],
            "total_raw_response_smiles": [
                "Cc1ccc(CN[C@H](C)CN)s1",
                "Cc1ccc(CN[C@@H](C)CN)o1",
                "Cc1ccc(CN[C@@H](C)CO)s1",
                "Cc1ccc(CN[C@@H](C)CF)s1",
                "Cc1ccc(CN[C@@H](C)Cl)s1",
                "Cc1ccc(CN[C@@H](C)N)s1",
                "Cc1ccc(CN[C@@H](C)CS)s1",
                "Cc1ccc(CN[C@@H](C)CNC)s1",
                "Cc1ccc(CNC(C)CN)s1",
                "Cc1ccc(CN[C@@](C)(CN)C)s1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0028600692749023438,
            "chemical_diversity": 0.4211398075458699,
            "average_molecular_weight": 186.7453,
            "api_call_time": 10.357783317565918
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ccc(CN[C@@H](C)CN)s1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(CN1CCOCC1)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "O=C(NCc1ccco1)c1ccc(Cl)cc1",
                "Cc1nc2cc(Cl)ccc2n1CC(=O)N1CCCC1CO",
                "O=C(Nc1ccc(F)cc1)N1CCN(C(=O)c2ccco2)CC1",
                "CCN(CC)CCNC(=O)c1ccc2c(c1)nc(C)n2C",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3[nH]ccc23)CC1",
                "COc1ccc(C(=O)N2CCN(c3ncccn3)CC2)cc1OC",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "COc1cc(C=NNC(=O)c2ccncc2)ccc1O",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc3ccccc3nc1N2"
            ],
            "total_raw_response_smiles": [
                "O=C(NCc1ccco1)c1ccc(Cl)cc1",
                "COc1ccc(C(=O)N2CCN(c3ncccn3)CC2)cc1OC",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3[nH]ccc23)CC1",
                "CCN(CC)CCNC(=O)c1ccc2c(c1)nc(C)n2C",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc3ccccc3nc1N2",
                "O=C(CN1CCOCC1)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "Cc1nc2cc(Cl)ccc2n1CC(=O)N1CCCC1CO",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "O=C(Nc1ccc(F)cc1)N1CCN(C(=O)c2ccco2)CC1",
                "COc1cc(C=NNC(=O)c2ccncc2)ccc1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.013780593872070312,
            "chemical_diversity": 0.8547030797621098,
            "average_molecular_weight": 295.2256000000001,
            "api_call_time": 16.09781312942505
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ccc(CN[C@@H](C)CN)s1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ccc(CN[C@@H](C)CS)s1",
                "Cc1ccc(CN[C@@H](C)CO)s1",
                "Cc1ccc(CN[C@@H](C)CCl)s1",
                "Cc1ccc(CN[C@@H](C)CF)s1",
                "Cc1ccc(CN[C@@H](C)CBr)s1",
                "Cc1ccc(CN[C@@H](C)CC(N)=O)s1",
                "Cc1ccc(CN[C@@H](C)CN)s1",
                "Cc1ccc(CN[C@@H](C)CC#N)s1",
                "Cc1ccc(CN[C@@H](C)CC(=O)O)s1",
                "Cc1ccc(CN[C@@H](C)CI)s1"
            ],
            "total_raw_response_smiles": [
                "Cc1ccc(CN[C@@H](C)CN)s1",
                "Cc1ccc(CN[C@@H](C)CO)s1",
                "Cc1ccc(CN[C@@H](C)CF)s1",
                "Cc1ccc(CN[C@@H](C)CCl)s1",
                "Cc1ccc(CN[C@@H](C)CBr)s1",
                "Cc1ccc(CN[C@@H](C)CI)s1",
                "Cc1ccc(CN[C@@H](C)CC#N)s1",
                "Cc1ccc(CN[C@@H](C)CS)s1",
                "Cc1ccc(CN[C@@H](C)CC(=O)O)s1",
                "Cc1ccc(CN[C@@H](C)CC(=O)N)s1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007346630096435547,
            "chemical_diversity": 0.34059434448075065,
            "average_molecular_weight": 212.52820000000003,
            "api_call_time": 8.591567039489746
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ccc(CN[C@@H](C)CN)s1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)O[C@@H]2[C@@H](CO[C@]3(COS(N)(=O)=O)OC(C)(C)O[C@@H]23)O1",
                "CC(C)(C)OC(=O)N1CCC(Oc2ccc(C(=O)O)cc2)CC1",
                "O=C(O)C1=CN(Cc2ccncc2)C=C(C(=O)O)C1",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "CC(=O)NCCCS(=O)(=O)c1ccc(Cl)cc1",
                "O=C(O)c1ccc2c(c1)C(=O)N(CCCCN1CCOCC1)C2=O",
                "Nc1nc(N)c2nc(-c3ccccc3)cnc2n1",
                "O=C1c2ccccc2C(=O)N1CCCCN1CCN(c2ncccn2)CC1",
                "CC[C@H](C)[C@@H](C(=O)O)n1cc(F)c(=O)[nH]c1=O"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "CC(C)(C)OC(=O)N1CCC(Oc2ccc(C(=O)O)cc2)CC1",
                "CC1(C)O[C@@H]2CO[C@]3(COS(N)(=O)=O)OC(C)(C)O[C@H]3[C@@H]2O1",
                "O=C(O)c1ccc2c(c1)C(=O)N(CCCCN1CCOCC1)C2=O",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "CC[C@H](C)[C@@H](C(=O)O)n1cc(F)c(=O)[nH]c1=O",
                "O=C1c2ccccc2C(=O)N1CCCCN1CCN(c2ncccn2)CC1",
                "Nc1nc(N)c2nc(-c3ccccc3)cnc2n1",
                "CC(=O)NCCCS(=O)(=O)c1ccc(Cl)cc1",
                "O=C(O)C1=CN(Cc2ccncc2)C=C(C(=O)O)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011843442916870117,
            "chemical_diversity": 0.8838789303773038,
            "average_molecular_weight": 286.5562000000001,
            "api_call_time": 17.887921571731567
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ccc(CN[C@@H](C)CN)s1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ccc(CCN[C@@H](C)CN)s1",
                "Cc1ccc(CN[C@@H](C)CCCN)s1",
                "COc1ccc(CN[C@@H](C)CN)s1",
                "CNC[C@H](C)NCc1ccc(C)s1",
                "CC[C@@H](CN)NCc1ccc(C)s1",
                "Cc1ccc(CN[C@@H](C)CCN)s1",
                "CC(=O)NC[C@H](C)NCc1ccc(C)s1",
                "Cc1ccc(CN[C@@H](C)CN)s1",
                "CCc1ccc(CN[C@@H](C)CN)s1",
                "Cc1ccc(CN[C@@H](C)CNC(C)C)s1"
            ],
            "total_raw_response_smiles": [
                "Cc1ccc(CN[C@@H](C)CN)s1",
                "CCc1ccc(CN[C@@H](C)CN)s1",
                "Cc1ccc(CN[C@@H](CC)CN)s1",
                "Cc1ccc(CN[C@@H](C)CCN)s1",
                "Cc1ccc(CCN[C@@H](C)CN)s1",
                "Cc1ccc(CN[C@@H](C)CNC)s1",
                "COc1ccc(CN[C@@H](C)CN)s1",
                "Cc1ccc(CN[C@@H](C)CNC(C)C)s1",
                "Cc1ccc(CN[C@@H](C)CNC(=O)C)s1",
                "Cc1ccc(CN[C@@H](C)CCCN)s1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006672859191894531,
            "chemical_diversity": 0.4430442115641756,
            "average_molecular_weight": 204.1386,
            "api_call_time": 8.398629426956177
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ccc(CN[C@@H](C)CN)s1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)Oc1ccc(C(=O)N2CCNC(=O)C2)cc1F",
                "O=C(NCc1ccco1)c1ccc(Cl)cc1",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc3ccccc3n1C2c1ccccc1Cl",
                "COc1cc(C2=NOC(C)(C)C2)ccc1O",
                "O=C1CSC(c2cccs2)N1Cc1ccncc1",
                "CC(C)Cn1c(C#N)c(-c2ccccc2)n(C)c1=O",
                "Cc1noc(C)c1COc1ccc(C(=O)O)cc1",
                "O=C(Cn1nnc2ccccc21)N1CCOCC1",
                "CC1=NN(c2cc(Cl)ccc2O)C(=O)C1",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3sc4c(c23)CCCC4)CC1"
            ],
            "total_raw_response_smiles": [
                "O=C(NCc1ccco1)c1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3sc4c(c23)CCCC4)CC1",
                "CC(C)Oc1ccc(C(=O)N2CCNC(=O)C2)cc1F",
                "O=C(Cn1nnc2ccccc21)N1CCOCC1",
                "COc1cc(C2=NOC(C)(C)C2)ccc1O",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc3ccccc3n1C2c1ccccc1Cl",
                "CC(C)CN1C(=O)N(C)C(c2ccccc2)=C1C#N",
                "O=C1CSC(c2cccs2)N1Cc1ccncc1",
                "Cc1noc(C)c1COc1ccc(C(=O)O)cc1",
                "CC1=NN(c2cc(Cl)ccc2O)C(=O)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0054585933685302734,
            "chemical_diversity": 0.8695325671421343,
            "average_molecular_weight": 275.35110000000003,
            "api_call_time": 14.028619050979614
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ccc(CN[C@@H](C)CN)s1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ccc(CN[C@@H](C)C#N)s1",
                "Cc1ccc(CN[C@@H](C)CS)s1",
                "Cc1ccc(CN[C@@H](C)CO)s1",
                "Cc1ccc(CN[C@@H](C)CF)s1",
                "Cc1ccc(CN[C@@H](C)C=N)s1",
                "Cc1ccc(CN[C@H](C)CN)s1",
                "Cc1ccc(CN[C@@H](C)CC#N)s1",
                "Cc1ccc(CN[C@@H](C)Cl)s1",
                "Cc1ccc(CN[C@@H](C)CN)o1"
            ],
            "total_raw_response_smiles": [
                "Cc1ccc(CN[C@@H](C)CN)o1",
                "Cc1ccc(CN[C@@H](C)CO)s1",
                "Cc1ccc(CN[C@@H](C)CF)s1",
                "Cc1ccc(CN[C@H](C)CN)s1",
                "Cc1ccc(CN[C@@H](C)CN)c1",
                "Cc1ccc(CN[C@@H](C)CS)s1",
                "Cc1ccc(CN[C@@H](C)CC#N)s1",
                "Cc1ccc(CN[C@@H](C)Cl)s1",
                "Cc1ccc(CN[C@@H](C)C=N)s1",
                "Cc1ccc(CN[C@@H](C)C#N)s1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.0064849853515625,
            "chemical_diversity": 0.43472706952516504,
            "average_molecular_weight": 185.89611111111114,
            "api_call_time": 8.306463241577148
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1ccc(CN[C@@H](C)CN)s1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(CN[C@H](C)CO)o1",
                "COC(C)=NCc1nc(C)cs1",
                "CC(=O)NCc1ccc(C)s1",
                "Cc1cc(CN2CC[C@H](C)C2)no1",
                "CC(=NP)NCc1ncc(C)s1",
                "Cc1cc(CN2CO[C@H](C)C2)on1",
                "Cc1ncc(CN[C@@H](C)CF)s1",
                "Cc1nc(CN[C@@H](C)CS)cs1",
                "Cc1cc(CNC(C)C#N)co1"
            ],
            "total_raw_response_smiles": [
                "Cc1nnc(CN[C@H](C)CO)o1",
                "Cc1nc(CN[C@@H](C)CS)cs1",
                "Cc1ccc(CNC(C)=O)s1",
                "Cc1cc(CNC(=O)N(C)C)ss1",
                "Cc1cnc(CNC(C)=NP)s1",
                "Cc1cc(CN2CC[C@H](C)C2)no1",
                "Cc1csc(CN=C(C)OC)n1",
                "Cc1cc(CNC(C)C#N)co1",
                "Cc1ncc(CN[C@@H](C)CF)s1",
                "Cc1cc(CN2C[C@@H](C)OC2)on1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.00580906867980957,
            "chemical_diversity": 0.8163991444796012,
            "average_molecular_weight": 182.58322222222222,
            "api_call_time": 9.74875259399414
        }
    ],
    "C#CCCCN(C)[C@@H]1CCCC[C@H]1O": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CCCCN(C)[C@@H]1CCCC[C@H]1O', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C#CCCCN(C)[C@H]1CCCC[C@@H]1O",
                "C#CCCCN(C)[C@@H]1CCC[C@H](O)C1",
                "C#CCCCN(C)[C@H]1CCC[C@H](O)C1",
                "C#CCCCN(C)[C@@H]1CCC[C@@H](O)C1",
                "C#CCCCN(C)[C@H]1CCC[C@@H](O)C1",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1F",
                "C#CCCCN(C)[C@H]1CCCC[C@H]1F",
                "C#CCCCN(C)[C@@H]1CCCC[C@@H]1O",
                "C#CCCCN(C)[C@H]1CCCC[C@H]1O",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1O"
            ],
            "total_raw_response_smiles": [
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1O",
                "C#CCCCN(C)[C@H]1CCCC[C@H]1O",
                "C#CCCCN(C)[C@@H]1CCCC[C@@H]1O",
                "C#CCCCN(C)[C@H]1CCCC[C@@H]1O",
                "C#CCCCN(C)[C@@H]1CCC[C@H](O)C1",
                "C#CCCCN(C)[C@H]1CCC[C@H](O)C1",
                "C#CCCCN(C)[C@@H]1CCC[C@@H](O)C1",
                "C#CCCCN(C)[C@H]1CCC[C@@H](O)C1",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1F",
                "C#CCCCN(C)[C@H]1CCCC[C@H]1F"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006414651870727539,
            "chemical_diversity": 0.3053019248141198,
            "average_molecular_weight": 195.70420000000001,
            "api_call_time": 8.58411955833435
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CCCCN(C)[C@@H]1CCCC[C@H]1O', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(F)cc2)CC1",
                "COc1ccc(C(=O)N2CCN(C(=O)c3ccco3)CC2)cc1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(F)(F)F)cc2)o1",
                "O=C(CSc1ncccn1)Nc1ccc(C(F)(F)F)cc1",
                "Cc1ccc(NC(=O)CSc2nnc(C)s2)cc1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "O=C(CCc1ccccc1)N1CCN(c2ncccn2)CC1",
                "O=C(Nc1ccc(Cl)cc1)c1ccc(CN2CCOCC2)cc1",
                "CC(=O)N1CCN(c2ccc(NC(=O)c3cccs3)cc2)CC1",
                "COc1ccc(C(=O)NCc2cccc(OC)c2)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(F)cc2)CC1",
                "COc1ccc(C(=O)N2CCN(C(=O)c3ccco3)CC2)cc1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(F)(F)F)cc2)o1",
                "O=C(CSc1ncccn1)Nc1ccc(C(F)(F)F)cc1",
                "CC(=O)N1CCN(c2ccc(NC(=O)c3cccs3)cc2)CC1",
                "O=C(Nc1ccc(Cl)cc1)c1ccc(CN2CCOCC2)cc1",
                "Cc1ccc(NC(=O)CSc2nnc(C)s2)cc1",
                "O=C(CCc1ccccc1)N1CCN(c2ncccn2)CC1",
                "COc1ccc(C(=O)NCc2cccc(OC)c2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011066675186157227,
            "chemical_diversity": 0.8002735173266423,
            "average_molecular_weight": 305.83510000000007,
            "api_call_time": 13.69839859008789
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CCCCN(C)[C@@H]1CCCC[C@H]1O', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 11,
            "number_of_valid_canonicalized_smiles": 11,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1P",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1Br",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1OC",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1I",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1Cl",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1F",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1N",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1C#N",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1OCC",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1S",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1O"
            ],
            "total_raw_response_smiles": [
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1O",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1OC",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1OCC",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1F",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1Cl",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1Br",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1I",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1N",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1S",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1P",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1C#N"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008179903030395508,
            "chemical_diversity": 0.35335776598934476,
            "average_molecular_weight": 220.3414545454545,
            "api_call_time": 9.473910808563232
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CCCCN(C)[C@@H]1CCCC[C@H]1O', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)O[C@@H]2[C@@H](CO[C@]3(COS(N)(=O)=O)OC(C)(C)O[C@@H]23)O1",
                "CC1=NN(c2cc(C)c(C)cc2C)C(=O)C1",
                "CC(=O)N1CCN(C(=O)Nc2ccc(S(=O)(=O)N3CCOCC3)cc2)CC1",
                "CC(C)=CCN1C(=O)c2ccc(C)cc2C1=O",
                "O=C(O)c1ccc2c(c1)C(=O)N(CCN1CCOCC1)C2=O",
                "O=C(NCCO)c1cccc(NC(=O)c2cc(Br)cs2)c1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "CC(C)(C)OC(=O)NCCSSCCNC(=O)OC(C)(C)C",
                "COc1ccc(C2Oc3ccccc3C(=O)C2O)cc1OC",
                "O=C(O)CNC(=O)C(c1ccccc1)N1CCSCC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)NCCSSCCNC(=O)OC(C)(C)C",
                "O=C(O)c1ccc2c(c1)C(=O)N(CCN1CCOCC1)C2=O",
                "CC1(C)O[C@@H]2CO[C@]3(COS(N)(=O)=O)OC(C)(C)O[C@H]3[C@@H]2O1",
                "CC(C)=CCN1C(=O)C2=C(C=C(C)C=C2)C1=O",
                "O=C(NCCO)c1cccc(NC(=O)c2cc(Br)cs2)c1",
                "CC1=NN(c2cc(C)c(C)cc2C)C(=O)C1",
                "O=C(O)CNC(=O)C(c1ccccc1)N1CCSCC1",
                "COc1ccc(C2Oc3ccccc3C(=O)C2O)cc1OC",
                "CC(=O)N1CCN(C(=O)Nc2ccc(S(=O)(=O)N3CCOCC3)cc2)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011419296264648438,
            "chemical_diversity": 0.8887998999511983,
            "average_molecular_weight": 308.5862000000001,
            "api_call_time": 18.72081708908081
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CCCCN(C)[C@@H]1CCCC[C@H]1O', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C#CCCCN(CC)[C@@H]1CCCC[C@H]1O",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1OC",
                "C#CCCCN(CC)[C@@H]1CCCC[C@H]1OC(C)C",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1OC(C)C",
                "C#CCCCN(CC)[C@@H]1CCCC[C@H]1OC",
                "C#CCCCN(CC)[C@@H]1CCCC[C@H]1OC(C)(C)C",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1OC(C)(C)C",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1OCC",
                "C#CCCCN(CC)[C@@H]1CCCC[C@H]1OCC",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1O"
            ],
            "total_raw_response_smiles": [
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1O",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1OC",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1OCC",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1OC(C)C",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1OC(C)(C)C",
                "C#CCCCN(CC)[C@@H]1CCCC[C@H]1O",
                "C#CCCCN(CC)[C@@H]1CCCC[C@H]1OC",
                "C#CCCCN(CC)[C@@H]1CCCC[C@H]1OCC",
                "C#CCCCN(CC)[C@@H]1CCCC[C@H]1OC(C)C",
                "C#CCCCN(CC)[C@@H]1CCCC[C@H]1OC(C)(C)C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0071926116943359375,
            "chemical_diversity": 0.3975922935150714,
            "average_molecular_weight": 230.37349999999998,
            "api_call_time": 9.769538402557373
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CCCCN(C)[C@@H]1CCCC[C@H]1O', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1=NN(c2ccc(C(=O)O)cc2)C(=O)C1",
                "O=C1OC2(CCCCC2)C(=O)N1c1ccc(F)cc1",
                "Cc1nnc(SCC(=O)Nc2ccccc2)n1C",
                "COc1cc(C=NNC(=O)c2ccncc2)ccc1O",
                "N#Cc1ccc(C(=O)NCc2ccco2)cc1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCCC2)cc1)c1ccco1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "O=C1CCc2ccc(S(=O)(=O)N3CCOCC3)cc2N1",
                "COc1ccc(-c2n[nH]c(=O)c3ccccc23)cc1OC",
                "O=C(O)c1ccc(NC(=O)c2cccs2)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccc(Cl)cc1",
                "C1CC(=O)NC2=C1C=CC(=C2)S(=O)(=O)N1CCOCC1",
                "C1CCC2(CC1)OC(=O)N(C2=O)c1ccc(F)cc1",
                "O=C(NCc1ccco1)c1ccc(C#N)cc1",
                "COc1ccc(C2=NNC(=O)c3ccccc32)cc1OC",
                "CC1=NN(C(=O)C1)c1ccc(C(=O)O)cc1",
                "O=C(O)c1ccc(NC(=O)c2cccs2)cc1",
                "Cc1nnc(SCC(=O)Nc2ccccc2)n1C",
                "O=C(Nc1ccc(S(=O)(=O)N2CCCC2)cc1)c1ccco1",
                "COc1cc(C=NNC(=O)c2ccncc2)ccc1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011703014373779297,
            "chemical_diversity": 0.8573715754660105,
            "average_molecular_weight": 267.13349999999997,
            "api_call_time": 17.36312770843506
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CCCCN(C)[C@@H]1CCCC[C@H]1O', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1Br",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1I",
                "C#CCCCN(C)[C@H]1CCCC[C@@H]1O",
                "C#CCCCN(C)[C@@H]1CCC[C@H](O)C1",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1Cl",
                "C#CCCCN(C)[C@@H]1CCC=C[C@H]1O",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1N",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1F",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1S",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1O"
            ],
            "total_raw_response_smiles": [
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1O",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1N",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1S",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1F",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1Cl",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1Br",
                "C#CCCCN(C)[C@@H]1CCCC[C@H]1I",
                "C#CCCCN(C)[C@@H]1CCC[C@H](O)C1",
                "C#CCCCN(C)[C@@H]1CCC=C[C@H]1O",
                "C#CCCCN(C)[C@H]1CCCC[C@@H]1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006371259689331055,
            "chemical_diversity": 0.3844893974956367,
            "average_molecular_weight": 215.9359,
            "api_call_time": 9.243340015411377
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CCCCN(C)[C@@H]1CCCC[C@H]1O', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C#CCCCN(C)C1CCSC1=O",
                "C#CCCCN(C)C1CCNC1=O",
                "C#CCCCN(C)C1CCOCC1O",
                "C#CCCCN(C)C1CC=CC1O",
                "C#CCCCN(C)C1CCOC1=O",
                "C=CCCCN(C)C1CCNCC1O",
                "C#CCCCN(C)C1CC=NC1O",
                "C#CCCCN(C)C1CCCNC1O",
                "C#CCCCN(C)C1CCCCC1S",
                "C#CCCCN(C)C1CCSCC1O"
            ],
            "total_raw_response_smiles": [
                "C#CCCCN(C)C1CCCCC1S",
                "C=CCCCN(C)C1CCNCC1O",
                "C#CCCCN(C)C1CCOCC1O",
                "C#CCCCN(C)C1CCSCC1O",
                "C#CCCCN(C)C1CCNC1=O",
                "C#CCCCN(C)C1CC=CC1O",
                "C#CCCCN(C)C1CCCNC1O",
                "C#CCCCN(C)C1CCOC1=O",
                "C#CCCCN(C)C1CCSC1=O",
                "C#CCCCN(C)C1CC=NC1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.005803823471069336,
            "chemical_diversity": 0.5686086157850179,
            "average_molecular_weight": 193.4905,
            "api_call_time": 8.411385297775269
        }
    ],
    "O=C1CC[C@@H](C(=O)NCC#CCO)C1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C1CC[C@@H](C(=O)NCC#CCO)C1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1CC[C@@H](C(=O)NCCC#CCO)C1",
                "O=C1CC[C@@H](C(=O)NCC#CC(O)CO)C1",
                "CCCC(=O)OCC#CCNC(=O)[C@@H]1CCC(=O)C1",
                "CC(=O)OCC#CCNC(=O)[C@@H]1CCC(=O)C1",
                "CCC(=O)OCC#CCNC(=O)[C@@H]1CCC(=O)C1",
                "COCC#CCNC(=O)[C@@H]1CCC(=O)C1",
                "O=C1CC[C@@H](C(=O)NC#CCO)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCO)C1",
                "O=C1CC[C@H](C(=O)NCC#CCO)C1"
            ],
            "total_raw_response_smiles": [
                "O=C1CC[C@@H](C(=O)NCC#CCO)C1",
                "O=C1CC[C@H](C(=O)NCC#CCO)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCOC)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCOC(=O)C)C1",
                "O=C1CC[C@@H](C(=O)NCCC#CCO)C1",
                "O=C1CC[C@@H](C(=O)NC#CCO)C1",
                "O=C1CC[C@@H](C(=O)NCC#CC(O)CO)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCOC(C)=O)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCOC(=O)CC)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCOC(=O)CCC)C1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.0062160491943359375,
            "chemical_diversity": 0.34519971133641303,
            "average_molecular_weight": 218.80077777777774,
            "api_call_time": 9.71127700805664
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C1CC[C@@H](C(=O)NCC#CCO)C1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1c(NC(=O)c2ccccc2)c(=O)c2c(=O)c3c(=O)c(N)c(N)c(=O)c3c(=O)c2c1=O",
                "Cn1cc(C(=O)Nc2cccc(C(F)(F)F)c2)c2ccccc21",
                "Cc1nc(-c2ccccc2)c(C(=O)O)n1Cc1ccc(F)cc1",
                "COc1ccc(C(=O)NCCc2c[nH]c3ccc(OC)cc23)cc1",
                "O=C(NCCc1cccs1)c1ccc2ncsc2c1",
                "COc1ccc(C(=O)NCCN2CCOCC2)cc1OC",
                "O=C(Nc1ccccc1)c1csc(-c2ccco2)n1",
                "Nc1nc(=O)c2ncn(C3OC(CO)C(O)C3O)c2[nH]1",
                "CC(C)(C)OC(=O)N1CCC(OC(=O)c2ccccc2)CC1",
                "Cc1nnc2n1C(=O)C(NC(=O)c1ccc(O)cc1)c1cc(Cl)ccc1-2"
            ],
            "total_raw_response_smiles": [
                "NC1=NC(=O)C2=C(N1)N(C=N2)C1OC(CO)C(O)C1O",
                "CC1=C(C(=O)C2=C(C1=O)C(=O)C1=C(C2=O)C(=O)C(N)=C(N)C1=O)NC(=O)C1=CC=CC=C1",
                "CC1=NN=C2N1C(=O)C(NC(=O)C1=CC=C(O)C=C1)C1=C2C=CC(Cl)=C1",
                "COC1=CC=C(C=C1)C(=O)NCCC1=CNC2=C1C=C(OC)C=C2",
                "CC(C)(C)OC(=O)N1CCC(CC1)OC(=O)C1=CC=CC=C1",
                "O=C(NCCC1=CC=CS1)C1=CC2=C(C=C1)N=CS2",
                "COC1=C(OC)C=C(C=C1)C(=O)NCCN1CCOCC1",
                "O=C(NC1=CC=CC=C1)C1=CSC(=N1)C1=CC=CO1",
                "CC1=NC(=C(N1CC1=CC=C(C=C1)F)C(=O)O)C1=CC=CC=C1",
                "CN1C=C(C2=CC=CC=C21)C(=O)NC1=CC(=CC=C1)C(F)(F)F"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.01153111457824707,
            "chemical_diversity": 0.8365954864367695,
            "average_molecular_weight": 319.4825000000001,
            "api_call_time": 21.9002525806427
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C1CC[C@@H](C(=O)NCC#CCO)C1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 11,
            "number_of_valid_canonicalized_smiles": 11,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=CCCNC(=O)[C@@H]1CCC(=O)C1",
                "O=C1CC[C@@H](C(=O)NCCCO)C1",
                "CC(=O)OCCCCNC(=O)[C@@H]1CCC(=O)C1",
                "COCCCCNC(=O)[C@@H]1CCC(=O)C1",
                "CC(=O)OCC#CCNC(=O)[C@@H]1CCC(=O)C1",
                "CCC(=O)OCC#CCNC(=O)[C@@H]1CCC(=O)C1",
                "COCC#CCNC(=O)[C@@H]1CCC(=O)C1",
                "O=C1CC[C@@H](C(=O)NCCCCO)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCO)C1",
                "N#CCCNC(=O)[C@@H]1CCC(=O)C1",
                "O=C(O)CCNC(=O)[C@@H]1CCC(=O)C1"
            ],
            "total_raw_response_smiles": [
                "O=C1CC[C@@H](C(=O)NCC#CCO)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCOC)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCOC(=O)C)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCOC(=O)CC)C1",
                "O=C1CC[C@@H](C(=O)NCCCCO)C1",
                "O=C1CC[C@@H](C(=O)NCCCCOC)C1",
                "O=C1CC[C@@H](C(=O)NCCCCOC(=O)C)C1",
                "O=C1CC[C@@H](C(=O)NCCC#N)C1",
                "O=C1CC[C@@H](C(=O)NCCC=O)C1",
                "O=C1CC[C@@H](C(=O)NCCCO)C1",
                "O=C1CC[C@@H](C(=O)NCCC(=O)O)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0073089599609375,
            "chemical_diversity": 0.40309384636755285,
            "average_molecular_weight": 208.6051818181818,
            "api_call_time": 12.309178829193115
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C1CC[C@@H](C(=O)NCC#CCO)C1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCNC(=O)c1cnc2ccc(OC)cn12",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccco2)CC1",
                "O=S(=O)(Nc1nc2ccccc2o1)C1CCCCC1",
                "CCOC(=O)c1c(C)[nH]c2c1C(=O)C(CO)CN2C",
                "COc1ccc(C(=O)NCCN2CCOCC2)cc1OC",
                "O=C(Cc1ccccc1)Nc1nnc(-c2ccco2)s1",
                "CC1=NN(c2cccc(OCC(=O)O)c2)C(=O)C1",
                "Cc1ccc(C(=O)Nc2nccs2)cc1",
                "O=C(NCCc1c[nH]c2ccccc12)c1ccc(F)cc1",
                "CC(C)NCC(=O)Nc1ccc(Cl)c(C(F)(F)F)c1"
            ],
            "total_raw_response_smiles": [
                "CC1=CC=C(C=C1)C(=O)NC2=NC=CS2",
                "CC(C)(C)OC(=O)N1CCC(CC1)NC(=O)C2=CC=CO2",
                "C1=CC(=CC=C1C(=O)NCCC2=CNC3=C2C=CC=C3)F",
                "CCOC(=O)C1=C(C)NC2=C1C(=O)C(CN2C)CO",
                "O=C(CC1=CC=CC=C1)NC2=NN=C(S2)C3=CC=CO3",
                "COC1=C(OC)C=C(C=C1)C(=O)NCCN2CCOCC2",
                "CC1=NN(C(=O)C1)C2=CC(=CC=C2)OCC(=O)O",
                "C1CCC(CC1)S(=O)(=O)NC2=NC3=CC=CC=C3O2",
                "CC(C)NCC(=O)NC1=CC(=C(C=C1)Cl)C(F)(F)F",
                "CCNC(=O)C1=CN=C2N1C=C(C=C2)OC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0044329166412353516,
            "chemical_diversity": 0.847492601962093,
            "average_molecular_weight": 268.3461000000001,
            "api_call_time": 19.01683807373047
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C1CC[C@@H](C(=O)NCC#CCO)C1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCCC(=O)OCC#CCNC(=O)[C@@H]1CCC(=O)C1",
                "CCCC(=O)OCC#CCNC(=O)[C@@H]1CCC(=O)C1",
                "CC(=O)OCC#CCNC(=O)[C@@H]1CCC(=O)C1",
                "CCC(=O)OCC#CCNC(=O)[C@@H]1CCC(=O)C1",
                "CS(=O)(=O)OCC#CCNC(=O)[C@@H]1CCC(=O)C1",
                "COCC#CCNC(=O)[C@@H]1CCC(=O)C1",
                "O=C1CC[C@@H](C(=O)NCCCCO)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCO)C1"
            ],
            "total_raw_response_smiles": [
                "O=C1CC[C@@H](C(=O)NCC#CCO)C1",
                "O=C1CC[C@@H](C(=O)NCCCCO)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCOC)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCOC(=O)C)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCOC(C)=O)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCOS(=O)(=O)C)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCOS(C)(=O)=O)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCOC(=O)CC)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCOC(=O)CCC)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCOC(=O)CCCC)C1"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.006941795349121094,
            "chemical_diversity": 0.342013645868127,
            "average_molecular_weight": 238.77562499999996,
            "api_call_time": 11.719546794891357
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C1CC[C@@H](C(=O)NCC#CCO)C1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1ccc(-c2n[nH]c(=O)c3ccc(Cl)cc23)cc1Br",
                "Cn1c(SCC(=O)NC(C)(C)C)nnc1-c1ccco1",
                "Cc1cc(C(=O)NC2CCCCC2)n(-c2ccccc2)n1",
                "O=C(NCc1ccncc1)c1ccc2c(c1)C(=O)N(CCO)C2",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Cl)cc1C2",
                "COc1cc(C=NNC(=O)c2ccco2)cc(OC)c1OC",
                "O=C(O)C1=Cc2ccccc2OC1c1cccs1",
                "CC1(C)OB(c2ccc(C#N)cc2)OC1(C)C",
                "CC(C)(C)OC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "O=C(Nc1ccc(F)cc1)C1CCN(Cc2ccccc2)CC1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)OC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "O=C(NCc1ccncc1)c1ccc2c(c1)C(=O)N(CCO)C2",
                "COc1ccc(C2=NNC(=O)C3=C2C=C(Cl)C=C3)cc1Br",
                "CC1(C)OB(c2ccc(C#N)cc2)OC1(C)C",
                "CC(C)(C)NC(=O)CSc1nnc(-c2ccco2)n1C",
                "O=C(Nc1ccc(F)cc1)C1CCN(Cc2ccccc2)CC1",
                "Cc1cc(C(=O)NC2CCCCC2)n(-c2ccccc2)n1",
                "O=C(O)C1=Cc2ccccc2OC1c1cccs1",
                "COc1cc(C=NNC(=O)c2ccco2)cc(OC)c1OC",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Cl)cc1C2"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010467767715454102,
            "chemical_diversity": 0.8779826200882078,
            "average_molecular_weight": 296.2955,
            "api_call_time": 16.97965955734253
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C1CC[C@@H](C(=O)NCC#CCO)C1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 11,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "NCC#CCNC(=O)[C@@H]1CCC(=O)C1",
                "N=C(NCC#CCO)[C@@H]1CCC(=O)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCS)C1",
                "CC(O)C#CCNC(=O)[C@@H]1CCC(=O)C1",
                "O=C1CCC(C(=O)NCC#CCO)C1",
                "COCC#CCNC(=O)[C@@H]1CCC(=O)C1",
                "O=C1CC[C@@H](C(=O)NCC=CCO)C1",
                "O=C1CC[C@@H](C(=O)NC#CCO)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCO)C1",
                "O=C1CC[C@H](C(=O)NCC#CCO)C1"
            ],
            "total_raw_response_smiles": [
                "O=C1CC[C@@H](C(=O)NCC#CCO)C1",
                "O=C1CC[C@H](C(=O)NCC#CCO)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCN)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCS)C1",
                "O=C1CC[C@@H](C(=O)NCC#CC(O)C)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCOC)C1",
                "O=C1CCC(C(=O)NCC#CCO)C1",
                "O=C1CC[C@@H](C(=O)NCC=CCO)C1",
                "O=C1CC[C@@H](C(=O)NC#CCO)C1",
                "O=C1CC[C@@H](C(=N)NCC#CCO)C1",
                "O=C1CC[C@@H](C(=O)NCC#CCOH)C1"
            ],
            "validity_ratio": 0.9090909090909091,
            "post_processing_time": 0.006398200988769531,
            "chemical_diversity": 0.3347927494930708,
            "average_molecular_weight": 198.23229999999995,
            "api_call_time": 10.240981578826904
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C1CC[C@@H](C(=O)NCC#CCO)C1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1CCC(C(=O)NCc2nnn[nH]2)CC1",
                "O=C1CCC(C(=O)NCCc2ccccc2)CC1",
                "O=C1CCC(C(=O)NCc2cscn2)C1",
                "O=C1CCC(C(=O)NCc2cccs2)CC1",
                "O=C1CCC(C(=O)NCc2ccncc2)C1",
                "O=C1CCC(C(=O)NCc2ncns2)C1",
                "O=C1CCC(C(=O)NCc2ncncn2)CC1",
                "O=C1CCC(C(=O)NCc2ccc(=O)[nH]n2)C1",
                "O=C1CCC(C(=O)NCCS(=O)(=O)O)C1",
                "O=C1CCC(C(=O)NCc2cnsn2)CC1"
            ],
            "total_raw_response_smiles": [
                "O=C1CCC(C(=O)NCCc2ccccc2)CC1",
                "O=C1CCC(C(=O)NCCS(=O)(=O)O)C1",
                "O=C1CCC(C(=O)NCC2=NNC(=O)C=C2)C1",
                "O=C1CCC(C(=O)NCC2=CC=CS2)CC1",
                "O=C1CCC(C(=O)NCC2=CC=NC=C2)C1",
                "O=C1CCC(C(=O)NCC2=NN=NN2)CC1",
                "O=C1CCC(C(=O)NCC2=NSN=C2)CC1",
                "O=C1CCC(C(=O)NCC2=NC=NS2)C1",
                "O=C1CCC(C(=O)NCC2=NC=NC=N2)CC1",
                "O=C1CCC(C(=O)NCC2=CSC=N2)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008377313613891602,
            "chemical_diversity": 0.5285986834676839,
            "average_molecular_weight": 231.77589999999995,
            "api_call_time": 10.417722940444946
        }
    ],
    "C=C=CCNC(=O)NCCCC#N": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C=CCNC(=O)NCCCC#N', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=CCCNC(=O)NCCCC#N",
                "C#CCCCNC(=O)NCC=C=C",
                "C=C=CCNC(=N)NCCCC#N",
                "C=C=CCN(C)C(=O)NCCCC#N",
                "C=C=CCNC(=O)NCCC(C)C#N",
                "C=C=CCNC(=O)NC(C)CCC#N",
                "C=C=CCNC(=O)NCCCCN",
                "C=C=CCNC(=O)NC(CC)CC#N",
                "C=C=CCNC(=O)NCC(C)CC#N",
                "C=C=CCNC(=O)NCCCCC#N"
            ],
            "total_raw_response_smiles": [
                "C=C=CCNC(=O)NCCCCN",
                "C=C=CCNC(=O)NCCCC#C",
                "C=CCCNC(=O)NCCCC#N",
                "C=C=CCNC(=O)NCCCCC#N",
                "C=C=CCNC(=O)NC(C)CCC#N",
                "C=C=CCNC(=O)NC(CC)CC#N",
                "C=C=CCNC(=O)NCC(C)CC#N",
                "C=C=CCNC(=O)NCCC(C)C#N",
                "C=C=CCN(C)C(=O)NCCCC#N",
                "C=C=CCNC(=N)NCCCC#N"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004652738571166992,
            "chemical_diversity": 0.5263082038757985,
            "average_molecular_weight": 188.0468,
            "api_call_time": 9.824353456497192
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C=CCNC(=O)NCCCC#N', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(Nc1ccccc1)c1cscn1",
                "O=C(NC1CCCCC1)c1cccs1",
                "O=C(NCc1ccccn1)c1ccccn1",
                "O=C1NC(=O)N(CCCO)C1=O",
                "O=C(NCCc1ccco1)c1ccncc1",
                "O=C(Nc1ccc(F)cc1)N1CCNCC1",
                "C#CC(CO)NC(=O)c1cccc(Cl)c1",
                "O=C(Nc1ccc(Br)cc1)c1ccns1",
                "O=C(NCCc1cccs1)c1ccon1",
                "C#CCNC(=O)c1ccc(Cl)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)N1CCCO",
                "C1CCC(CC1)NC(=O)C2=CC=CS2",
                "C#CCNC(=O)C1=CC=C(C=C1)Cl",
                "O=C(NCCC1=CC=CO1)C2=CC=NC=C2",
                "C1CN(CCN1)C(=O)NC2=CC=C(C=C2)F",
                "O=C(NC1=CC=CC=C1)C2=CSC=N2",
                "C1=CC(=CC=C1NC(=O)C2=CC=NS2)Br",
                "O=C(NCCC1=CC=CS1)C2=NOC=C2",
                "C1=CN=C(C=C1)CNC(=O)C2=CC=CC=N2",
                "C#CC(NC(=O)C1=CC(=CC=C1)Cl)CO"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007662296295166016,
            "chemical_diversity": 0.8094485710805696,
            "average_molecular_weight": 216.115,
            "api_call_time": 13.156735181808472
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C=CCNC(=O)NCCCC#N', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C=CCNC(=O)NCCCC(C)=O",
                "C=C=CCNC(=O)NCCCC(F)F",
                "C=C=CCNC(=O)NCCCC(N)N",
                "C=C=CCNC(=O)NCCCC#N",
                "C=C=CCNC(=O)NCCCCO",
                "C=C=CCNC(=O)NCCCCF",
                "C=C=CCNC(=O)NCCCCN",
                "C=C=CCNC(=O)NCCCC(=O)O",
                "C=C=CCNC(=O)NCCCC(N)=O"
            ],
            "total_raw_response_smiles": [
                "C=C=CCNC(=O)NCCCC#N",
                "C=C=CCNC(=O)NCCCCO",
                "C=C=CCNC(=O)NCCCCF",
                "C=C=CCNC(=O)NCCCC(F)F",
                "C=C=CCNC(=O)NCCCCN",
                "C=C=CCNC(=O)NCCCC(N)N",
                "C=C=CCNC(=O)NCCCC(=O)O",
                "C=C=CCNC(=O)NCCCC(=O)N",
                "C=C=CCNC(=O)NCCCC(O)=O",
                "C=C=CCNC(=O)NCCCC(C)=O"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.004534006118774414,
            "chemical_diversity": 0.3329558473214951,
            "average_molecular_weight": 191.90522222222216,
            "api_call_time": 8.178349018096924
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C=CCNC(=O)NCCCC#N', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCCNC(=O)CCCCCCCCC(=O)NCCCC",
                "CCOC(=O)C(C)(C)OC(=O)c1ccco1",
                "O=C(O)c1ccccc1Nc1ccncc1",
                "O=C1NC(=O)c2ccccc21",
                "O=C1NC(=O)C(=O)N1",
                "Cc1ccc(C(=O)Nc2nnc(C)s2)cc1",
                "COc1ccc(CC(=O)Nc2ccccc2)cc1OC",
                "Cc1cc(=O)[nH]c2cc(Oc3ccccc3Cl)ccc12",
                "Cc1ccc(S(=O)(=O)Nc2ccc(Cl)cn2)cc1",
                "CC(C)(C)OC(=O)NCCCCCCNC(=O)OC(C)(C)C"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)N1",
                "CC1=CC=C(C=C1)S(=O)(=O)NC2=NC=C(Cl)C=C2",
                "C1=CC=C2C(=O)NC(=O)C2=C1",
                "CC(C)(C)OC(=O)NCCCCCCNC(=O)OC(C)(C)C",
                "O=C(O)C1=CC=CC=C1NC2=CC=NC=C2",
                "CCOC(=O)C(C)(C)OC(=O)C1=CC=CO1",
                "CC1=NN=C(NC(=O)C2=CC=C(C)C=C2)S1",
                "COC1=C(OC)C=C(CC(=O)NC2=CC=CC=C2)C=C1",
                "CC1=CC(=O)NC2=C1C=CC(=C2)OC3=CC=CC=C3Cl",
                "CCCCNC(=O)CCCCCCCCC(=O)NCCCC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008696556091308594,
            "chemical_diversity": 0.8761986209383431,
            "average_molecular_weight": 240.36790000000002,
            "api_call_time": 14.490543365478516
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C=CCNC(=O)NCCCC#N', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C=CCNC(=O)NCCCCCCC#N",
                "C=C=CCNC(=O)NCCCCCCCC#N",
                "C=C=CCNC(=O)NCCCC#N",
                "C=C=CCNC(=O)NC#N",
                "C=C=CCNC(=O)NCCCCCC#N",
                "C=C=CCNC(=O)NCCCCCCCCCC#N",
                "C=C=CCNC(=O)NCCCCC#N",
                "C=C=CCNC(=O)NCC#N",
                "C=C=CCNC(=O)NCCC#N",
                "C=C=CCNC(=O)NCCCCCCCCC#N"
            ],
            "total_raw_response_smiles": [
                "C=C=CCNC(=O)NCCCC#N",
                "C=C=CCNC(=O)NCCCCC#N",
                "C=C=CCNC(=O)NCCCCCC#N",
                "C=C=CCNC(=O)NCC#N",
                "C=C=CCNC(=O)NC#N",
                "C=C=CCNC(=O)NCCC#N",
                "C=C=CCNC(=O)NCCCCCCC#N",
                "C=C=CCNC(=O)NCCCCCCCC#N",
                "C=C=CCNC(=O)NCCCCCCCCC#N",
                "C=C=CCNC(=O)NCCCCCCCCCC#N"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00391387939453125,
            "chemical_diversity": 0.20739017494868217,
            "average_molecular_weight": 200.26349999999994,
            "api_call_time": 7.929570913314819
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C=CCNC(=O)NCCCC#N', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1NC(=O)N(CC2CC2c2ccccc2)C1=O",
                "COc1cccc(CN2CCN(C(=O)Nc3ccc4c(c3)OCO4)CC2)c1",
                "O=C(CN1CCN(c2ccc(F)cc2)CC1)Nc1ccc(Br)cn1",
                "Cc1nnc(SCC(=O)N2CCN(c3ncccn3)CC2)s1",
                "Cc1cc(C(=O)NC2CCN(Cc3c[nH]c4ccccc34)CC2)no1",
                "O=C(CSc1nnc(-c2cccc(Cl)c2)o1)N1CCCCC1",
                "COc1ccc(C(=O)N2CCN(CC(=O)N3CCOCC3)CC2)cc1",
                "CC(C)Oc1ccc(C(=O)N2CCN(C(=O)c3cccs3)CC2)cc1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(Cl)cc2)CC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)N1CC1CC1c1ccccc1",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(Cl)cc2)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "COc1ccc(C(=O)N2CCN(CC(=O)N3CCOCC3)CC2)cc1",
                "Cc1nnc(SCC(=O)N2CCN(c3ncccn3)CC2)s1",
                "O=C(CSc1nnc(-c2cccc(Cl)c2)o1)N1CCCCC1",
                "Cc1cc(C(=O)NC2CCN(Cc3c[nH]c4ccccc34)CC2)no1",
                "O=C(CN1CCN(c2ccc(F)cc2)CC1)Nc1ccc(Br)cn1",
                "CC(C)Oc1ccc(C(=O)N2CCN(C(=O)c3cccs3)CC2)cc1",
                "COc1cccc(CN2CCN(C(=O)Nc3ccc4c(c3)OCO4)CC2)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012821674346923828,
            "chemical_diversity": 0.8140729617642515,
            "average_molecular_weight": 338.66750000000013,
            "api_call_time": 15.559025287628174
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C=CCNC(=O)NCCCC#N', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C=CCNC(=O)NCCCC=N",
                "C=CCCNC(=O)NCCCC#N",
                "C#CCCCNC(=O)NCC=C=C",
                "C=C=CCNC(=S)NCCCC#N",
                "C=C=CCSC(=O)NCCCC#N",
                "C=C=CC[N+](C)(C)C(=O)NCCCC#N",
                "C=C=CCNC(=O)NCCCC#N",
                "C=C=CCNC(=N)NCCCC#N",
                "C=C=CCOC(=O)NCCCC#N",
                "C=C=CCNC(=O)NCCCCC#N"
            ],
            "total_raw_response_smiles": [
                "C=C=CCNC(=O)NCCCC#N",
                "C=CCCNC(=O)NCCCC#N",
                "C=C=CCNC(=O)NCCCCC#N",
                "C=C=CCNC(=O)NCCCC=N",
                "C=C=CCNC(=O)NCCCC#C",
                "C=C=CCNC(=N)NCCCC#N",
                "C=C=CCNC(=S)NCCCC#N",
                "C=C=CCOC(=O)NCCCC#N",
                "C=C=CCSC(=O)NCCCC#N",
                "C=C=CC[N+](C)(C)C(=O)NCCCC#N"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004535675048828125,
            "chemical_diversity": 0.47439171051666573,
            "average_molecular_weight": 187.14829999999992,
            "api_call_time": 7.374253273010254
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C=CCNC(=O)NCCCC#N', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C#N)CNC(=O)NC1CCNCC1",
                "C#CCNC(=O)NCCC1CCCO1",
                "CC(C)CNC(=O)NCC1CCOC1",
                "C=CCNC(=O)NC1CCC(F)CC1",
                "C=CCNC(=O)NCC1CCSC1",
                "C=CC(=O)NC(CC#N)C(=O)NCC",
                "O=C(NCCF)NCC1CCCCC1",
                "C=C(C)CNC(=O)NC1CCCCC1",
                "C=CCNC(=O)NC1CCCC(Cl)C1",
                "C#CC(CNC(=O)NCC)C(C)C"
            ],
            "total_raw_response_smiles": [
                "C=C(C)CNC(=O)NC1CCCCC1",
                "C#CCNC(=O)NCCC1CCCO1",
                "C=CCNC(=O)NC1CCC(F)CC1",
                "CC(C#N)CNC(=O)NC1CCNCC1",
                "C=CC(=O)NC(CC#N)C(=O)NCC",
                "C1CCC(CNC(=O)NCCF)CC1",
                "C=CCNC(=O)NCC1CCSC1",
                "CC(C)CNC(=O)NCC1CCOC1",
                "C=CCNC(=O)NC1CCCC(Cl)C1",
                "C#CC(CNC(=O)NCC)C(C)C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.005861759185791016,
            "chemical_diversity": 0.745994872889714,
            "average_molecular_weight": 200.01449999999997,
            "api_call_time": 9.608333110809326
        }
    ],
    "C=CC(=O)NCCc1cnc(C)o1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=CC(=O)NCCc1cnc(C)o1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=CC(=O)NCCc1cnc(C)o1",
                "CC(=O)NCCc1cnc(C)o1",
                "C=CC(=O)CCCc1cnc(C)o1",
                "C=CC(=O)NCCc1cnc(C)s1",
                "C=CC(=O)NCCc1ncc(C)o1",
                "C=CC(=O)NCCc1ccc(C)o1",
                "CCC(=O)NCCc1cnc(C)o1",
                "C=CC(=O)NCCc1cnc(CC)o1",
                "C=CC(=O)NCc1cnc(C)o1"
            ],
            "total_raw_response_smiles": [
                "C=CC(=O)NCCc1cnc(C)o1",
                "C=CC(=O)NCCc1cnc(CC)o1",
                "C=CC(=O)NCCc1cnc(C)s1",
                "C=CC(=O)NCCc1ncc(C)o1",
                "CCC(=O)NCCc1cnc(C)o1",
                "C=CC(=O)NCc1cnc(C)o1",
                "C=CC(=O)NCCc1ccc(C)o1",
                "C=CC(=O)NCCc1cnc(C)n1",
                "CC(=O)NCCc1cnc(C)o1",
                "C=CC(=O)CCCc1cnc(C)o1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.006821632385253906,
            "chemical_diversity": 0.4894083056510835,
            "average_molecular_weight": 180.6622222222222,
            "api_call_time": 7.521572828292847
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=CC(=O)NCCc1cnc(C)o1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccoc1",
                "Cc1nc(SCC(=O)Nc2cccc(Cl)c2)sc1C1CCCC1",
                "CC1=NN(c2cc(Cl)ccc2O)C(=O)C1=Cc1ccco1",
                "CC(=O)N1CCN(c2ccc(OC(F)(F)F)cc2)CC1",
                "O=C(CSc1nnc(-c2ccco2)n1Cc1ccccc1)NCc1ccco1",
                "Cc1cc(C(=O)CSc2nnc(C)s2)c[nH]1",
                "COc1ccc(-c2cc(C(F)(F)F)nn2-c2ccccc2)cn1",
                "O=c1[nH]cc(-c2ccccc2)c(=O)[nH]1",
                "CC(C)(C)OC(=O)N1CCC(CNc2nccs2)CC1",
                "COc1ccc(C2C(C(=O)O)=C(C)NC3=C2C(=O)CCC3)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=CN1",
                "CC(C)(C)OC(=O)N1CCC(CNc2nccs2)CC1",
                "COc1ccc(C2C(C(=O)O)=C(C)NC3=C2C(=O)CCC3)cc1",
                "CC1=NN(c2cc(Cl)ccc2O)C(=O)C1=Cc1ccco1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccoc1",
                "Cc1nc(SCC(=O)Nc2cccc(Cl)c2)sc1C1CCCC1",
                "CC(=O)N1CCN(c2ccc(OC(F)(F)F)cc2)CC1",
                "O=C(CSc1nnc(-c2ccco2)n1Cc1ccccc1)NCc1ccco1",
                "Cc1cc(C(=O)CSc2nnc(C)s2)c[nH]1",
                "COc1ccc(-c2cc(C(F)(F)F)nn2-c2ccccc2)cn1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010865449905395508,
            "chemical_diversity": 0.8692662899161893,
            "average_molecular_weight": 306.03510000000006,
            "api_call_time": 17.735724687576294
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=CC(=O)NCCc1cnc(C)o1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=CC(=O)NCCc1cnc(I)o1",
                "C=CC(=O)NCCc1cnc(C)o1",
                "C=CC(=O)NCCc1cnc(N)o1",
                "C=CC(=O)NCCc1cnc(Cl)o1",
                "C=CC(=O)NCCc1cnc(S)o1",
                "C=CC(=O)NCCc1cnc([N+](=O)[O-])o1",
                "C=CC(=O)NCCc1cnc(O)o1",
                "C=CC(=O)NCCc1cnc(F)o1",
                "C=CC(=O)NCCc1cnc(Br)o1",
                "C=CC(=O)NCCc1cnc(CC)o1"
            ],
            "total_raw_response_smiles": [
                "C=CC(=O)NCCc1cnc(C)o1",
                "C=CC(=O)NCCc1cnc(CC)o1",
                "C=CC(=O)NCCc1cnc(O)o1",
                "C=CC(=O)NCCc1cnc(F)o1",
                "C=CC(=O)NCCc1cnc(Cl)o1",
                "C=CC(=O)NCCc1cnc(Br)o1",
                "C=CC(=O)NCCc1cnc(I)o1",
                "C=CC(=O)NCCc1cnc(N)o1",
                "C=CC(=O)NCCc1cnc(S)o1",
                "C=CC(=O)NCCc1cnc([N+](=O)[O-])o1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006476879119873047,
            "chemical_diversity": 0.3131334622158073,
            "average_molecular_weight": 206.91859999999997,
            "api_call_time": 7.549937009811401
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=CC(=O)NCCc1cnc(C)o1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ccc(C(=O)N2CCN(c3ccccc3)CC2)cc1",
                "c1ccc(C(c2ccccc2)n2ccnc2)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccccc2)CC1",
                "O=C(O)c1ccc(NC(=O)c2ccc(Cl)cc2)cc1",
                "Cc1cc(-c2ccc(C(=O)N3CCOCC3)cc2)no1",
                "O=C1NC(=O)C(=O)N1",
                "Cc1nnc(-c2ccc(S(=O)(=O)N3CCCC3)cc2)o1",
                "CC(C)NCC(O)COc1ccccc1",
                "COc1ccc(Cl)cc1C(=O)NCCc1c[nH]c2ccccc12",
                "O=C(NC1CCCCC1)C1CCCN1C(=O)c1ccco1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)N1",
                "CC1=CC=C(C=C1)C(=O)N1CCN(CC1)C1=CC=CC=C1",
                "C1=CC=C(C=C1)C(C1=CC=CC=C1)N1C=CN=C1",
                "CC(C)(C)OC(=O)N1CCC(CC1)NC(=O)C1=CC=CC=C1",
                "C1=CC(=CC=C1C(=O)O)NC(=O)C1=CC=C(C=C1)Cl",
                "CC1=NN=C(O1)C1=CC=C(C=C1)S(=O)(=O)N1CCCC1",
                "COC1=C(C=C(C=C1)Cl)C(=O)NCCC1=CNC2=C1C=CC=C2",
                "CC(C)NCC(COC1=CC=CC=C1)O",
                "C1CCC(CC1)NC(=O)C1CCCN1C(=O)C1=CC=CO1",
                "CC1=CC(=NO1)C1=CC=C(C=C1)C(=O)N1CCOCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010339021682739258,
            "chemical_diversity": 0.8653678784604317,
            "average_molecular_weight": 260.2917,
            "api_call_time": 15.361239433288574
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=CC(=O)NCCc1cnc(C)o1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=CC(=O)NCCc1cnc(C)o1",
                "C=CC(=O)NCCc1cnc(N)o1",
                "C=CC(=O)NCCc1cnc(Cl)o1",
                "C=CC(=O)NCCc1cnc(S)o1",
                "C=CC(=O)NCCc1cnc(O)o1",
                "C=CC(=O)NCCc1cnc(F)o1",
                "C=CC(=O)NCCc1cnc(CCC)o1",
                "C=CC(=O)NCCc1cnc(OC)o1",
                "C=CC(=O)NCCc1cnc(Br)o1",
                "C=CC(=O)NCCc1cnc(CC)o1"
            ],
            "total_raw_response_smiles": [
                "C=CC(=O)NCCc1cnc(C)o1",
                "C=CC(=O)NCCc1cnc(CC)o1",
                "C=CC(=O)NCCc1cnc(CCC)o1",
                "C=CC(=O)NCCc1cnc(F)o1",
                "C=CC(=O)NCCc1cnc(Cl)o1",
                "C=CC(=O)NCCc1cnc(Br)o1",
                "C=CC(=O)NCCc1cnc(O)o1",
                "C=CC(=O)NCCc1cnc(OC)o1",
                "C=CC(=O)NCCc1cnc(N)o1",
                "C=CC(=O)NCCc1cnc(S)o1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006792306900024414,
            "chemical_diversity": 0.3087494020023799,
            "average_molecular_weight": 197.04,
            "api_call_time": 7.790629863739014
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=CC(=O)NCCc1cnc(C)o1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)Cn1c(=O)c2c(ncn2C)n(C)c1=O",
                "O=C1NC(=O)C(c2ccco2)=C1Cc1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(F)cc2)CC1",
                "O=C(O)c1ccc(NC(=O)C2CC2)c(F)c1",
                "Nc1ncnc2c1ncn2CC(=O)Nc1ccc(Br)cc1",
                "CC1=NN(C(=O)Cc2ccccc2)C(=O)C1",
                "Cc1noc(C)c1C(=O)N1CCN(c2ccccn2)CC1",
                "COc1cc(C=NNC(=O)c2ccco2)ccc1O",
                "COc1ccc(C2=NN(c3ccccc3)C(=O)CC2)cc1OC",
                "CC1(C)CC(=O)c2c([nH]c3ccc(S(=O)(=O)N4CCOCC4)cc23)C1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(Cc2ccc(Cl)cc2)=C1c1ccco1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(F)cc2)CC1",
                "COc1ccc(C2=NN(c3ccccc3)C(=O)CC2)cc1OC",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(S(=O)(=O)N3CCOCC3)cc12",
                "O=C(Cn1cnc2c(N)ncnc21)Nc1ccc(Br)cc1",
                "CC(C)Cn1c(=O)c2c(ncn2C)n(C)c1=O",
                "CC1=NN(C(=O)Cc2ccccc2)C(=O)C1",
                "O=C(O)c1ccc(NC(=O)C2CC2)c(F)c1",
                "Cc1noc(C)c1C(=O)N1CCN(c2ccccn2)CC1",
                "COc1cc(C=NNC(=O)c2ccco2)ccc1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0093536376953125,
            "chemical_diversity": 0.8717525644726292,
            "average_molecular_weight": 285.23640000000006,
            "api_call_time": 16.927134037017822
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=CC(=O)NCCc1cnc(C)o1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=CC(=O)NCCc1cnc(CC)o1",
                "CC(=O)NCCc1cnc(C)o1",
                "C=CC(=O)NCCc1cnc(C)s1",
                "C=CC(=N)NCCc1cnc(C)o1",
                "C=CC(=O)NCCCc1cnc(C)o1",
                "C=CC(=O)NCCc1csc(C)n1",
                "CCC(=O)NCCc1cnc(C)o1",
                "C=CC(=O)NCCc1ccc(C)o1",
                "C=CC(=O)NCc1cnc(C)o1"
            ],
            "total_raw_response_smiles": [
                "C=CC(=O)NCCc1cnc(C)s1",
                "C=CC(=O)NCCc1cnc(C)n1",
                "C=CC(=O)NCCc1ccc(C)o1",
                "C=CC(=O)NCCc1csc(C)n1",
                "C=CC(=O)NCc1cnc(C)o1",
                "C=CC(=O)NCCCc1cnc(C)o1",
                "C=CC(=O)NCCc1cnc(CC)o1",
                "CC(=O)NCCc1cnc(C)o1",
                "CCC(=O)NCCc1cnc(C)o1",
                "C=CC(=N)NCCc1cnc(C)o1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.00602412223815918,
            "chemical_diversity": 0.5175549362906646,
            "average_molecular_weight": 184.00655555555554,
            "api_call_time": 8.3603515625
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=CC(=O)NCCc1cnc(C)o1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=CC(=O)NCCc1nnc(C)o1",
                "C=CC(=O)NCCc1nc(C)no1",
                "C=CC(=O)NCCc1ccc(I)nc1",
                "C=CC(=O)NCCc1csc(C#N)c1",
                "C=CC(=O)NCCc1cnc(O)o1",
                "C=CC(=O)NCCc1cc(Br)cs1",
                "C=CC(=O)NCCc1ccc(F)cc1",
                "C=CC(=O)NCCc1ncc(Cl)s1",
                "C=CC(=O)NCCc1cnc(N)s1"
            ],
            "total_raw_response_smiles": [
                "C=CC(=O)NCCc1ncc(Cl)s1",
                "C=CC(=O)NCCc1ccc(F)cc1",
                "C=CC(=O)NCCc1cnc(N)s1",
                "C=CC(=O)NCCc1csc(C#N)c1",
                "C=CC(=O)NCCc1nnc(C)o1",
                "C=CC(=O)NCCc1cc(Br)cs1",
                "C=CC(=O)NCCc1cnc(O)o1",
                "C=CC(=O)NCCc1ccc(I)nc1",
                "C=CC(=O)NCCc1nc(C)no1",
                "C=CC(=O)NCCc1coc(=O)n1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.0066394805908203125,
            "chemical_diversity": 0.5474277313398062,
            "average_molecular_weight": 213.3652222222222,
            "api_call_time": 8.548182010650635
        }
    ],
    "C=C[C@H](C)NC(=O)/C=C(\\C)CCC": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C[C@H](C)NC(=O)/C=C(\\C)CCC', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C[C@H](C)NC(=O)C=C(C)CCC",
                "C=C[C@H](C)NC(=O)CC(C)CCC",
                "C=C[C@H](C)N(C)C(=O)/C=C(\\C)CCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)C(C)C",
                "C=C[C@H](CC)NC(=O)/C=C(\\C)CCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCCC",
                "C=C[C@@H](C)NC(=O)/C=C(\\C)CCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCC",
                "CCC/C(C)=C/C(=O)N[C@@H](C)CC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CC"
            ],
            "total_raw_response_smiles": [
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCC",
                "C=C[C@@H](C)NC(=O)/C=C(\\C)CCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CC",
                "C=C[C@H](C)NC(=O)CC(C)CCC",
                "CC[C@H](C)NC(=O)/C=C(\\C)CCC",
                "C=C[C@H](CC)NC(=O)/C=C(\\C)CCC",
                "C=C[C@H](C)N(C)C(=O)/C=C(\\C)CCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)C(C)C",
                "C=C[C@H](C)NC(=O)C=C(C)CCC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.003763437271118164,
            "chemical_diversity": 0.4226631758481816,
            "average_molecular_weight": 184.4876,
            "api_call_time": 9.816216945648193
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C[C@H](C)NC(=O)/C=C(\\C)CCC', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2cccs2)CC1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccccc2)CC1",
                "COc1ccc(C(=O)N2CCN(Cc3ccccc3)CC2)cc1",
                "Cc1ccc(NC(=O)C2=CC(=O)NC(=O)C2)cc1",
                "Cc1cc(C)nc(SCC(=O)Nc2ccccc2)n1",
                "O=C(NCc1ccncc1)c1cc(Cl)cc(Cl)c1",
                "CC1(C)CC(=O)NC(=O)C1=NNc1ccccc1",
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccccc1",
                "O=C(Nc1ccc(Cl)cc1)N1CCN(C(=O)c2ccco2)CC1",
                "O=C(NCc1ccccc1)c1ccc(N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccccc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccccc2)CC1",
                "O=C(NCc1ccccc1)c1ccc(N2CCOCC2)cc1",
                "CC1(C)CC(=O)NC(=O)C1=NNc1ccccc1",
                "COc1ccc(C(=O)N2CCN(Cc3ccccc3)CC2)cc1",
                "Cc1cc(C)nc(SCC(=O)Nc2ccccc2)n1",
                "O=C(Nc1ccc(Cl)cc1)N1CCN(C(=O)c2ccco2)CC1",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2cccs2)CC1",
                "Cc1ccc(NC(=O)C2=CC(=O)NC(=O)C2)cc1",
                "O=C(NCc1ccncc1)c1cc(Cl)cc(Cl)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.01077723503112793,
            "chemical_diversity": 0.8082675130480703,
            "average_molecular_weight": 283.46279999999996,
            "api_call_time": 13.139248132705688
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C[C@H](C)NC(=O)/C=C(\\C)CCC', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C[C@H](C)NC(=O)/C=C(\\C)CC(C)O",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCOC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCCS",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCCCN",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCCO",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCC(=O)O",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCCN",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCCC(=O)O",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCC(N)=O"
            ],
            "total_raw_response_smiles": [
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCCO",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CC(O)C",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCCC(=O)O",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCCN",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCC(=O)N",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCCS",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCC(O)=O",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCCCN",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCOC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00569915771484375,
            "chemical_diversity": 0.31320303332171207,
            "average_molecular_weight": 203.98999999999995,
            "api_call_time": 11.880308389663696
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C[C@H](C)NC(=O)/C=C(\\C)CCC', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)CC(=O)Nc1cccc(Cl)c1",
                "CCOC(=O)c1ccccc1N",
                "COc1ccc(Cl)cc1C(=O)O",
                "O=C1NC(=O)c2ccccc21",
                "CCCCN1C(=O)c2ccccc2C1=O",
                "O=C1NC(=O)C(=O)N1",
                "Cc1ccc(S(N)(=O)=O)cc1",
                "CC(C)(C)OC(=O)NCCc1ccccc1",
                "Cc1nnc(C(=O)Nc2ccccc2)o1",
                "CCOC(=O)C(C)(C)Oc1ccc(Br)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)N1",
                "CC1=CC=C(C=C1)S(=O)(=O)N",
                "CCOC(=O)C1=CC=CC=C1N",
                "CC(C)(C)OC(=O)NCCC1=CC=CC=C1",
                "C1=CC=C2C(=C1)C(=O)NC2=O",
                "CC1=NN=C(O1)C(=O)NC2=CC=CC=C2",
                "CCCCN1C(=O)C2=CC=CC=C2C1=O",
                "CC(C)CC(=O)NC1=CC(=CC=C1)Cl",
                "COC1=C(C=C(C=C1)Cl)C(=O)O",
                "CCOC(=O)C(C)(C)OC1=CC=C(C=C1)Br"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006873607635498047,
            "chemical_diversity": 0.8336322834789446,
            "average_molecular_weight": 191.0787,
            "api_call_time": 11.578898191452026
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C[C@H](C)NC(=O)/C=C(\\C)CCC', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C[C@H](CC)NC(=O)/C=C(\\C)CCC",
                "C=C[C@H](CCC)NC(=O)/C=C(\\C)CCC",
                "C=C[C@H](CC)NC(=O)/C=C(\\C)CCCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCCC",
                "C=C[C@H](CCC)NC(=O)C=C(C)C",
                "C=C[C@H](C)NC(=O)C=C(C)C",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCC",
                "C=C[C@H](CCCC)NC(=O)/C=C(\\C)CC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCCCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CC"
            ],
            "total_raw_response_smiles": [
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCCCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)C",
                "C=C[C@H](CC)NC(=O)/C=C(\\C)CCC",
                "C=C[C@H](CCC)NC(=O)/C=C(\\C)CCC",
                "C=C[C@H](CC)NC(=O)/C=C(\\C)CCCC",
                "C=C[C@H](CCC)NC(=O)/C=C(\\C)C",
                "C=C[C@H](CCCC)NC(=O)/C=C(\\C)CC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0047228336334228516,
            "chemical_diversity": 0.4075855273997687,
            "average_molecular_weight": 191.09789999999992,
            "api_call_time": 8.56824278831482
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C[C@H](C)NC(=O)/C=C(\\C)CCC', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "N#Cc1ccc(C(=O)N2CCOCC2)cc1",
                "O=C(Nc1ccc(C(F)(F)F)cc1)c1cn[nH]c1",
                "CC1=NN(C(=O)c2cccs2)C(c2ccccc2)C1",
                "O=C1CCc2ccc(=O)n(-c3ccc(F)cc3)c2N1",
                "COc1ccc(-c2n[nH]c(=O)c3ccccc23)cc1",
                "O=C1CSC(c2cccc(F)c2)=N1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "O=C(NC1CCCCC1)c1noc2c1CCCC2",
                "O=C(NCc1ccco1)c1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "Cc1nnc(SCC(=O)Nc2cccc(Cl)c2)o1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccc(Cl)cc1",
                "C1CC(=O)NC2=C1C=CC(=O)N2c1ccc(F)cc1",
                "C1COCCN1C(=O)c1ccc(C#N)cc1",
                "O=C(NCc1ccco1)c1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "COc1ccc(C2=NNC(=O)C3=C2C=CC=C3)cc1",
                "O=C(Nc1ccc(C(F)(F)F)cc1)C1=CNN=C1",
                "CC1=NN(C(=O)c2cccs2)C(c2ccccc2)C1",
                "O=C(NC1CCCCC1)c1noc2c1CCCC2",
                "Cc1nnc(SCC(=O)Nc2cccc(Cl)c2)o1",
                "O=C1CSC(c2cccc(F)c2)=N1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010413408279418945,
            "chemical_diversity": 0.8785924077456125,
            "average_molecular_weight": 261.3715,
            "api_call_time": 13.799953699111938
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C[C@H](C)NC(=O)/C=C(\\C)CCC', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCC(F)(F)F",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CC",
                "C=C[C@H](C)NC(=O)/C=C(/C)CCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCBr",
                "C=C[C@@H](C)NC(=O)/C=C(\\C)CCC",
                "C=C[C@H](C)OC(=O)/C=C(\\C)CCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCF",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCS",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCO"
            ],
            "total_raw_response_smiles": [
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCO",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCF",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCS",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCBr",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCC(F)(F)F",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CCCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CC",
                "C=C[C@H](C)NC(=O)/C=C(/C)CCC",
                "C=C[C@@H](C)NC(=O)/C=C(\\C)CCC",
                "C=C[C@H](C)OC(=O)/C=C(\\C)CCC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0053899288177490234,
            "chemical_diversity": 0.338117592967785,
            "average_molecular_weight": 195.65879999999999,
            "api_call_time": 11.124711513519287
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C[C@H](C)NC(=O)/C=C(\\C)CCC', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C[C@H](C)NC(=S)/C=C(\\C)CCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)c1ccccc1",
                "C=C[C@H](C)NC(=O)/C=C(/C)CCS",
                "C=C[C@@H](C)SC(=O)/C=C(/C)CCC",
                "C=C[C@H](C)OC(=O)/C=C(\\C)CCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CN",
                "C=C[C@H](C)NC(=O)/C=C(/C)CC#N",
                "C#C[C@H](C)NC(=O)/C=C(/C)CCO",
                "C=C[C@H](C)NC(=O)/C=C(/C)CC(=O)O"
            ],
            "total_raw_response_smiles": [
                "C=C[C@@H](C)SC(=O)/C=C(/C)CCC",
                "C#C[C@H](C)NC(=O)/C=C(/C)CCO",
                "C=C[C@H](C)NC(=S)/C=C(\\C)CCC",
                "C=C[C@H](C)NC(=O)/C=N(/C)CCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)CN",
                "C=C[C@H](C)OC(=O)/C=C(\\C)CCC",
                "C=C[C@H](C)NC(=O)/C=C(\\C)c1ccccc1",
                "C=C[C@H](C)NC(=O)/C=C(/C)CC#N",
                "C=C[C@H](C)NC(=O)/C=C(/C)CC(=O)O",
                "C=C[C@H](C)NC(=O)/C=C(/C)CCS"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.00538182258605957,
            "chemical_diversity": 0.5764378710757707,
            "average_molecular_weight": 190.8333333333333,
            "api_call_time": 10.058448314666748
        }
    ],
    "C[C@@H]1COC[C@@H]1N[C@@H]1CCOC1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@@H]1COC[C@@H]1N[C@@H]1CCOC1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCSC1",
                "C[C@@H]1COC[C@@H]1N[C@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCNC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCOC1",
                "C[C@H]1COC[C@H]1N[C@@H]1CCOC1",
                "C[C@@H]1CNC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1NC1CCOCC1",
                "C[C@@H]1COC[C@@H]1N1CCOCC1",
                "C[C@H]1COC[C@H]1N[C@H]1CCOC1",
                "C[C@@H]1CSC[C@@H]1N[C@@H]1CCOC1"
            ],
            "total_raw_response_smiles": [
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1N[C@H]1CCOC1",
                "C[C@H]1COC[C@H]1N[C@@H]1CCOC1",
                "C[C@H]1COC[C@H]1N[C@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCSC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCNC1",
                "C[C@@H]1CSC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1CNC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1N1CCOCC1",
                "C[C@@H]1COC[C@@H]1NC1CCOCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0066416263580322266,
            "chemical_diversity": 0.4170208193852821,
            "average_molecular_weight": 175.65949999999998,
            "api_call_time": 9.94948148727417
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@@H]1COC[C@@H]1N[C@@H]1CCOC1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)c1ccc(C(=O)N2CCN(Cc3ccccc3)CC2)cc1",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(-c3ccccc3)cc2)CC1",
                "O=C(NCc1ccccc1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2=O",
                "COc1ccc(Cn2c(=O)c3ccccc3c3ccccc32)cc1OC",
                "CC(C)C[C@H](NC(=O)[C@@H](Cc1ccccc1)NC(=O)c1cnccn1)C(=O)N1CCCC1C(=O)NCc1ccccc1",
                "COc1ccc(-c2nc(-c3ccccc3)nc(-c3ccccc3)n2)cc1",
                "O=C(Cn1c(=O)c2ccccc2c2ccccc21)N1CCN(c2ccccc2)CC1",
                "O=C(O)c1ccc(NC(=O)c2ccc(N3CCOCC3)cc2)cc1",
                "O=C(Cn1cnc2c1c(=O)n(Cc1ccccc1)c(=O)n2Cc1ccccc1)NCc1ccccc1",
                "CC(C)C[C@H](NC(=O)[C@H](Cc1ccccc1)NC(=O)c1ccccc1)C(=O)N[C@@H](Cc1ccccc1)C(=O)N1CCCC1C(=O)NCc1ccccc1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)c1ccc(C(=O)N2CCN(Cc3ccccc3)CC2)cc1",
                "O=C(NCc1ccccc1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2=O",
                "COc1ccc(Cn2c(=O)c3ccccc3c3ccccc32)cc1OC",
                "CC(C)C[C@H](NC(=O)[C@@H](Cc1ccccc1)NC(=O)c1cnccn1)C(=O)N1CCCC1C(=O)NCc1ccccc1",
                "O=C(Cn1cnc2c1c(=O)n(Cc1ccccc1)c(=O)n2Cc1ccccc1)NCc1ccccc1",
                "CC(C)C[C@H](NC(=O)[C@H](Cc1ccccc1)NC(=O)c1ccccc1)C(=O)N[C@@H](Cc1ccccc1)C(=O)N1CCCC1C(=O)NCc1ccccc1",
                "O=C(O)c1ccc(NC(=O)c2ccc(N3CCOCC3)cc2)cc1",
                "COc1ccc(C2=NC(c3ccccc3)=NC(c3ccccc3)=N2)cc1",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(-c3ccccc3)cc2)CC1",
                "O=C(Cn1c(=O)c2ccccc2c2ccccc21)N1CCN(c2ccccc2)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.01850414276123047,
            "chemical_diversity": 0.7835705174503197,
            "average_molecular_weight": 424.8103000000002,
            "api_call_time": 18.13565158843994
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@@H]1COC[C@@H]1N[C@@H]1CCOC1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCSC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCNC1",
                "C[C@@H]1COC[C@@H]1N[C@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCOC1",
                "C[C@H]1COC[C@H]1N[C@@H]1CCOC1",
                "C[C@@H]1CC[C@@H](N[C@@H]2CCOC2)C1",
                "C[C@@H]1CNC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1NC1CCOCC1",
                "C[C@@H]1COC[C@@H]1NC1CCCC1",
                "C[C@@H]1CSC[C@@H]1N[C@@H]1CCOC1"
            ],
            "total_raw_response_smiles": [
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCSC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCNC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCCC1",
                "C[C@@H]1CSC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1CNC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1CC[C@@H](N[C@@H]2CCOC2)C1",
                "C[C@@H]1COC[C@@H]1N[C@H]1CCOC1",
                "C[C@H]1COC[C@H]1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCOCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0065419673919677734,
            "chemical_diversity": 0.42819396767696616,
            "average_molecular_weight": 175.2651,
            "api_call_time": 9.209172487258911
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@@H]1COC[C@@H]1N[C@@H]1CCOC1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1ccc(C2C(C(=O)N3CCCC3)=C(C)Nc3nc(C)nn32)cc1OC",
                "O=C(Cn1cnc2c(N3CCCC3)ncnc21)N1CCSCC1",
                "CC(=O)N1CCN(c2ccc(NC(=O)c3ccc(F)cc3)cc2)CC1",
                "Cc1nnc(SCC(=O)N2CCN(C(=O)c3ccco3)CC2)s1",
                "Cc1cc(C(=O)NCC2CCCO2)nn1Cc1ccc(Cl)cc1",
                "O=C(CN1CCOCC1)Nc1ccc(Oc2ccccc2)cc1",
                "Cc1cc(C)n(C(=O)CSc2nnc(C3CC3)n2C)n1",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(Cl)s2)CC1",
                "COc1cc(C=CC(=O)N2CCN(C)CC2)cc(OC)c1OC",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "COc1cc(C=CC(=O)N2CCN(C)CC2)cc(OC)c1OC",
                "Cc1nnc(SCC(=O)N2CCN(C(=O)c3ccco3)CC2)s1",
                "O=C(CN1CCOCC1)Nc1ccc(Oc2ccccc2)cc1",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(Cl)s2)CC1",
                "Cc1cc(C)n(C(=O)CSc2nnc(C3CC3)n2C)n1",
                "O=C(Cn1cnc2c(N3CCCC3)ncnc21)N1CCSCC1",
                "COc1ccc(C2C(C(=O)N3CCCC3)=C(C)Nc3nc(C)nn32)cc1OC",
                "CC(=O)N1CCN(c2ccc(NC(=O)c3ccc(F)cc3)cc2)CC1",
                "Cc1cc(C(=O)NCC2CCCO2)nn1Cc1ccc(Cl)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.01267385482788086,
            "chemical_diversity": 0.8219841265020497,
            "average_molecular_weight": 328.28430000000003,
            "api_call_time": 15.898995399475098
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@@H]1COC[C@@H]1N[C@@H]1CCOC1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCSC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCNC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCCO1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCOC1",
                "CC[C@@H]1COC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1NC1CCOCC1",
                "CCC[C@@H]1COC[C@@H]1N[C@@H]1CCOC1",
                "CCCC[C@@H]1COC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1NC1CCCC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCCS1"
            ],
            "total_raw_response_smiles": [
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCCC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCSC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCNC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCCO1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCCS1",
                "CC[C@@H]1COC[C@@H]1N[C@@H]1CCOC1",
                "CCC[C@@H]1COC[C@@H]1N[C@@H]1CCOC1",
                "CCCC[C@@H]1COC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCOCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007396221160888672,
            "chemical_diversity": 0.5121365255925425,
            "average_molecular_weight": 183.97689999999994,
            "api_call_time": 10.348787307739258
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@@H]1COC[C@@H]1N[C@@H]1CCOC1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(F)cc2)CC1",
                "Cc1nc(SCC(=O)Nc2ccccc2)c2ccccc2n1",
                "O=C1NC(=O)C(c2ccccc2)=C1Nc1ccc(Cl)cc1",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccc(O)c1",
                "O=C(Nc1ccc(C(F)(F)F)cc1)C1CCN(Cc2ccco2)CC1",
                "CN1CCN(C(=O)c2ccc(-c3ccc(C#N)cc3)cc2)CC1",
                "O=C(NCc1cccs1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2=O",
                "CC1=C(C(=O)Nc2nc3nc(C)cc(C)n3n2)OCCO1",
                "CC1(C)CC(=O)c2c([nH]c3ccc(S(=O)(=O)N4CCOCC4)cc23)C1",
                "COc1ccc(-c2n[nH]c(=O)c3ccccc23)cc1OC"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1Nc1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(F)cc2)CC1",
                "Cc1nc(SCC(=O)Nc2ccccc2)c2ccccc2n1",
                "O=C(NCc1cccs1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2=O",
                "COc1ccc(C2=NNC(=O)C3=C2C=CC=C3)cc1OC",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(S(=O)(=O)N3CCOCC3)cc12",
                "Cc1cc(C)n2nc(NC(=O)C3=C(C)OCCO3)nc2n1",
                "O=C(Nc1ccc(C(F)(F)F)cc1)C1CCN(Cc2ccco2)CC1",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccc(O)c1",
                "CN1CCN(C(=O)c2ccc(-c3ccc(C#N)cc3)cc2)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011973381042480469,
            "chemical_diversity": 0.8621940497751948,
            "average_molecular_weight": 317.7033000000001,
            "api_call_time": 19.47283172607422
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@@H]1COC[C@@H]1N[C@@H]1CCOC1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCSC1",
                "C[C@@H]1COC[C@@H]1N[C@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCNC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1CNC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@H]1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1N1CCOCC1",
                "C[C@@H]1COC[C@@H]1[N+]1([O-])CCOC1",
                "C[C@H]1COC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1CSC[C@@H]1N[C@@H]1CCOC1"
            ],
            "total_raw_response_smiles": [
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1N[C@H]1CCOC1",
                "C[C@H]1COC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@H]1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCSC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCNC1",
                "C[C@@H]1CSC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1CNC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1N1CCOCC1",
                "C[C@@H]1COC[C@@H]1[N+]1([O-])CCOC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007282733917236328,
            "chemical_diversity": 0.49304282388545895,
            "average_molecular_weight": 174.45399999999998,
            "api_call_time": 10.433484315872192
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@@H]1COC[C@@H]1N[C@@H]1CCOC1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@@H]1COCC1N[C@@H]1CCNC1",
                "C[C@@H]1CSCC1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCNC1",
                "C[C@@H]1CNCC1N[C@@H]1CCOC1",
                "C[C@@H]1CNC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1C[C@@H]1CCOC1",
                "C[C@@H]1CCC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1NC1CCCC1",
                "C[C@@H]1COCC1N[C@@H]1CCSC1",
                "C[C@@H]1CSC[C@@H]1N[C@@H]1CCOC1"
            ],
            "total_raw_response_smiles": [
                "C[C@@H]1COCC1N[C@@H]1CCSC1",
                "C[C@@H]1COCC1N[C@@H]1CCNC1",
                "C[C@@H]1CSCC1N[C@@H]1CCOC1",
                "C[C@@H]1CNCC1N[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1C[C@@H]1CCOC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCCC1",
                "C[C@@H]1COC[C@@H]1N[C@@H]1CCNC1",
                "C[C@@H]1CNC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1CSC[C@@H]1N[C@@H]1CCOC1",
                "C[C@@H]1CCC[C@@H]1N[C@@H]1CCOC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006582975387573242,
            "chemical_diversity": 0.5365007445443204,
            "average_molecular_weight": 175.1736,
            "api_call_time": 11.59046220779419
        }
    ],
    "C=CCNC(=O)CN1CC[C@H](O)C1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=CCNC(=O)CN1CC[C@H](O)C1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=CCNC(=O)CNC1CC[C@H](O)C1",
                "C=CCNC(=O)CN1CC[C@H](OC)C1",
                "C=CCNC(=O)CN1CC[C@H](O)C1CO",
                "C=CCNC(=O)CN1CC[C@H](O)C1",
                "C=CCNC(=O)CN1CC[C@@H](OC)C1",
                "C=CCNC(=O)CN1CCC(O)C1",
                "C=CCNC(=O)CN1CCCC1O",
                "C=CCNC(=O)CN1CC[C@@H](O)C1",
                "C=CCNC(=O)CNC1CC[C@@H](O)C1",
                "C=CCNC(=O)CN1CC[C@@H](O)C1CO"
            ],
            "total_raw_response_smiles": [
                "C=CCNC(=O)CN1CC[C@@H](O)C1",
                "C=CCNC(=O)CN1CC[C@H](O)C1",
                "C=CCNC(=O)CN1CC[C@@H](OC)C1",
                "C=CCNC(=O)CN1CC[C@H](OC)C1",
                "C=CCNC(=O)CN1CC[C@H](O)C1CO",
                "C=CCNC(=O)CN1CC[C@@H](O)C1CO",
                "C=CCNC(=O)CN1CCC(O)C1",
                "C=CCNC(=O)CN1CCCC1O",
                "C=CCNC(=O)CNC1CC[C@H](O)C1",
                "C=CCNC(=O)CNC1CC[C@@H](O)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0062563419342041016,
            "chemical_diversity": 0.4273869960686173,
            "average_molecular_weight": 195.85500000000002,
            "api_call_time": 8.222404718399048
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=CCNC(=O)CN1CC[C@H](O)C1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCc1ccco1)c1ccc(Cl)cc1",
                "O=C(Cn1cnc2ccccc21)N1CCOCC1",
                "CC(C)(C)OC(=O)N1CCC(O)(CN2CCOCC2)CC1",
                "COc1ccc(CC(=O)N2CCN(C)CC2)cc1OC",
                "CC(=O)N1CCN(c2ncnc3sc(C)c(C)c23)CC1",
                "Cc1nnc(SCC(=O)N2CCCC2)n1C",
                "CC1(C)OC(=O)N(Cc2ccccc2)C1=O",
                "O=C(O)C1CCCN(S(=O)(=O)c2ccc(F)cc2)C1",
                "COc1cc(C=NNC(=O)c2ccncc2)ccc1O",
                "O=c1[nH]cc(-c2ccccc2)c(=O)[nH]1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=CN1",
                "CC(C)(C)OC(=O)N1CCC(O)(CN2CCOCC2)CC1",
                "O=C(NCc1ccco1)c1ccc(Cl)cc1",
                "COc1ccc(CC(=O)N2CCN(C)CC2)cc1OC",
                "CC1(C)OC(=O)N(Cc2ccccc2)C1=O",
                "O=C(Cn1cnc2ccccc21)N1CCOCC1",
                "Cc1nnc(SCC(=O)N2CCCC2)n1C",
                "CC(=O)N1CCN(c2ncnc3sc(C)c(C)c23)CC1",
                "O=C(O)C1CCCN(S(=O)(=O)c2ccc(F)cc2)C1",
                "COc1cc(C=NNC(=O)c2ccncc2)ccc1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010089635848999023,
            "chemical_diversity": 0.8676820142325736,
            "average_molecular_weight": 255.64409999999998,
            "api_call_time": 13.280246257781982
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=CCNC(=O)CN1CC[C@H](O)C1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=CCNC(=O)CN1CC[C@H](OC)C1",
                "C=CCNC(=O)CN1CC[C@H](I)C1",
                "C=CCNC(=O)CN1CC[C@H](C#N)C1",
                "C=CCNC(=O)CN1CC[C@H](Br)C1",
                "C=CCNC(=O)CN1CC[C@H](Cl)C1",
                "C=CCNC(=O)CN1CC[C@H](O)C1",
                "C=CCNC(=O)CN1CC[C@H](F)C1",
                "C=CCNC(=O)CN1CC[C@H](S)C1",
                "C=CCNC(=O)CN1CC[C@@H](O)C1",
                "C=CCNC(=O)CN1CC[C@H](N)C1"
            ],
            "total_raw_response_smiles": [
                "C=CCNC(=O)CN1CC[C@H](O)C1",
                "C=CCNC(=O)CN1CC[C@@H](O)C1",
                "C=CCNC(=O)CN1CC[C@H](OC)C1",
                "C=CCNC(=O)CN1CC[C@H](N)C1",
                "C=CCNC(=O)CN1CC[C@H](F)C1",
                "C=CCNC(=O)CN1CC[C@H](Cl)C1",
                "C=CCNC(=O)CN1CC[C@H](Br)C1",
                "C=CCNC(=O)CN1CC[C@H](I)C1",
                "C=CCNC(=O)CN1CC[C@H](S)C1",
                "C=CCNC(=O)CN1CC[C@H](C#N)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006147623062133789,
            "chemical_diversity": 0.3060378639582747,
            "average_molecular_weight": 207.37429999999995,
            "api_call_time": 8.595523834228516
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=CCNC(=O)CN1CC[C@H](O)C1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1cc(OC)c(OC)cc1NC(=O)C1CC(=O)N(C2CCCC2)C1",
                "Nc1ncnc2c1ncn2CC(=O)Nc1ccc(Br)cc1",
                "Cc1cc(C)n2nc(SCC(=O)Nc3ccccc3)nc2n1",
                "COc1ccc(C(=O)N2CCN(Cc3ccc(F)cc3)CC2)cc1OC",
                "CC(C)Oc1ccc(C(=O)N2CCNCC2)cc1",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "O=C(NCc1ccccc1)c1ccc(CN2CCOCC2)cc1",
                "Cc1nc2ccc(NC(=O)c3ccc(Cl)s3)cc2s1",
                "O=C1CCc2c(cccc2N2CCOCC2)N1",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "O=C(NCc1ccccc1)c1ccc(CN2CCOCC2)cc1",
                "COc1ccc(C(=O)N2CCN(Cc3ccc(F)cc3)CC2)cc1OC",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "Cc1nc2ccc(NC(=O)c3ccc(Cl)s3)cc2s1",
                "O=C(Cn1cnc2c(N)ncnc21)Nc1ccc(Br)cc1",
                "CC(C)Oc1ccc(C(=O)N2CCNCC2)cc1",
                "Cc1cc(C)n2nc(SCC(=O)Nc3ccccc3)nc2n1",
                "O=C1CCc2c(cccc2N2CCOCC2)N1",
                "COc1cc(OC)c(NC(=O)C2CC(=O)N(C3CCCC3)C2)cc1OC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012241363525390625,
            "chemical_diversity": 0.8327434367448062,
            "average_molecular_weight": 306.89250000000004,
            "api_call_time": 14.918521881103516
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=CCNC(=O)CN1CC[C@H](O)C1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=CCSC(=O)CN1CC[C@H](O)C1",
                "CCNC(=O)CN1CC[C@H](O)C1",
                "C=CCNC(=O)CN1CC[C@H](OC)C1",
                "C=CNC(=O)CN1CC[C@H](O)C1",
                "C#CCNC(=O)CN1CC[C@H](O)C1",
                "C=CCNC(=O)CN1CC[C@H](O)C1",
                "C=CCNC(=O)CN1CC[C@H](F)C1",
                "C=CCNC(=O)CN1CC[C@H](Cl)C1",
                "C=CCOC(=O)CN1CC[C@H](O)C1",
                "C=CCNC(=O)CN1CC[C@H](OCC)C1"
            ],
            "total_raw_response_smiles": [
                "C=CCNC(=O)CN1CC[C@H](O)C1",
                "CCNC(=O)CN1CC[C@H](O)C1",
                "C#CCNC(=O)CN1CC[C@H](O)C1",
                "C=CNC(=O)CN1CC[C@H](O)C1",
                "C=CCOC(=O)CN1CC[C@H](O)C1",
                "C=CCSC(=O)CN1CC[C@H](O)C1",
                "C=CCNC(=O)CN1CC[C@H](OC)C1",
                "C=CCNC(=O)CN1CC[C@H](OCC)C1",
                "C=CCNC(=O)CN1CC[C@H](F)C1",
                "C=CCNC(=O)CN1CC[C@H](Cl)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0061130523681640625,
            "chemical_diversity": 0.4776896118323486,
            "average_molecular_weight": 189.48899999999998,
            "api_call_time": 9.183966159820557
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=CCNC(=O)CN1CC[C@H](O)C1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(S(=O)(=O)N3CCOCC3)cc2)CC1",
                "Cc1cc(NC(=O)C2=CC(=O)c3ccccc3C2=O)no1",
                "O=C(NCc1cccc(C(F)(F)F)c1)C1CCN(Cc2cnc[nH]2)CC1",
                "COc1ccc(-c2n[nH]c(=O)c3c2C(=O)N(Cc2ccccc2)C3c2ccccc2)cc1",
                "COc1cc(C=NNC(=O)c2cc(OC)c(OC)c(OC)c2)ccc1O",
                "Cc1nnc(SCC(=O)Nc2ccc(C(=O)N3CCOCC3)cc2)n1C",
                "Nc1ncnc2c1ncn2CC(=O)Nc1ccc(Oc2ccccc2)cc1",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc(N)nc(N3CCN(C(=O)C4CCCO4)CC3)c1N2",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(F)cc1",
                "CC(C)C[C@H](NC(=O)[C@@H]1CCCN1C(=O)c1cccs1)C(=O)NO"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(F)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(S(=O)(=O)N3CCOCC3)cc2)CC1",
                "COc1cc(C=NNC(=O)c2cc(OC)c(OC)c(OC)c2)ccc1O",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc(N)nc(N3CCN(C(=O)C4CCCO4)CC3)c1N2",
                "O=C(NCc1cccc(C(F)(F)F)c1)C1CCN(Cc2cnc[nH]2)CC1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(=O)N3CCOCC3)cc2)n1C",
                "CC(C)C[C@H](NC(=O)[C@@H]1CCCN1C(=O)c1cccs1)C(=O)NO",
                "O=C(Cn1cnc2c(N)ncnc21)Nc1ccc(Oc2ccccc2)cc1",
                "COc1ccc(C2=NNC(=O)C3=C2C(=O)N(Cc2ccccc2)C3c2ccccc2)cc1",
                "Cc1cc(NC(=O)C2=CC(=O)c3ccccc3C2=O)no1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.013396024703979492,
            "chemical_diversity": 0.8697373026982473,
            "average_molecular_weight": 371.95440000000013,
            "api_call_time": 19.355814218521118
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=CCNC(=O)CN1CC[C@H](O)C1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=CCNC(=O)CN1CC[C@H](N)C1",
                "C=CCNC(=O)CN1CC[C@H](OC)C1",
                "C=CCNC(=O)CN1CC[C@H](O)C1Cl",
                "C=CCNC(=O)CN1CC[C@H](S)C1",
                "C=CCNC(=O)CN1CCC(O)C1",
                "C=CCNC(=O)CN1CC[C@@H](O)C1",
                "C=CCNC(=O)CN1CCC(O)CC1",
                "C=CCNC(=O)CN1CC[C@H](O)C1C",
                "C=CCNC(=O)CN1CCCC(O)C1",
                "C=CCNC(=O)CN1CC[C@H](O)C1F"
            ],
            "total_raw_response_smiles": [
                "C=CCNC(=O)CN1CC[C@@H](O)C1",
                "C=CCNC(=O)CN1CC[C@H](OC)C1",
                "C=CCNC(=O)CN1CC[C@H](O)C1C",
                "C=CCNC(=O)CN1CCC(O)C1",
                "C=CCNC(=O)CN1CC[C@H](S)C1",
                "C=CCNC(=O)CN1CC[C@H](O)CC1",
                "C=CCNC(=O)CN1CCCC(O)C1",
                "C=CCNC(=O)CN1CC[C@H](N)C1",
                "C=CCNC(=O)CN1CC[C@H](O)C1F",
                "C=CCNC(=O)CN1CC[C@H](O)C1Cl"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006343364715576172,
            "chemical_diversity": 0.37858330571647747,
            "average_molecular_weight": 196.6017,
            "api_call_time": 8.738722801208496
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=CCNC(=O)CN1CC[C@H](O)C1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=CCOC(=O)CN1CC[C@@H](N)C1",
                "C=CCNC(=O)CN1CC[C@H](SC)C1",
                "C=CCNC(=O)CN1CC[C@H](C(F)(F)F)C1",
                "C=CCNC(=O)CN1CC[C@H](I)C1",
                "C=CCNC(=O)CN1CC[C@H](OC)C1",
                "C=CCNC(=O)CN1CC[C@H](C#N)C1",
                "C=CCNC(=O)CN1CC[C@H](Br)C1",
                "C=CCSC(=N)CN1CC[C@H](F)C1",
                "C=CCNC(=O)CN1CC[C@H](N=C=S)C1",
                "C#CCNC(=S)CN1CC[C@H](Cl)C1"
            ],
            "total_raw_response_smiles": [
                "C=CCOC(=O)CN1CC[C@@H](N)C1",
                "C=CCSC(=N)CN1CC[C@H](F)C1",
                "C#CCNC(=S)CN1CC[C@H](Cl)C1",
                "C=CCNC(=O)CN1CC[C@H](Br)C1",
                "C=CCNC(=O)CN1CC[C@H](I)C1",
                "C=CCNC(=O)CN1CC[C@H](C#N)C1",
                "C=CCNC(=O)CN1CC[C@H](C(F)(F)F)C1",
                "C=CCNC(=O)CN1CC[C@H](OC)C1",
                "C=CCNC(=O)CN1CC[C@H](SC)C1",
                "C=CCNC(=O)CN1CC[C@H](N=C=S)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006375312805175781,
            "chemical_diversity": 0.534388652695718,
            "average_molecular_weight": 221.19499999999994,
            "api_call_time": 9.120303630828857
        }
    ],
    "OCc1cn[nH]c1C1CCC1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'OCc1cn[nH]c1C1CCC1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "OCc1cn[nH]c1C1CCCN1",
                "OCc1cn[nH]c1C1CCC(Br)C1",
                "OCc1cn[nH]c1C1CCCC1",
                "NC1CCC(c2[nH]ncc2CO)C1",
                "OCc1cn[nH]c1C1CCC(O)C1",
                "OCc1cn[nH]c1C1CCC(F)C1",
                "OCc1cn[nH]c1C1CCCS1",
                "OCc1cn[nH]c1C1CCC(I)C1",
                "OCc1cn[nH]c1C1CCC(Cl)C1",
                "OCc1cn[nH]c1C1CCCO1"
            ],
            "total_raw_response_smiles": [
                "OCc1cn[nH]c1C1CCCC1",
                "OCc1cn[nH]c1C1CCCO1",
                "OCc1cn[nH]c1C1CCCN1",
                "OCc1cn[nH]c1C1CCCS1",
                "OCc1cn[nH]c1C1CCC(O)C1",
                "OCc1cn[nH]c1C1CCC(N)C1",
                "OCc1cn[nH]c1C1CCC(F)C1",
                "OCc1cn[nH]c1C1CCC(Cl)C1",
                "OCc1cn[nH]c1C1CCC(Br)C1",
                "OCc1cn[nH]c1C1CCC(I)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007393360137939453,
            "chemical_diversity": 0.409304836746498,
            "average_molecular_weight": 197.14809999999997,
            "api_call_time": 7.255937576293945
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'OCc1cn[nH]c1C1CCC1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nc2ccccc2c(=O)[nH]1",
                "Cc1cccc(NC(=O)c2cccs2)c1",
                "COc1cc(C=O)ccc1O",
                "O=C(NCc1ccccc1)c1ccc2c(c1)OCO2",
                "O=C(Nc1ccc(Cl)cc1)N1CCOCC1",
                "COc1ccc(C2CC(=O)c3c(O)cc(O)cc3O2)cc1",
                "CC(C)C1CCC(CC2CCNCC2)CC1",
                "CC(C)(C)c1ccc(C(=O)N2CCOCC2)cc1",
                "CC1(C)CC(=O)C2(CCCCC2)C(=O)C1",
                "CCN1C(=O)C(CC(=O)Nc2ccccc2)SC1=S"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)c1ccc(C(=O)N2CCOCC2)cc1",
                "O=C(NCc1ccccc1)c1ccc2c(c1)OCO2",
                "COc1ccc(C2CC(=O)c3c(O)cc(O)cc3O2)cc1",
                "Cc1nc2ccccc2c(=O)[nH]1",
                "CC(C)C1CCC(CC2CCNCC2)CC1",
                "O=C(Nc1ccc(Cl)cc1)N1CCOCC1",
                "COc1cc(C=O)ccc1O",
                "Cc1cccc(NC(=O)c2cccs2)c1",
                "CC1(C)CC(=O)C2(CCCCC2)C(=O)C1",
                "CCN1C(=O)C(CC(=O)Nc2ccccc2)SC1=S"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008889436721801758,
            "chemical_diversity": 0.8804863520519728,
            "average_molecular_weight": 228.53079999999994,
            "api_call_time": 11.820974588394165
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'OCc1cn[nH]c1C1CCC1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "OCc1cn[nH]c1C1CCCC1",
                "OCc1cnnc(C2CCOCC2)c1Br",
                "OCc1cnnc(C2CCCC2)c1Cl",
                "OCc1cn[nH]c1C1CCSC1",
                "OCc1cn[nH]c1C1CCOCC1",
                "OCc1cnnc(C2CCSC2)c1I",
                "N#Cc1c(CO)cnnc1C1CCOC1",
                "OCc1cn[nH]c1C1CCC1",
                "OCc1cnnc(C2CCC2)c1F",
                "OCc1cn[nH]c1C1CCOC1"
            ],
            "total_raw_response_smiles": [
                "OCc1cn[nH]c1C1CCC1",
                "OCc1cnnc(C2CCC2)c1F",
                "OCc1cn[nH]c1C1CCCC1",
                "OCc1cnnc(C2CCCC2)c1Cl",
                "OCc1cn[nH]c1C1CCOCC1",
                "OCc1cnnc(C2CCOCC2)c1Br",
                "OCc1cn[nH]c1C1CCSC1",
                "OCc1cnnc(C2CCSC2)c1I",
                "OCc1cn[nH]c1C1CCOC1",
                "OCc1cnnc(C2CCOC2)c1C#N"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007875204086303711,
            "chemical_diversity": 0.5538269952418482,
            "average_molecular_weight": 204.84999999999997,
            "api_call_time": 7.628628969192505
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'OCc1cn[nH]c1C1CCC1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)OC(COc2cccc(C(=O)O)c2)OC1(C)C",
                "Cc1ncc(CO)c(C=NNc2ccc(Cl)cc2Cl)c1O",
                "CCN(CC)CCNC(=O)c1cc(Cl)c(N)cc1OC",
                "Cn1c(SCc2cccc(Cl)c2)nnc1C(=O)Nc1ccccc1",
                "O=C(O)c1ccc(NC(=O)c2cc(Br)cs2)cc1",
                "COc1cc(C=NNC(=O)c2ccco2)ccc1O",
                "CC(C)(C)OC(=O)NCCNC(=O)c1ccncc1",
                "O=C(O)c1ccc(NC(=O)c2cccs2)c(F)c1",
                "COc1ccc(C=NN=Cc2ccc(OC)c(OC)c2O)cc1O",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "COc1ccc(C=NN=Cc2ccc(OC)c(OC)c2O)cc1O",
                "Cc1ncc(CO)c(C=NNc2ccc(Cl)cc2Cl)c1O",
                "O=C(O)c1ccc(NC(=O)c2cc(Br)cs2)cc1",
                "CCN(CC)CCNC(=O)c1cc(Cl)c(N)cc1OC",
                "CC1(C)OC(COc2cccc(C(=O)O)c2)OC1(C)C",
                "Cn1c(SCc2cccc(Cl)c2)nnc1C(=O)Nc1ccccc1",
                "CC(C)(C)OC(=O)NCCNC(=O)c1ccncc1",
                "O=C(O)c1ccc(NC(=O)c2cccs2)c(F)c1",
                "COc1cc(C=NNC(=O)c2ccco2)ccc1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.01017308235168457,
            "chemical_diversity": 0.8354532290654313,
            "average_molecular_weight": 299.68340000000006,
            "api_call_time": 16.880053758621216
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'OCc1cn[nH]c1C1CCC1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "OCc1cn[nH]c1C1CCCC1",
                "CC1CCC(c2[nH]ncc2CO)C1",
                "OCc1cn[nH]c1C1CCSC1",
                "OCc1cn[nH]c1C1CCC(O)C1",
                "OCc1cn[nH]c1C1CCC(F)C1",
                "OCc1cn[nH]c1C1CCCCC1",
                "OCc1cn[nH]c1C1CCNC1",
                "OCc1cn[nH]c1C1CCC(Cl)C1",
                "OCc1cn[nH]c1C1CC1",
                "OCc1cn[nH]c1C1CCOC1"
            ],
            "total_raw_response_smiles": [
                "OCc1cn[nH]c1C1CCCC1",
                "OCc1cn[nH]c1C1CCCCC1",
                "OCc1cn[nH]c1C1CC1",
                "OCc1cn[nH]c1C1CCC(C)C1",
                "OCc1cn[nH]c1C1CCOC1",
                "OCc1cn[nH]c1C1CCSC1",
                "OCc1cn[nH]c1C1CCNC1",
                "OCc1cn[nH]c1C1CCC(O)C1",
                "OCc1cn[nH]c1C1CCC(F)C1",
                "OCc1cn[nH]c1C1CCC(Cl)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007729291915893555,
            "chemical_diversity": 0.3494951673703015,
            "average_molecular_weight": 175.16739999999996,
            "api_call_time": 7.4120941162109375
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'OCc1cn[nH]c1C1CCC1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)NC(=O)C1CCN(Cc2ccc3c(c2)OCO3)CC1",
                "COc1ccc(C=NNC(=O)c2cc(C)on2)c(O)c1",
                "Nc1ncnc2c1ncn2CC(=O)Nc1ccc(Cl)c(C(F)(F)F)c1",
                "O=C(NCc1ccco1)c1cc(Cl)cc(Cl)c1O",
                "CC(C)Cn1cnc2c(c1=O)c1nc3ccccc3nc1n2C",
                "O=C(O)c1ccc(NC(=O)C2CCCN2c2ncccn2)cc1",
                "CC(C)(C)OC(=O)Nc1ccc2c(c1)C(=O)c1ccccc1C2=O",
                "Cc1nnc(SCC(=O)Nc2ccc(N3CCOCC3)cc2)s1",
                "COc1cc(C=C2C(=O)NC(=O)N(Cc3ccccc3)C2=O)ccc1O",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc3ccccc3nc1N2"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)OC(=O)Nc1ccc2c(c1)C(=O)c1ccccc1C2=O",
                "O=C(NCc1ccco1)c1cc(Cl)cc(Cl)c1O",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc3ccccc3nc1N2",
                "COc1ccc(C=NNC(=O)c2cc(C)on2)c(O)c1",
                "CC(C)(C)NC(=O)C1CCN(Cc2ccc3c(c2)OCO3)CC1",
                "O=C(O)c1ccc(NC(=O)C2CCCN2c2ncccn2)cc1",
                "Cc1nnc(SCC(=O)Nc2ccc(N3CCOCC3)cc2)s1",
                "O=C(Cn1cnc2c(N)ncnc21)Nc1ccc(Cl)c(C(F)(F)F)c1",
                "CC(C)Cn1cnc2c(c1=O)c1nc3ccccc3nc1n2C",
                "COc1cc(C=C2C(=O)NC(=O)N(Cc3ccccc3)C2=O)ccc1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012646198272705078,
            "chemical_diversity": 0.8560333381510866,
            "average_molecular_weight": 317.66970000000003,
            "api_call_time": 16.25716471672058
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'OCc1cn[nH]c1C1CCC1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "OCc1cn[nH]c1C1CCCC1",
                "OCc1cn[nH]c1C1CCSC1",
                "CC1CC(c2[nH]ncc2CO)C1",
                "OCc1cn[nH]c1C1CCCCC1",
                "OCc1cn[nH]c1C1CCNC1",
                "OCc1cn[nH]c1C1CCC1",
                "OCc1cn[nH]c1C1CC1",
                "OCc1cn[nH]c1C1CCOC1"
            ],
            "total_raw_response_smiles": [
                "OCc1cn[nH]c1C1CCC1",
                "OCc1cn[nH]c1C1CCCC1",
                "OCc1cn[nH]c1C1CC1",
                "OCc1cn[nH]c1C1CCCCC1",
                "OCc1cn[nH]c1C1CC(C)C1",
                "OCc1cn[nH]c1C1CCOC1",
                "OCc1cn[nH]c1C1CCSC1",
                "OCc1cn[nH]c1C1CCNC1",
                "OCc1cnnc1C1CCC1",
                "OCc1cnnc1C1CCCC1"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.006463766098022461,
            "chemical_diversity": 0.3141913271644382,
            "average_molecular_weight": 165.34224999999995,
            "api_call_time": 7.123264789581299
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'OCc1cn[nH]c1C1CCC1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 4,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "OCc1cn[nH]c1C1CCSC1",
                "OCc1cc[nH]c1C1CCNC1",
                "OCc1nnnn1C1CCOC1",
                "OCc1nncn1C1CCNC1"
            ],
            "total_raw_response_smiles": [
                "OCc1nccs1C1CCCC1",
                "OCc1nnnn1C1CCOC1",
                "OCc1cc[nH]c1C1CCNC1",
                "OCc1cn[nH]c1C1CCSC1",
                "OCc1cnnc1C1CCOC1",
                "OCc1cnnc1C1CCNC1",
                "OCc1ncc[nH]1C1CCCC1",
                "OCc1ncc[nH]1C1CCSC1",
                "OCc1nncs1C1CCOC1",
                "OCc1nncn1C1CCNC1"
            ],
            "validity_ratio": 0.4,
            "post_processing_time": 0.00406956672668457,
            "chemical_diversity": 0.7602385309522307,
            "average_molecular_weight": 172.21499999999997,
            "api_call_time": 8.16907525062561
        }
    ],
    "CCC(CC)CN[C@H]1CCOC1=O": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(CC)CN[C@H]1CCOC1=O', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(CC)CNC1CCOC1=O",
                "CCCC(C)CN[C@H]1CCOC1=O",
                "CCC(CC)CN[C@@H]1CCOC1=O",
                "CCC(C)CCN[C@H]1CCOC1=O",
                "CC(C)CCCN[C@H]1CCOC1=O",
                "CCC(CC)CN[C@H]1CCOC1=O",
                "CCC(CC)CN1CCOCC1=O",
                "CCC(CC)CN[C@H]1CCOC1=S",
                "CCC(CC)CN[C@H]1CCSC1=O"
            ],
            "total_raw_response_smiles": [
                "CCC(CC)CN[C@H]1CCOC1=O",
                "CCC(CC)CN[C@@H]1CCOC1=O",
                "CCC(CC)CNC1CCOC1=O",
                "CC(CC)CCN[C@H]1CCOC1=O",
                "CCC(CC)CN[C@H]1CCSC1=O",
                "CCC(C)CCN[C@H]1CCOC1=O",
                "CCCC(C)CN[C@H]1CCOC1=O",
                "CCC(CC)CN[C@H]1CCOC1=S",
                "CC(C)CCCN[C@H]1CCOC1=O",
                "CCC(CC)CN1CCOCC1=O"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.006372690200805664,
            "chemical_diversity": 0.48561887995094066,
            "average_molecular_weight": 188.83766666666668,
            "api_call_time": 10.634720802307129
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(CC)CN[C@H]1CCOC1=O', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(c1cc2ccccc2s1)N1CCOCC1",
                "O=C1NC(Cc2ccccc2)Cc2ccccc21",
                "O=C1CCCC2(CCN(Cc3cccs3)CC2)N1",
                "O=C(NC1CCCC1)C1CCc2ccsc2C1",
                "O=C(OC1CCCNC1)c1cccc2cnccc12",
                "O=C1OCCC1NS(=O)(=O)C1CCCCC1",
                "O=C1CCCN1CC1CCN(Cc2cccs2)CC1",
                "O=C1OC2(CCCCC2)C2CCCCN12",
                "O=C(CN1CCCC1)Nc1ccc2ncccc2c1",
                "O=C(NCc1ccco1)c1ccc2ccccc2c1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(Cc2ccccc2)Cc2ccccc21",
                "C1CCC2(CC1)OC(=O)N1CCCCC12",
                "O=C(NCc1ccco1)c1ccc2ccccc2c1",
                "C1CC(=O)NC2(CCN(CC3=CC=CS3)CC2)C1",
                "O=C(CN1CCCC1)Nc1ccc2ncccc2c1",
                "C1CCC(CC1)S(=O)(=O)NC1CCOC1=O",
                "O=C1CCCN1CC1CCN(Cc2cccs2)CC1",
                "C1CN(CCO1)C(=O)c1cc2ccccc2s1",
                "O=C(NC1CCCC1)C1CCc2ccsc2C1",
                "C1CNCC(C1)OC(=O)c1cccc2cnccc12"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.01015162467956543,
            "chemical_diversity": 0.8472434979664334,
            "average_molecular_weight": 249.6331,
            "api_call_time": 12.847776889801025
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(CC)CN[C@H]1CCOC1=O', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(CC)CN[C@H]1CCOC(=O)O1",
                "CCC(CC)CN[C@H]1CCOC(=O)C1F",
                "CCC(CC)CN[C@H]1CCOC(=O)C1Cl",
                "CCC(CC)CN[C@H]1CCOC(=O)C1",
                "CCC(CC)CN[C@H]1CCCC1=O",
                "CCC(CC)CN[C@H]1CCOC1=O",
                "CCC(CC)CN[C@H]1CCOC(=O)N1",
                "CCC(CC)CN[C@H]1CCNC1=O",
                "CCC(CC)CN[C@H]1CCOC1=S",
                "CCC(CC)CN[C@H]1CCSC1=O"
            ],
            "total_raw_response_smiles": [
                "CCC(CC)CN[C@H]1CCOC1=O",
                "CCC(CC)CN[C@H]1CCSC1=O",
                "CCC(CC)CN[C@H]1CCNC1=O",
                "CCC(CC)CN[C@H]1CCCC1=O",
                "CCC(CC)CN[C@H]1CCOC1=S",
                "CCC(CC)CN[C@H]1CCOC(=O)C1",
                "CCC(CC)CN[C@H]1CCOC(=O)O1",
                "CCC(CC)CN[C@H]1CCOC(=O)N1",
                "CCC(CC)CN[C@H]1CCOC(=O)C1F",
                "CCC(CC)CN[C@H]1CCOC(=O)C1Cl"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006447553634643555,
            "chemical_diversity": 0.49632831907184816,
            "average_molecular_weight": 200.73799999999997,
            "api_call_time": 8.027013778686523
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(CC)CN[C@H]1CCOC1=O', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1CCCN1CCCCNS(=O)(=O)c1cccs1",
                "Cc1nnc(SCC2=NC3C(=O)CC(C)(C)CC3=N2)s1",
                "CC(C)(C)OC(=O)NCCc1cccs1",
                "O=C1NC(=O)c2ccccc21",
                "Clc1ccc2c(N3CCOCC3)ccnc2c1",
                "CC1(C)SC2C(NC(=O)Cc3ccccc3)C(=O)N2C1C(=O)O",
                "CC1=NN(c2cc(Cl)ccc2O)C(=O)C1",
                "COc1ccc(C=O)cc1O",
                "CC12CCC(CC1=O)C2(C)C",
                "O=C(O)c1ccc2c(c1)C(=O)OC2"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)c2ccccc21",
                "CC1(C)C2CCC1(C)C(=O)C2",
                "C1COCCN1c1ccnc2cc(Cl)ccc12",
                "CC(C)(C)OC(=O)NCCC1=CC=CS1",
                "O=C(O)c1ccc2c(c1)C(=O)OC2",
                "COc1ccc(C=O)cc1O",
                "CC1(C)SC2C(NC(=O)Cc3ccccc3)C(=O)N2C1C(=O)O",
                "Cc1nnc(SCC2=NC3C(=O)CC(C)(C)CC3=N2)s1",
                "CC1=NN(c2cc(Cl)ccc2O)C(=O)C1",
                "O=C1CCCN1CCCCNS(=O)(=O)c1cccs1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008794784545898438,
            "chemical_diversity": 0.8761610435977827,
            "average_molecular_weight": 227.56009999999998,
            "api_call_time": 14.182964563369751
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(CC)CN[C@H]1CCOC1=O', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(C)CN[C@H]1CCOC1=O",
                "CCCC(CC)CN[C@H]1CCOC1=O",
                "CCC(CC)CNC1CCOC1=O",
                "CCC(CC)CN[C@@H]1CCOC1=O",
                "CCC(CC)CN[C@H]1CCOC1=O",
                "CCC(CN[C@H]1CCOC1=O)C(C)C",
                "CCC(CC)CCN[C@H]1CCOC1=O",
                "CCCCC(CC)CN[C@H]1CCOC1=O"
            ],
            "total_raw_response_smiles": [
                "CCC(CC)CN[C@H]1CCOC1=O",
                "CCCC(CC)CN[C@H]1CCOC1=O",
                "CC(CC)CN[C@H]1CCOC1=O",
                "CCC(C)CN[C@H]1CCOC1=O",
                "CCC(CCC)CN[C@H]1CCOC1=O",
                "CCC(CC)CCN[C@H]1CCOC1=O",
                "CCC(CC)CNC1CCOC1=O",
                "CCC(CC)CN[C@@H]1CCOC1=O",
                "CC(C)C(CC)CN[C@H]1CCOC1=O",
                "CCCCC(CC)CN[C@H]1CCOC1=O"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.006163120269775391,
            "chemical_diversity": 0.25665496521036135,
            "average_molecular_weight": 192.28049999999996,
            "api_call_time": 7.2721028327941895
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(CC)CN[C@H]1CCOC1=O', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1ccc(C2=NNC(=O)CS2)cc1OC",
                "CC1(C)OC(=O)N(Cc2ccc(F)cc2)C1=O",
                "O=C1NC(Cc2ccccc2)Cc2ccccc21",
                "CC(C)(C)OC(=O)N1CCN(c2ccc(C#N)cc2)CC1",
                "O=C(CSc1nccs1)N1CCN(c2ccccc2)CC1",
                "Cc1cc(C(=O)N2CCCC(O)C2)no1",
                "CC(C)(C)NC(=O)COc1cccc(C#N)c1",
                "Cc1nnc(SCC(=O)Nc2cccc(Cl)c2)o1",
                "O=C(NCc1ccco1)c1ccc(N2CCOCC2)cc1",
                "COC(=O)c1ccc(NC(=O)C2CCCO2)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(Cc2ccccc2)Cc2ccccc21",
                "CC(C)(C)OC(=O)N1CCN(c2ccc(C#N)cc2)CC1",
                "O=C(NCc1ccco1)c1ccc(N2CCOCC2)cc1",
                "COc1ccc(C2=NNC(=O)CS2)cc1OC",
                "CC1(C)OC(=O)N(Cc2ccc(F)cc2)C1=O",
                "Cc1nnc(SCC(=O)Nc2cccc(Cl)c2)o1",
                "O=C(CSc1nccs1)N1CCN(c2ccccc2)CC1",
                "Cc1cc(C(=O)N2CCCC(O)C2)no1",
                "COC(=O)c1ccc(NC(=O)C2CCCO2)cc1",
                "CC(C)(C)NC(=O)COc1cccc(C#N)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010329723358154297,
            "chemical_diversity": 0.8549224534956656,
            "average_molecular_weight": 259.54980000000006,
            "api_call_time": 13.154785633087158
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(CC)CN[C@H]1CCOC1=O', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(CC)CNC1CCOC1=O",
                "CCC(CC)CN[C@@H]1CCOC1=O",
                "CCC(C)CCN[C@H]1CCOC1=O",
                "CCC(CC)CN[C@H]1CC[N+](C)(C)C1=O",
                "CCC(CC)CN[C@H]1CCOC1=O",
                "CCC(CC)CN(C)[C@H]1CCOC1=O",
                "CCC(CC)CN[C@H]1CCNC1=O",
                "CCC(CC)CN[C@H]1CCOC1=S",
                "CCC(CC)CN[C@H]1CCSC1=O"
            ],
            "total_raw_response_smiles": [
                "CCC(CC)CN[C@H]1CCOC1=O",
                "CCC(CC)CN[C@@H]1CCOC1=O",
                "CCC(CC)CNC1CCOC1=O",
                "CCC(CC)CN[C@H]1CCSC1=O",
                "CCC(CC)CN[C@H]1CCNC1=O",
                "CCC(CC)CN[C@H]1CC[N+](C)(C)C1=O",
                "CCC(CC)CN[C@H]1CCOC1=S",
                "CC(CC)CCN[C@H]1CCOC1=O",
                "CCC(C)CCN[C@H]1CCOC1=O",
                "CCC(CC)CN(C)[C@H]1CCOC1=O"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.006276369094848633,
            "chemical_diversity": 0.4754079685798004,
            "average_molecular_weight": 193.40666666666664,
            "api_call_time": 8.32297658920288
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(CC)CN[C@H]1CCOC1=O', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CNC(=O)c1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)Nc1ccccc1",
                "Cn1ccnc1C(=O)NC1CC1",
                "N#Cc1cccc(O)c1",
                "Cc1nnc(SCC(=O)O)s1",
                "O=C(O)Cc1ccc(F)cc1",
                "O=C1CCCN1c1ccncc1",
                "COc1ccc(C=O)cc1",
                "O=C1C=C(c2ccccc2)C(=O)N1",
                "CC(=O)SCc1ccco1"
            ],
            "total_raw_response_smiles": [
                "CNC(=O)c1ccc(Cl)cc1",
                "O=C1NC(=O)C=C1c1ccccc1",
                "CC(C)(C)OC(=O)Nc1ccccc1",
                "O=C(O)Cc1ccc(F)cc1",
                "COc1ccc(C=O)cc1",
                "Cc1nnc(SCC(=O)O)s1",
                "N#Cc1cccc(O)c1",
                "CC(=O)SCc1ccco1",
                "O=C1CCCN1c1ccncc1",
                "Cn1ccnc1C(=O)NC1CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00716710090637207,
            "chemical_diversity": 0.8739872433746778,
            "average_molecular_weight": 161.92839999999998,
            "api_call_time": 9.019836187362671
        }
    ],
    "Nc1cccc(CNC(=O)C(=O)O)c1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'Nc1cccc(CNC(=O)C(=O)O)c1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "NCc1cccc(CNC(=O)C(=O)O)c1",
                "Nc1ccc(CNC(=O)C(=O)O)cc1",
                "COC(=O)C(=O)NCc1cccc(N)c1",
                "Nc1cccc(CNC(=O)C(=O)Cl)c1",
                "NC(=O)C(=O)NCc1cccc(N)c1",
                "Nc1cccc(CNC(=S)C(=O)O)c1",
                "CN(Cc1cccc(N)c1)C(=O)C(=O)O",
                "Nc1cccc(CNC(=O)C(=O)S)c1",
                "Nc1cccc(CNC(=O)C(=O)O)c1"
            ],
            "total_raw_response_smiles": [
                "Nc1cccc(CNC(=O)C(=O)O)c1",
                "Nc1ccc(CNC(=O)C(=O)O)cc1",
                "Nc1cccc(CNC(=O)C(=O)S)c1",
                "Nc1cccc(CNC(=O)C(=O)N)c1",
                "Nc1cccc(CNC(=S)C(=O)O)c1",
                "Nc1cccc(CN(C)C(=O)C(=O)O)c1",
                "NCc1cccc(CNC(=O)C(=O)O)c1",
                "Nc1cccc(CNC(=O)C(O)=O)c1",
                "Nc1cccc(CNC(=O)C(=O)Cl)c1",
                "Nc1cccc(CNC(=O)C(=O)OC)c1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.007132530212402344,
            "chemical_diversity": 0.4247110322877864,
            "average_molecular_weight": 204.37655555555557,
            "api_call_time": 8.297933101654053
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Nc1cccc(CNC(=O)C(=O)O)c1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(CSc1nncs1)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "O=C(O)c1ccc(NCc2cn(Cc3ccccc3)nn2)cc1",
                "COc1cc(C=NNC(=O)c2ccco2)cc(Br)c1O",
                "CC(C)(C)NC(=O)CN1C(=O)C(Cc2ccccc2)NC1=S",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "COc1ccc(C2C(C(=O)Nc3ccccc3F)=C(C)N=C3CCCC32)cc1",
                "CC(C)(C)OC(=O)Nc1ccc2c(c1)C(=O)c1ccccc1C2=O",
                "O=C(NCc1cccs1)c1cc(Cl)ccc1Cl",
                "Cc1nnc(SCC(=O)Nc2ccc(N3CCOCC3)cc2)s1",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc3ccccc3nc1N2"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)OC(=O)Nc1ccc2c(c1)C(=O)c1ccccc1C2=O",
                "O=C(NCc1cccs1)c1cc(Cl)ccc1Cl",
                "COc1cc(C=NNC(=O)c2ccco2)cc(Br)c1O",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc3ccccc3nc1N2",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "O=C(O)c1ccc(NCc2cn(Cc3ccccc3)nn2)cc1",
                "Cc1nnc(SCC(=O)Nc2ccc(N3CCOCC3)cc2)s1",
                "O=C(CSc1nncs1)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "COc1ccc(C2C(C(=O)Nc3ccccc3F)=C(C)N=C3CCCC32)cc1",
                "CC(C)(C)NC(=O)CN1C(=O)C(Cc2ccccc2)NC1=S"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012639284133911133,
            "chemical_diversity": 0.8529723315415003,
            "average_molecular_weight": 322.24760000000003,
            "api_call_time": 15.34231185913086
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Nc1cccc(CNC(=O)C(=O)O)c1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CNC(=O)C(=O)NCc1cccc(N)c1",
                "Nc1cccc(CNC(=O)C(=O)I)c1",
                "Nc1cccc(CNC(=O)C(=O)F)c1",
                "CCC(=O)C(=O)NCc1cccc(N)c1",
                "COC(=O)C(=O)NCc1cccc(N)c1",
                "Nc1cccc(CNC(=O)C(=O)S)c1",
                "NC(=O)C(=O)NCc1cccc(N)c1",
                "Nc1cccc(CNC(=O)C(=O)Cl)c1",
                "Nc1cccc(CNC(=O)C(=O)Br)c1",
                "Nc1cccc(CNC(=O)C(=O)O)c1"
            ],
            "total_raw_response_smiles": [
                "Nc1cccc(CNC(=O)C(=O)O)c1",
                "Nc1cccc(CNC(=O)C(=O)N)c1",
                "Nc1cccc(CNC(=O)C(=O)Cl)c1",
                "Nc1cccc(CNC(=O)C(=O)F)c1",
                "Nc1cccc(CNC(=O)C(=O)Br)c1",
                "Nc1cccc(CNC(=O)C(=O)I)c1",
                "Nc1cccc(CNC(=O)C(=O)S)c1",
                "Nc1cccc(CNC(=O)C(=O)CC)c1",
                "Nc1cccc(CNC(=O)C(=O)OC)c1",
                "Nc1cccc(CNC(=O)C(=O)NC)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007643222808837891,
            "chemical_diversity": 0.2675938116624391,
            "average_molecular_weight": 218.93400000000003,
            "api_call_time": 8.174538373947144
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Nc1cccc(CNC(=O)C(=O)O)c1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1ccc(Cn2c(=O)c3c(ncn3C)n(C)c2=O)cc1OC",
                "COc1cc(C=CC(=O)N2CCCCC2)cc(OC)c1OC",
                "CCN(CC)CCNC(=O)c1cc(Cl)c(N)cc1OC",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCCC2)cc1",
                "Cc1cc(C)nc(NC(=S)N2CCN(c3ccccc3)CC2)n1",
                "CC(C)(C)c1ccc(C(=O)N2CCOCC2)cc1",
                "O=C(O)CCC(=O)Nc1nc2ccccc2s1",
                "CC1(C)CC(NC(=O)c2ccco2)CC(C)(CN)O1",
                "Cc1noc(C)c1C(=O)Nc1cccc(C#N)c1",
                "O=C(Nc1ccc(Cl)cc1)c1ccc(N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)c1ccc(C(=O)N2CCOCC2)cc1",
                "O=C(Nc1ccc(Cl)cc1)c1ccc(N2CCOCC2)cc1",
                "COc1ccc(Cn2c(=O)c3c(ncn3C)n(C)c2=O)cc1OC",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCCC2)cc1",
                "CCN(CC)CCNC(=O)c1cc(Cl)c(N)cc1OC",
                "O=C(O)CCC(=O)Nc1nc2ccccc2s1",
                "Cc1noc(C)c1C(=O)Nc1cccc(C#N)c1",
                "COc1cc(C=CC(=O)N2CCCCC2)cc(OC)c1OC",
                "CC1(C)CC(NC(=O)c2ccco2)CC(C)(CN)O1",
                "Cc1cc(C)nc(NC(=S)N2CCN(c3ccccc3)CC2)n1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011091470718383789,
            "chemical_diversity": 0.8499217346766392,
            "average_molecular_weight": 285.3311,
            "api_call_time": 15.093678951263428
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Nc1cccc(CNC(=O)C(=O)O)c1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Nc1cccc(CNC(=O)CCCC(=O)O)c1",
                "Nc1cccc(CNC(=O)CCCCC(=O)O)c1",
                "Nc1cccc(CNC(=O)CCC(=O)O)c1",
                "NCCCCC(=O)C(=O)NCc1cccc(N)c1",
                "Nc1cccc(CNC(=O)CC(=O)O)c1",
                "NCCCC(=O)C(=O)NCc1cccc(N)c1",
                "NC(=O)C(=O)NCc1cccc(N)c1",
                "NCCC(=O)C(=O)NCc1cccc(N)c1",
                "NCC(=O)C(=O)NCc1cccc(N)c1",
                "Nc1cccc(CNC(=O)C(=O)O)c1"
            ],
            "total_raw_response_smiles": [
                "Nc1cccc(CNC(=O)C(=O)O)c1",
                "Nc1cccc(CNC(=O)CC(=O)O)c1",
                "Nc1cccc(CNC(=O)CCC(=O)O)c1",
                "Nc1cccc(CNC(=O)CCCC(=O)O)c1",
                "Nc1cccc(CNC(=O)CCCCC(=O)O)c1",
                "Nc1cccc(CNC(=O)C(=O)N)c1",
                "Nc1cccc(CNC(=O)C(=O)CN)c1",
                "Nc1cccc(CNC(=O)C(=O)CCN)c1",
                "Nc1cccc(CNC(=O)C(=O)CCCN)c1",
                "Nc1cccc(CNC(=O)C(=O)CCCCN)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007750749588012695,
            "chemical_diversity": 0.33291914104479703,
            "average_molecular_weight": 221.75199999999995,
            "api_call_time": 8.196693658828735
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Nc1cccc(CNC(=O)C(=O)O)c1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(=O)Nc1ccc2c(c1)C(=O)N(CC1CCCO1)C2=O",
                "COc1cc(C=NNC(=O)c2cc(C)on2)ccc1O",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(F)cc2)CC1",
                "O=C(CSc1nnc(-c2ccco2)o1)Nc1ccc(Cl)cc1",
                "Cc1cc(C(=O)NCc2cccc(Cl)c2)no1",
                "Cc1ccc(S(=O)(=O)N2CCN(C(=O)COc3cccc(C)c3)CC2)cc1",
                "COc1ccc(-c2cc(C(F)(F)F)nn2-c2ccc(S(N)(=O)=O)cc2)cc1",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(N)cc1C2c1cccs1",
                "O=C(NC1CCN(Cc2ccccc2)CC1)c1ccco1",
                "O=C(Cn1nnc(-c2ccccc2)n1)N1CCOCC1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)Nc1ccc2c(c1)C(=O)N(CC1CCCO1)C2=O",
                "O=C(CSc1nnc(-c2ccco2)o1)Nc1ccc(Cl)cc1",
                "COc1cc(C=NNC(=O)c2cc(C)on2)ccc1O",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(F)cc2)CC1",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(N)cc1C2c1cccs1",
                "O=C(Cn1nnc(-c2ccccc2)n1)N1CCOCC1",
                "Cc1cc(C(=O)NCc2cccc(Cl)c2)no1",
                "O=C(NC1CCN(Cc2ccccc2)CC1)c1ccco1",
                "Cc1ccc(S(=O)(=O)N2CCN(C(=O)COc3cccc(C)c3)CC2)cc1",
                "COc1ccc(-c2cc(C(F)(F)F)nn2-c2ccc(S(N)(=O)=O)cc2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011322498321533203,
            "chemical_diversity": 0.8440141650202431,
            "average_molecular_weight": 314.0375,
            "api_call_time": 15.893805027008057
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Nc1cccc(CNC(=O)C(=O)O)c1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Nc1cccc(CNC(=O)C(O)O)c1",
                "Nc1cccc(CNC(=O)C(=O)F)c1",
                "Nc1cccc(CNC(=O)C(=O)Cl)c1",
                "NC(=O)C(=O)NCc1cccc(N)c1",
                "NC1=CC(=O)NCC(C(=O)O)=CC=C1",
                "Nc1cccc(CNC(=S)C(=O)O)c1",
                "N#CC(=O)NCc1cccc(N)c1",
                "Nc1cccc(CNC(=O)C(=O)S)c1",
                "Nc1cccc(CNC(=O)C(=O)Br)c1",
                "Nc1cccc(CNC(=O)C(=O)O)c1"
            ],
            "total_raw_response_smiles": [
                "Nc1cccc(CNC(=O)C(=O)O)c1",
                "Nc1cccc(CNC(=O)C(=O)S)c1",
                "Nc1cccc(CNC(=O)C(=O)N)c1",
                "Nc1cccc(CNC(=O)C(O)O)c1",
                "Nc1cccc(CNC(=S)C(=O)O)c1",
                "Nc1cccc(CNC(=O)c1)C(=O)O",
                "Nc1cccc(CNC(=O)C#N)c1",
                "Nc1cccc(CNC(=O)C(=O)Cl)c1",
                "Nc1cccc(CNC(=O)C(=O)Br)c1",
                "Nc1cccc(CNC(=O)C(=O)F)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0074350833892822266,
            "chemical_diversity": 0.4236278750465554,
            "average_molecular_weight": 203.9403,
            "api_call_time": 9.206896781921387
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Nc1cccc(CNC(=O)C(=O)O)c1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Nc1ccnc(CNC(=O)C(=O)O)c1",
                "Nc1ccc(CNC(=O)C(=O)S)cc1",
                "N=C(NCc1cccc(N)c1)C(=O)O",
                "Nc1cccc(CNC(=O)C(=O)O)n1",
                "NCc1cccc(CNC(=O)C(=O)O)c1",
                "Nc1cccc(CN=C(O)C(=O)O)c1",
                "Nc1cccc(COC(=O)C(=O)O)c1",
                "Nc1cccc(CNC(=S)C(=O)O)c1",
                "Nc1cccc(CNC(=O)C(=O)O)c1",
                "Nc1cccc(CNC(=O)C(O)=S)c1"
            ],
            "total_raw_response_smiles": [
                "Nc1ccc(CNC(=O)C(=O)S)cc1",
                "Nc1cccc(CNC(=S)C(=O)O)c1",
                "Nc1cccc(CNC(=O)C(=S)O)c1",
                "Nc1cccc(CN=C(O)C(=O)O)c1",
                "Nc1cccc(CNC(=O)C(O)=O)c1",
                "Nc1ccnc(CNC(=O)C(=O)O)c1",
                "NCc1cccc(CNC(=O)C(=O)O)c1",
                "Nc1cccc(CNC(=O)C(=O)O)n1",
                "Nc1cccc(COC(=O)C(=O)O)c1",
                "Nc1cccc(CNC(=N)C(=O)O)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007228851318359375,
            "chemical_diversity": 0.5282821219342781,
            "average_molecular_weight": 200.6107,
            "api_call_time": 8.80323576927185
        }
    ],
    "O=C(CCO)NC[C@@H](O)C1CC1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C(CCO)NC[C@@H](O)C1CC1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CO[C@H](CNC(=O)CCO)C1CC1",
                "O=C(CCCO)NC[C@@H](O)C1CC1",
                "O=C(CO)NC[C@@H](O)C1CC1",
                "O=C(CCO)NC[C@H](O)C1CC1",
                "O=C(CCO)NC[C@@H](O)C1CCCC1",
                "O=C(CCO)N[C@@H](O)C1CC1",
                "O=C(CCO)NC[C@@H](O)C1CN1",
                "O=C(CCO)NC[C@@H](O)C1CCC1"
            ],
            "total_raw_response_smiles": [
                "O=C(CCO)NC[C@@H](O)C1CCC1",
                "O=C(CCO)NC[C@H](O)C1CC1",
                "O=C(CCO)NC[C@@H](O)C1CCC1",
                "O=C(CCCO)NC[C@@H](O)C1CC1",
                "O=C(CCO)NC[C@@H](O)C1CCCC1",
                "O=C(CO)NC[C@@H](O)C1CC1",
                "O=C(CCOH)NC[C@@H](O)C1CC1",
                "O=C(CCO)N[C@@H](O)C1CC1",
                "O=C(CCO)NC[C@@H](OC)C1CC1",
                "O=C(CCO)NC[C@@H](O)C1NC1"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.005172014236450195,
            "chemical_diversity": 0.40854082241952416,
            "average_molecular_weight": 178.59562499999998,
            "api_call_time": 8.877354860305786
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C(CCO)NC[C@@H](O)C1CC1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(Nc1ccccc1)C1CCCN(Cc2ccncc2)C1",
                "O=C(NC1CCN(C(=O)c2cccs2)CC1)C1CCCCC1",
                "COc1cccc(CN2CCC(NC(=O)c3ccc(Br)cc3)CC2)c1",
                "O=C(NC1CCCCC1)c1ccc(Cl)cc1",
                "CC(C)Cc1ccc(C(=O)NCCC2CCCO2)cc1",
                "Cc1cc(NC(=O)C2CCN(Cc3ccc(F)cc3)CC2)no1",
                "Cc1ncc(CO)c(CN2CCC(C(=O)N3CCCC3)CC2)n1",
                "CC(C)(C)NCC(O)c1ccccc1",
                "CC1(C)CC(O)CC(NC(=O)Cc2ccccc2)C1",
                "COc1ccc(CC(=O)N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)NCC(O)c1ccccc1",
                "O=C(NC1CCCCC1)c1ccc(Cl)cc1",
                "COc1ccc(CC(=O)N2CCOCC2)cc1",
                "CC1(C)CC(O)CC(NC(=O)Cc2ccccc2)C1",
                "O=C(Nc1ccccc1)C1CCCN(Cc2ccncc2)C1",
                "Cc1ncc(CO)c(CN2CCC(C(=O)N3CCCC3)CC2)n1",
                "CC(C)Cc1ccc(C(=O)NCCC2CCCO2)cc1",
                "O=C(NC1CCN(C(=O)c2cccs2)CC1)C1CCCCC1",
                "Cc1cc(NC(=O)C2CCN(Cc3ccc(F)cc3)CC2)no1",
                "COc1cccc(CN2CCC(NC(=O)c3ccc(Br)cc3)CC2)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010267972946166992,
            "chemical_diversity": 0.7952655892825993,
            "average_molecular_weight": 285.80090000000007,
            "api_call_time": 12.377886295318604
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C(CCO)NC[C@@H](O)C1CC1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 7,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(CCCO)NC[C@@H](O)C1CCC1",
                "O=C(CCCO)NC[C@@H](O)C1CC1",
                "O=C(CCO)NC[C@@H](O)C1CCCC1",
                "O=C(CCO)NC[C@@H](O)C1CCC1",
                "O=C(CCO)NC[C@@H](O)C1CCCCC1",
                "O=C(CCCO)NC[C@@H](O)C1CCCC1",
                "O=C(CCCO)NC[C@@H](O)C1CCCCC1"
            ],
            "total_raw_response_smiles": [
                "O=C(CCO)NC[C@@H](O)C1CCC1",
                "O=C(CCO)NC[C@@H](O)C1CCCC1",
                "O=C(CCO)NC[C@@H](O)C1CCCCC1",
                "O=C(CCCO)NC[C@@H](O)C1CC1",
                "O=C(CCCO)NC[C@@H](O)C1CCC1",
                "O=C(CCCO)NC[C@@H](O)C1CCCC1",
                "O=C(CCCO)NC[C@@H](O)C1CCCCC1",
                "O=C(CCOH)NC[C@@H](O)C1CC1",
                "O=C(CCOH)NC[C@@H](O)C1CCC1",
                "O=C(CCOH)NC[C@@H](O)C1CCCC1"
            ],
            "validity_ratio": 0.7,
            "post_processing_time": 0.004864931106567383,
            "chemical_diversity": 0.17777132661808437,
            "average_molecular_weight": 205.27371428571425,
            "api_call_time": 8.750304937362671
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C(CCO)NC[C@@H](O)C1CC1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1cc(C=C2C(=O)NC(=O)N(c3ccc(F)cc3)C2=O)ccc1O",
                "Cc1nnc(SCC(=O)Nc2cccc(C(F)(F)F)c2)s1",
                "O=C(Nc1ccccc1)c1ccc2c(c1)C(=O)N(CCN1CCOCC1)C2=O",
                "O=C(O)c1ccc(NCc2cn(Cc3ccccc3)nn2)cc1",
                "COc1ccc(C=NNC(=O)c2ccncc2)cc1O",
                "CC(C)(C)C(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3[nH]cnc23)CC1",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "CC1(C)CC(=O)NC(=O)C1",
                "O=C(Nc1ccc(F)cc1)C1CCN(Cc2ccccc2)CC1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)C(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "O=C(Nc1ccccc1)c1ccc2c(c1)C(=O)N(CCN1CCOCC1)C2=O",
                "CC1(C)CC(=O)NC(=O)C1",
                "COc1ccc(C=NNC(=O)c2ccncc2)cc1O",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3[nH]cnc23)CC1",
                "O=C(O)c1ccc(NCc2cn(Cc3ccccc3)nn2)cc1",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "Cc1nnc(SCC(=O)Nc2cccc(C(F)(F)F)c2)s1",
                "O=C(Nc1ccc(F)cc1)C1CCN(Cc2ccccc2)CC1",
                "COc1cc(C=C2C(=O)NC(=O)N(c3ccc(F)cc3)C2=O)ccc1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.01055002212524414,
            "chemical_diversity": 0.8594630769033638,
            "average_molecular_weight": 298.3334000000001,
            "api_call_time": 16.292869091033936
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C(CCO)NC[C@@H](O)C1CC1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(CCCO)NC[C@@H](O)C1CC1",
                "O=C(CCCCO)NC[C@@H](O)C1CC1",
                "O=C(CCO)NC[C@@H](O)C1CCCC1",
                "O=C(CO)NC[C@@H](O)C1CC1",
                "COCCOCCC(=O)NC[C@@H](O)C1CC1",
                "O=C(CCOF)NC[C@@H](O)C1CC1",
                "COCCOCCOCCC(=O)NC[C@@H](O)C1CC1",
                "O=C(CCO)NC[C@@H](O)C1CCC1",
                "O=C(CCO)NC[C@@H](O)C1CCCCC1",
                "COCCC(=O)NC[C@@H](O)C1CC1"
            ],
            "total_raw_response_smiles": [
                "O=C(CCO)NC[C@@H](O)C1CCC1",
                "O=C(CCO)NC[C@@H](O)C1CCCC1",
                "O=C(CCO)NC[C@@H](O)C1CCCCC1",
                "O=C(CCCO)NC[C@@H](O)C1CC1",
                "O=C(CCCCO)NC[C@@H](O)C1CC1",
                "O=C(CO)NC[C@@H](O)C1CC1",
                "O=C(CCOC)NC[C@@H](O)C1CC1",
                "O=C(CCOCCOC)NC[C@@H](O)C1CC1",
                "O=C(CCOCCOCCOC)NC[C@@H](O)C1CC1",
                "O=C(CCOF)NC[C@@H](O)C1CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006638765335083008,
            "chemical_diversity": 0.35333721949473673,
            "average_molecular_weight": 203.65659999999997,
            "api_call_time": 7.861121416091919
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C(CCO)NC[C@@H](O)C1CC1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(SCC(=O)Nc2cccc(C(F)(F)F)c2)s1",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc3ccccc3n1C2c1ccccc1Cl",
                "Nc1ncnc2c1ncn2CC(=O)NCc1ccc(F)cc1",
                "CC(C)Cn1c(=O)c(-c2cccs2)nc2cnc(N)nc21",
                "O=C(O)c1ccc(NC(=O)c2cc(Br)cs2)cc1",
                "COc1ccc(C2NC(=O)NC(C)=C2C(=O)Nc2ccccc2)cc1",
                "COc1cc(OC)c(C(=O)N2CCN(C(=O)c3ccco3)CC2)cc1OC",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "CC(C)(C)OC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "O=C(NCc1ccncc1)c1ccc(Cl)c(Cl)c1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)OC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "O=C(NCc1ccncc1)c1ccc(Cl)c(Cl)c1",
                "COc1ccc(C2C(C(=O)Nc3ccccc3)=C(C)NC(=O)N2)cc1",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc3ccccc3n1C2c1ccccc1Cl",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "O=C(O)c1ccc(NC(=O)c2cc(Br)cs2)cc1",
                "Cc1nnc(SCC(=O)Nc2cccc(C(F)(F)F)c2)s1",
                "O=C(Cn1cnc2c(N)ncnc21)NCc1ccc(F)cc1",
                "COc1cc(OC)c(C(=O)N2CCN(C(=O)c3ccco3)CC2)cc1OC",
                "CC(C)Cn1c(=O)c(-c2cccs2)nc2cnc(N)nc21"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012728214263916016,
            "chemical_diversity": 0.8514463763580118,
            "average_molecular_weight": 327.77750000000003,
            "api_call_time": 15.835772514343262
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C(CCO)NC[C@@H](O)C1CC1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(CCCl)NC[C@@H](O)C1CC1",
                "O=C(CCO)NC[C@H](O)C1CC1",
                "O=C(CCBr)NC[C@@H](O)C1CC1",
                "O=C(CCI)NC[C@@H](O)C1CC1",
                "O=C(CCO)NC[C@@H](O)C1CN1",
                "O=C(CCO)NC[C@@H](O)C1CCC1",
                "O=C(CCF)NC[C@@H](O)C1CC1",
                "O=C(CCO)NC[C@@H](O)C1CS1",
                "O=C(CCO)NC[C@@H](O)C1CC1"
            ],
            "total_raw_response_smiles": [
                "O=C(CCO)NC[C@@H](O)C1CC1",
                "O=C(CCO)NC[C@H](O)C1CC1",
                "O=C(CCO)NC[C@@H](O)C1CCC1",
                "O=C(CCO)NC[C@@H](O)C1CN1",
                "O=C(CCO)NC[C@@H](O)C1CS1",
                "O=C(CCOH)NC[C@@H](O)C1CC1",
                "O=C(CCF)NC[C@@H](O)C1CC1",
                "O=C(CCCl)NC[C@@H](O)C1CC1",
                "O=C(CCBr)NC[C@@H](O)C1CC1",
                "O=C(CCI)NC[C@@H](O)C1CC1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.005048274993896484,
            "chemical_diversity": 0.3573533493686113,
            "average_molecular_weight": 198.3548888888889,
            "api_call_time": 10.821964502334595
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=C(CCO)NC[C@@H](O)C1CC1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(CCCl)NC[C@@H](O)C1C=CC1",
                "O=C(CCCO)NC[C@@H](O)C1CCCO1",
                "C#CCC(=O)NC[C@@H](O)C1CCNC1",
                "O=C(CCBr)NC[C@@H](O)C1CCOC1",
                "O=C(CCI)NC[C@@H](O)C1CCNC1",
                "NCCC(=O)NC[C@@H](N)C1CCC1",
                "O=C(CC(F)F)NC[C@@H](O)C1CCOC1",
                "O=S(CCO)NC[C@@H](O)C1CCCC1",
                "O=C(CCF)NC[C@@H](O)C1CCSC1",
                "O=C(CCS)NC[C@@H](O)C1CCSC1"
            ],
            "total_raw_response_smiles": [
                "O=C(CCN)NC[C@@H](N)C1CCC1",
                "O=S(CCO)NC[C@@H](O)C1CCCC1",
                "O=C(CCCO)NC[C@@H](O)C1CCCO1",
                "O=C(CCS)NC[C@@H](O)C1CCSC1",
                "O=C(CC#C)NC[C@@H](O)C1CCNC1",
                "O=C(CCBr)NC[C@@H](O)C1CCOC1",
                "O=C(CCCl)NC[C@@H](O)C1CC=C1",
                "O=C(CCI)NC[C@@H](O)C1CCNC1",
                "O=C(CCF)NC[C@@H](O)C1CCSC1",
                "O=C(CC(F)F)NC[C@@H](O)C1CCOC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006402730941772461,
            "chemical_diversity": 0.6320543268647385,
            "average_molecular_weight": 228.1953,
            "api_call_time": 10.529554605484009
        }
    ],
    "C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H]1CC[C@H](C)N1C(=O)c1cccs1",
                "CC1CC[C@@H](C)N1C(=O)c1ccc[nH]1",
                "C[C@@H]1CC[C@@H](C)N1C(=O)c1ccc[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccco1",
                "CC1CC[C@H](C)N1C(=O)c1ccc[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1cccn1C",
                "C[C@@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1"
            ],
            "total_raw_response_smiles": [
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1",
                "C[C@@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1",
                "C[C@H]1CC[C@@H](C)N1C(=O)c1ccc[nH]1",
                "C[C@@H]1CC[C@@H](C)N1C(=O)c1ccc[nH]1",
                "CC1CC[C@H](C)N1C(=O)c1ccc[nH]1",
                "CC1CC[C@@H](C)N1C(=O)c1ccc[nH]1",
                "C[C@H]1CCC(C)N1C(=O)c1ccc[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccco1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1cccs1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1cccn1C"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.008486270904541016,
            "chemical_diversity": 0.32967032967033005,
            "average_molecular_weight": 196.26987500000004,
            "api_call_time": 10.95024824142456
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1NC2(CCCCC2)Nc2ccccc21",
                "O=C(Cn1ccnc1)Nc1ccc2c(c1)OCO2",
                "O=C1CCc2c(ccc3c2CCCC3)N1",
                "O=C1NC(=O)c2ccccc21",
                "O=C1CCCN1c1ccc2c(c1)OCCO2",
                "CC1(C)NC(=O)N(c2ccccc2)C1=O",
                "O=C1CCCC(=O)N1CCc1c[nH]c2ccccc12",
                "CC1(C)CC(=O)N(c2ccccc2)C(=O)C1",
                "O=C1NC(=O)C2(CCCCC2)N1c1ccccc1",
                "O=C1NC2(CCCC2)C(=O)N1c1ccccc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)c2ccccc21",
                "C1CCC2(CC1)NC(=O)c1ccccc1N2",
                "C1CC(=O)Nc2ccc3c(c21)CCCC3",
                "O=C(Cn1ccnc1)Nc1ccc2c(c1)OCO2",
                "CC1(C)CC(=O)N(c2ccccc2)C(=O)C1",
                "O=C1CCCN1c1ccc2c(c1)OCCO2",
                "CC1(C)NC(=O)N(c2ccccc2)C1=O",
                "O=C1NC(=O)C2(CCCCC2)N1c1ccccc1",
                "O=C1CCCC(=O)N1CCc1c[nH]c2ccccc12",
                "C1CCC2(C1)NC(=O)N(c1ccccc1)C2=O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010090112686157227,
            "chemical_diversity": 0.7767631475303937,
            "average_molecular_weight": 218.1527,
            "api_call_time": 13.365341424942017
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc(S)[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc(O)[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc(F)[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc(N)[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc(C(F)(F)F)[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc(Cl)[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1cccn1C",
                "Cc1ccc(C(=O)N2[C@@H](C)CC[C@@H]2C)[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc(Br)[nH]1"
            ],
            "total_raw_response_smiles": [
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1cccn1C",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc(F)[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc(Cl)[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc(Br)[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc(C)[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc(O)[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc(N)[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc(S)[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc(C(F)(F)F)[nH]1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009207487106323242,
            "chemical_diversity": 0.39460054882126894,
            "average_molecular_weight": 221.3083,
            "api_call_time": 12.80642557144165
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1cc(C(=O)N2CCN(c3ncccn3)CC2)no1",
                "Cc1noc(C)c1-c1ccc(CN2CCN(C(=O)c3ccco3)CC2)cc1",
                "O=C(Nc1ccc(Cl)cc1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2",
                "COc1ccc(-c2nc3ccccc3[nH]2)cc1OC",
                "O=C(O)c1cccc(NC(=O)C2CC2)c1",
                "CCN(CC)CCNC(=O)c1cc(Br)c[nH]1",
                "CC1(C)OB(c2ccc(C#N)cc2)OC1(C)C",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "COc1cc(C=NNC(=O)c2ccncc2)ccc1O",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "COc1ccc(-c2nc3ccccc3[nH]2)cc1OC",
                "Cc1noc(C)c1-c1ccc(CN2CCN(C(=O)c3ccco3)CC2)cc1",
                "O=C(Nc1ccc(Cl)cc1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2",
                "CC1(C)OB(c2ccc(C#N)cc2)OC1(C)C",
                "CCN(CC)CCNC(=O)c1cc(Br)c[nH]1",
                "Cc1cc(C(=O)N2CCN(c3ncccn3)CC2)no1",
                "O=C(O)c1cccc(NC(=O)C2CC2)c1",
                "COc1cc(C=NNC(=O)c2ccncc2)ccc1O",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011109352111816406,
            "chemical_diversity": 0.8666215360857366,
            "average_molecular_weight": 285.133,
            "api_call_time": 17.07368493080139
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 7,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H]1CC[C@H](C)N1C(=O)c1cccnc1",
                "CC[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1",
                "CC1CC[C@H](C)N1C(=O)c1ccc[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1cc[nH]c1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1cccn1C",
                "C[C@@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1"
            ],
            "total_raw_response_smiles": [
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1cccn1C",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]c1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1cc[nH]c1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccnc1",
                "CC1CC[C@H](C)N1C(=O)c1ccc[nH]1",
                "C[C@H]1CC[C@@H](C)N1C(=O)c1ccc[nH]1",
                "C[C@H]1CCC(C)N1C(=O)c1ccc[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1cnccc1",
                "C[C@H]1CC[C@H](CC)N1C(=O)c1ccc[nH]1"
            ],
            "validity_ratio": 0.7,
            "post_processing_time": 0.007282257080078125,
            "chemical_diversity": 0.4135731778840347,
            "average_molecular_weight": 197.98557142857143,
            "api_call_time": 11.425204753875732
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCc1ccco1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2=O",
                "CC1(C)OB(c2ccc(S(=O)(=O)N3CCOCC3)cc2)OC1(C)C",
                "O=C(Nc1ccc(S(=O)(=O)N2CCCCC2)cc1)c1cc2ccccc2o1",
                "CC(=O)NC1CCN(C(=O)CSc2nnc(-c3ccco3)o2)CC1",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(N3CCOCC3)cc1N2",
                "COc1ccc(C2=NNC(=O)C3(CC3)N2)cc1OC",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccc(F)cc1",
                "Cc1nnc(SCC(=O)N2CCN(c3ncccn3)CC2)s1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(C#N)cc2)CC1",
                "O=C(O)C1CCN(C(=O)c2cc3cc(Cl)ccc3[nH]2)CC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccc(F)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(C#N)cc2)CC1",
                "CC1(C)OB(c2ccc(S(=O)(=O)N3CCOCC3)cc2)OC1(C)C",
                "O=C(NCc1ccco1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2=O",
                "COc1ccc(C2=NNC(=O)C3(CC3)N2)cc1OC",
                "CC(=O)NC1CCN(C(=O)CSc2nnc(-c3ccco3)o2)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCCCC2)cc1)c1cc2ccccc2o1",
                "Cc1nnc(SCC(=O)N2CCN(c3ncccn3)CC2)s1",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(N3CCOCC3)cc1N2",
                "O=C(O)C1CCN(C(=O)c2cc3cc(Cl)ccc3[nH]2)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011594533920288086,
            "chemical_diversity": 0.8643509683370859,
            "average_molecular_weight": 329.7456000000001,
            "api_call_time": 16.471510887145996
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 5,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H]1CC[C@H](C)N1C(=O)c1cccnc1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1cccs1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccco1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1cccn1C",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1"
            ],
            "total_raw_response_smiles": [
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1cccn1C",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]c1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1cnccc1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccco1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1cccs1",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1C",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1O",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1S",
                "C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1F"
            ],
            "validity_ratio": 0.5,
            "post_processing_time": 0.005424976348876953,
            "chemical_diversity": 0.5223264540337711,
            "average_molecular_weight": 201.0768,
            "api_call_time": 10.977783441543579
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1CC[C@H](C)N1C(=O)c1ccc[nH]1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(c1ccc[nH]1)N1CCOCC1",
                "O=C(c1cccs1)N1CCNCC1",
                "O=C1CCc2ccccc2N1",
                "O=C1NC(=O)c2ccccc21",
                "O=C(c1cccs1)N1CCOCC1",
                "O=C1CCCN1C(=O)c1ccc[nH]1",
                "O=C1CCCCN1C(=O)c1ccc[nH]1",
                "O=C(c1ccco1)N1CCNCC1",
                "O=C(c1ccc[nH]1)N1CCNCC1",
                "O=C(c1ccco1)N1CCOCC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)c2ccccc21",
                "C1CC(=O)Nc2ccccc21",
                "C1COCCN1C(=O)c1ccco1",
                "C1CNCCN1C(=O)c1cccs1",
                "C1COCCN1C(=O)c1cccs1",
                "C1CNCCN1C(=O)c1ccco1",
                "C1COCCN1C(=O)c1ccc[nH]1",
                "C1CNCCN1C(=O)c1ccc[nH]1",
                "O=C1CCCN1C(=O)c1ccc[nH]1",
                "O=C1CCCCN1C(=O)c1ccc[nH]1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008673429489135742,
            "chemical_diversity": 0.6674044559431989,
            "average_molecular_weight": 177.90809999999996,
            "api_call_time": 8.756918668746948
        }
    ],
    "CCCN(C)C(=O)[C@@](C)(O)CCC": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCN(C)C(=O)[C@@](C)(O)CCC', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCN(C)C(=O)[C@@](C)(O)CCCF",
                "CCCN(C)C(=O)C(C)(O)CCC",
                "CCCN(C)C(=O)[C@](C)(O)CCC",
                "CCCN(C)C(=O)[C@@](C)(O)CC",
                "CCCN(CC)C(=O)[C@@](C)(O)CCC",
                "CCC[C@@H](C)C(=O)N(C)CCC",
                "CCCN(C)C(=O)[C@](O)(CC)CCC",
                "CCCN(C)C(=O)[C@@](C)(O)CC(C)C",
                "CCCC[C@](C)(O)C(=O)N(C)CCC",
                "CCCN(C)C(=O)[C@](C)(CCC)OC"
            ],
            "total_raw_response_smiles": [
                "CCCN(C)C(=O)[C@](C)(O)CCC",
                "CCCN(C)C(=O)[C@@](C)(O)CC",
                "CCCN(C)C(=O)[C@@](C)(O)CCCC",
                "CCCN(C)C(=O)[C@@](CC)(O)CCC",
                "CCCN(C)C(=O)[C@@](C)(OC)CCC",
                "CCCN(C)C(=O)C(C)(O)CCC",
                "CCCN(C)C(=O)[C@@](C)(O)CC(C)C",
                "CCCN(CC)C(=O)[C@@](C)(O)CCC",
                "CCCN(C)C(=O)[C@H](C)CCC",
                "CCCN(C)C(=O)[C@@](C)(O)CCCF"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004767894744873047,
            "chemical_diversity": 0.44567333399573816,
            "average_molecular_weight": 193.09289999999993,
            "api_call_time": 9.970269680023193
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCN(C)C(=O)[C@@](C)(O)CCC', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1N(CCN2CCOCC2)CNC12CCCCC2",
                "Cc1nnc(SCC(=O)Nc2cccc(C(F)(F)F)c2)s1",
                "CC(C)Cn1cnc2c(c1=O)c(=O)n(CC(C)C)c(=O)n2C",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccccc2)CC1",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Cl)cc1C2",
                "Cn1c(=O)n(C2CCCC2)c(=O)c2c1ncn2CC(=O)N1CCOCC1",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccs1",
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccccc1",
                "O=C(NCc1ccccc1)c1ccc(CN2CCOCC2)cc1",
                "COc1ccc(-c2n[nH]c(=O)c3ccccc23)cc1OC"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccccc1",
                "C1CCC2(CC1)C(=O)N(CCN1CCOCC1)CN2",
                "CC(C)(C)OC(=O)N1CCC(CC1)NC(=O)c1ccccc1",
                "O=C(NCc1ccccc1)c1ccc(CN2CCOCC2)cc1",
                "COc1ccc(C2=NNC(=O)C3=C2C=CC=C3)cc1OC",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Cl)cc1C2",
                "Cc1nnc(SCC(=O)Nc2cccc(C(F)(F)F)c2)s1",
                "O=C(Cn1cnc2c1c(=O)n(C1CCCC1)c(=O)n2C)N1CCOCC1",
                "CC(C)Cn1cnc2c(c1=O)c(=O)n(CC(C)C)c(=O)n2C",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccs1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011007070541381836,
            "chemical_diversity": 0.8694788644404268,
            "average_molecular_weight": 294.49490000000003,
            "api_call_time": 16.599263906478882
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCN(C)C(=O)[C@@](C)(O)CCC', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCN(C)C(=O)[C@@](C)(O)CC",
                "CCCN(C)C(=O)[C@](C)(O)CCC",
                "CCCN(C)C(=O)[C@@](C)(O)CCC",
                "CCCN(CC)C(=O)[C@@](C)(O)CCC",
                "CCCN(C)C(=O)[C@](O)(CC)CCC",
                "CCCN(C)C(=N)[C@@](C)(O)CCC",
                "CCCN(C)C(=O)[C@@](C)(O)CC(C)C",
                "CCCC[C@](C)(O)C(=O)N(C)CCC",
                "CCCN(C)C(=O)[C@](C)(CCC)OC",
                "CCC[C@](C)(O)C(=O)N(C)CC(C)C"
            ],
            "total_raw_response_smiles": [
                "CCCN(C)C(=O)[C@@](C)(O)CCC",
                "CCCN(C)C(=O)[C@@](C)(O)CCCC",
                "CCCN(C)C(=O)[C@@](C)(O)CC",
                "CCCN(C)C(=O)[C@@](C)(OC)CCC",
                "CCCN(C)C(=O)[C@@](C)(O)CC(C)C",
                "CCCN(C)C(=O)[C@@](CC)(O)CCC",
                "CCCN(CC)C(=O)[C@@](C)(O)CCC",
                "CCCN(C)C(=O)[C@](C)(O)CCC",
                "CC(C)CN(C)C(=O)[C@@](C)(O)CCC",
                "CCCN(C)C(=N)[C@@](C)(O)CCC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004786252975463867,
            "chemical_diversity": 0.43625453117141444,
            "average_molecular_weight": 194.19809999999995,
            "api_call_time": 8.247813940048218
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCN(C)C(=O)[C@@](C)(O)CCC', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCOC(=O)c1ccccc1N",
                "CCOC(=O)C(C)NC(=O)c1c[nH]c2ccccc12",
                "O=C1NC(=O)C(=O)N1",
                "Cc1nnc(NC(=O)c2ccco2)s1",
                "CC(C)NCC(O)COc1cccc2c1CCCC2",
                "Cc1ccc(C(=O)Nc2ccc(Cl)cc2)cc1",
                "CC1=CC(=O)N(CCCC(=O)O)C(=O)C1",
                "O=C(NCCc1cccs1)c1ccncc1",
                "CC(C)(C)OC(=O)NCCc1c[nH]c2ccccc12",
                "COc1ccc(CC(=O)Nc2nccs2)cc1OC"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)N1",
                "CC1=CC=C(C=C1)C(=O)NC2=CC=C(Cl)C=C2",
                "CCOC(=O)C1=CC=CC=C1N",
                "CC(C)(C)OC(=O)NCCC1=CNC2=C1C=CC=C2",
                "CC1=NN=C(NC(=O)C2=CC=CO2)S1",
                "O=C(NCCC1=CC=CS1)C2=CC=NC=C2",
                "COC1=C(OC)C=C(CC(=O)NC2=NC=CS2)C=C1",
                "CC1=CC(=O)N(CCCC(=O)O)C(=O)C1",
                "CC(C)NCC(O)COC1=CC=CC2=C1CCCC2",
                "CCOC(=O)C(C)NC(=O)C1=CNC2=CC=CC=C12"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008646488189697266,
            "chemical_diversity": 0.8491955773657921,
            "average_molecular_weight": 224.006,
            "api_call_time": 12.891766786575317
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCN(C)C(=O)[C@@](C)(O)CCC', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC[C@](C)(O)C(=O)N(C)CC",
                "CCCN(C)C(=O)[C@@](C)(O)CC",
                "CCCN(C)C(=O)[C@@](C)(O)CCC",
                "CCCN(CC)C(=O)[C@@](C)(O)CCC",
                "CCCN(C)C(=O)[C@](O)(CC)CCC",
                "CCCN(C)C(=O)[C@](C)(CCC)OC",
                "CCCCC[C@](C)(O)C(=O)N(C)CCC",
                "CCCN(C)C(=O)C(C)(C)O",
                "CCCC[C@](C)(O)C(=O)N(C)CCC",
                "CCCCN(C)C(=O)[C@@](C)(O)CCC"
            ],
            "total_raw_response_smiles": [
                "CCCN(C)C(=O)[C@@](C)(O)CCC",
                "CCCN(C)C(=O)[C@@](C)(O)CCCC",
                "CCCN(C)C(=O)[C@@](C)(O)CC",
                "CCCN(C)C(=O)[C@@](C)(O)CCCCC",
                "CCCN(C)C(=O)[C@@](C)(O)C",
                "CCN(C)C(=O)[C@@](C)(O)CCC",
                "CCCCN(C)C(=O)[C@@](C)(O)CCC",
                "CCCN(CC)C(=O)[C@@](C)(O)CCC",
                "CCCN(C)C(=O)[C@@](CC)(O)CCC",
                "CCCN(C)C(=O)[C@@](C)(OC)CCC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004783153533935547,
            "chemical_diversity": 0.4121285509351863,
            "average_molecular_weight": 191.49109999999996,
            "api_call_time": 9.346852540969849
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCN(C)C(=O)[C@@](C)(O)CCC', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1ccc(O)c(O)c1",
                "O=C1NC(=O)C(c2ccccc2)=C1Nc1ccc(Cl)cc1",
                "Cc1cc(C)n2nc(NC(=O)c3ccc(F)cc3)nc2n1",
                "COc1ccc(-c2n[nH]c(=O)c3ccc(C)cc23)cc1OC",
                "COc1cc(C=NNC(=O)c2ccncc2)ccc1O",
                "CC(C)(C)OC(=O)N1CCC(C(=O)N2CCOCC2)CC1",
                "Cc1cc(=O)oc2cc(O)c(C(=O)NCc3ccccc3)cc12",
                "O=C(NCc1cccs1)c1ccc(C(=O)N2CCOCC2)cc1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "C[C@H]1CCC[C@@H](C(=O)N2CCN(c3ncccn3)CC2)C1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1Nc1ccc(Cl)cc1",
                "C[C@H]1CCC[C@@H](C(=O)N2CCN(c3ncccn3)CC2)C1",
                "CC(C)(C)OC(=O)N1CCC(C(=O)N2CCOCC2)CC1",
                "O=C(NCc1cccs1)c1ccc(C(=O)N2CCOCC2)cc1",
                "COc1ccc(C2=NNC(=O)C3=C2C=C(C)C=C3)cc1OC",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1ccc(O)c(O)c1",
                "Cc1cc(C)n2nc(NC(=O)c3ccc(F)cc3)nc2n1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "CC1=CC(=O)Oc2cc(O)c(C(=O)NCc3ccccc3)cc21",
                "COc1cc(C=NNC(=O)c2ccncc2)ccc1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011858224868774414,
            "chemical_diversity": 0.8649466129227648,
            "average_molecular_weight": 300.88,
            "api_call_time": 15.660035610198975
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCN(C)C(=O)[C@@](C)(O)CCC', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCN(C)C(=O)C(C)(O)CCC",
                "CCCN(C)C(=O)[C@](C)(O)CCC",
                "CCCN(C)C(=O)[C@@](C)(O)CC",
                "CCCN(CC)C(=O)[C@@](C)(O)CCC",
                "CC=C[C@](C)(O)C(=O)N(C)CCC",
                "CCCN(C)C(=O)[C@](O)(CC)CCC",
                "CCC[C@H](C)C(=O)N(C)CCC",
                "CCCN(C)C(=N)[C@@](C)(O)CCC",
                "CCCC[C@](C)(O)C(=O)N(C)CCC",
                "CCCN(C)C(=O)[C@](C)(CCC)OC"
            ],
            "total_raw_response_smiles": [
                "CCCN(C)C(=O)[C@](C)(O)CCC",
                "CCCN(C)C(=O)[C@@](C)(O)CC",
                "CCCN(C)C(=O)[C@@](C)(O)CCCC",
                "CCCN(C)C(=O)[C@@](CC)(O)CCC",
                "CCCN(C)C(=O)[C@@H](C)CCC",
                "CCCN(C)C(=O)C(C)(O)CCC",
                "CCCN(CC)C(=O)[C@@](C)(O)CCC",
                "CCCN(C)C(=N)[C@@](C)(O)CCC",
                "CCCN(C)C(=O)[C@@](C)(OC)CCC",
                "CCCN(C)C(=O)[C@@](C)(O)C=CC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004867076873779297,
            "chemical_diversity": 0.4767667722261999,
            "average_molecular_weight": 189.5912,
            "api_call_time": 9.193251609802246
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCN(C)C(=O)[C@@](C)(O)CCC', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)C(=O)N1CCCC1C#N",
                "CC1=NN(C2CC2)C(=O)C1",
                "CC1(C)OC(=O)NC1=O",
                "O=c1cc[nH]c(=O)n1CCO",
                "COc1ccc(C=O)o1",
                "CCOC(=O)c1cccc(O)c1",
                "CCC(=O)n1ccsc1=O",
                "CNC(=S)NCc1ccco1",
                "C=CCOC(=O)C(F)(F)F",
                "Cc1c[nH]c(=O)[nH]c1=O"
            ],
            "total_raw_response_smiles": [
                "CCOC(=O)C1=CC=CC(O)=C1",
                "CC(C)C(=O)N1CCCC1C#N",
                "O=C1NC=CC(=O)N1CCO",
                "CC1=NN(C(=O)C1)C2CC2",
                "CCC(=O)N1C=CSC1=O",
                "COC1=CC=C(C=O)O1",
                "CNC(=S)NCC1=CC=CO1",
                "CC1(C)OC(=O)NC1=O",
                "C=CCOC(=O)C(F)(F)F",
                "CC1=CNC(=O)NC1=O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0057027339935302734,
            "chemical_diversity": 0.9003659856484494,
            "average_molecular_weight": 148.957,
            "api_call_time": 10.207646608352661
        }
    ],
    "C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 7,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@@H]1C[C@H](O)CN1CCc1cnn[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1c[nH]cn1",
                "C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1cnc[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1c[nH]c(=O)[nH]1",
                "C[C@H]1C[C@@H](O)CN1CCc1cnn[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1cn[nH]c1"
            ],
            "total_raw_response_smiles": [
                "C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1",
                "C[C@@H]1C[C@H](O)CN1CCc1cnn[nH]1",
                "C[C@H]1C[C@@H](O)CN1CCc1cnn[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1c[nH]c(=O)[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1cn[nH]c1",
                "C[C@H]1C[C@H](O)CN1CCc1cnc[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1cncn1",
                "C[C@H]1C[C@H](O)CN1CCc1c[nH]cn1",
                "C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1cnnn1"
            ],
            "validity_ratio": 0.7,
            "post_processing_time": 0.007368803024291992,
            "chemical_diversity": 0.3635102003497439,
            "average_molecular_weight": 197.97500000000005,
            "api_call_time": 12.45737099647522
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1ccc(Cn2c(=O)c3c(ncn3C)n(C)c2=O)cc1OC",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "Cc1nc(SCC(=O)Nc2cccc(Cl)c2)c2ccccc2n1",
                "CCN(CC)CCNC(=O)c1ccc(N)cc1",
                "Cc1cc(C(=O)Nc2ccc(C)c(C(=O)N3CCOCC3)c2)no1",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "COc1cc(C=NNC(=O)c2ccncc2)ccc1O",
                "O=C(CN1CCOCC1)Nc1ccc(Cl)c(C(F)(F)F)c1",
                "CC1(C)CC(=O)C2=C(C1)Nc1[nH]nc(Br)c1C2",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "COc1ccc(Cn2c(=O)c3c(ncn3C)n(C)c2=O)cc1OC",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "Cc1nc(SCC(=O)Nc2cccc(Cl)c2)c2ccccc2n1",
                "O=C(CN1CCOCC1)Nc1ccc(Cl)c(C(F)(F)F)c1",
                "CC1(C)CC(=O)C2=C(C1)Nc1[nH]nc(Br)c1C2",
                "Cc1ccc(NC(=O)c2cc(C)on2)cc1C(=O)N1CCOCC1",
                "COc1cc(C=NNC(=O)c2ccncc2)ccc1O",
                "CCN(CC)CCNC(=O)c1ccc(N)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.01151585578918457,
            "chemical_diversity": 0.862066144678215,
            "average_molecular_weight": 296.90040000000005,
            "api_call_time": 14.89585542678833
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 5,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H]1C[C@H](O)CN1CCc1c[nH]nn1",
                "C[C@H]1C[C@H](O)CN1CCc1c[nH]cn1",
                "C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1cnc[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1cn[nH]c1"
            ],
            "total_raw_response_smiles": [
                "C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1c[nH]cn1",
                "C[C@H]1C[C@H](O)CN1CCc1cn[nH]c1",
                "C[C@H]1C[C@H](O)CN1CCc1cnc[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1cncn1",
                "C[C@H]1C[C@H](O)CN1CCc1c[nH]nc1",
                "C[C@H]1C[C@H](O)CN1CCc1cnnc1",
                "C[C@H]1C[C@H](O)CN1CCc1cnnn1",
                "C[C@H]1C[C@H](O)CN1CCc1nn[nH]c1",
                "C[C@H]1C[C@H](O)CN1CCc1nnnc1"
            ],
            "validity_ratio": 0.5,
            "post_processing_time": 0.006039857864379883,
            "chemical_diversity": 0.40950310062307993,
            "average_molecular_weight": 195.66120000000004,
            "api_call_time": 10.200155973434448
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)O[C@@H]2[C@@H](CO[C@]3(COS(N)(=O)=O)OC(C)(C)O[C@@H]23)O1",
                "O=C(NCCO)c1ccc(OCCSc2ccccc2)nc1",
                "CC(=O)OCCC/C=C/C=C/C=C/CCCCC(=O)O",
                "COc1ccc(-c2cc(=O)c3c(O)c(OC)c(OC)cc3o2)cc1O",
                "COc1cc(OC)c2c(=O)cc(-c3ccccc3)oc2c1",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccs1",
                "CC(C)(C)OC(=O)NCCSSCCNC(=O)OC(C)(C)C",
                "CC(C)Oc1ccc(C=NNC(=O)c2ccncc2)cc1",
                "O=C(O)c1ccc(N=Nc2c(O)ccc3ccccc23)cc1",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "COc1ccc(-c2cc(=O)c3c(O)c(OC)c(OC)cc3o2)cc1O",
                "CC(C)(C)OC(=O)NCCSSCCNC(=O)OC(C)(C)C",
                "O=C(O)c1ccc(N=Nc2c(O)ccc3ccccc23)cc1",
                "CC1(C)O[C@@H]2CO[C@]3(COS(N)(=O)=O)OC(C)(C)O[C@H]3[C@@H]2O1",
                "CC(C)Oc1ccc(C=NNC(=O)c2ccncc2)cc1",
                "O=C(NCCO)c1ccc(OCCSc2ccccc2)nc1",
                "COc1cc(OC)c2c(=O)cc(-c3ccccc3)oc2c1",
                "CC(=O)OCCC/C=C/C=C/C=C/CCCCC(=O)O",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccs1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010527849197387695,
            "chemical_diversity": 0.8866612633878439,
            "average_molecular_weight": 304.55670000000003,
            "api_call_time": 16.622406244277954
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 6,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H]1C[C@H](O)CN1CCc1cc[nH]n1",
                "C[C@H]1C[C@H](O)CN1CCc1c[nH]cn1",
                "C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1ccc[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1cnc[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1cn[nH]c1"
            ],
            "total_raw_response_smiles": [
                "C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1c[nH]cn1",
                "C[C@H]1C[C@H](O)CN1CCc1cn[nH]c1",
                "C[C@H]1C[C@H](O)CN1CCc1cnc[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1cncn1",
                "C[C@H]1C[C@H](O)CN1CCc1c[nH]nc1",
                "C[C@H]1C[C@H](O)CN1CCc1cc[nH]n1",
                "C[C@H]1C[C@H](O)CN1CCc1ccnn1",
                "C[C@H]1C[C@H](O)CN1CCc1ccc[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1ccnc1"
            ],
            "validity_ratio": 0.6,
            "post_processing_time": 0.0063970088958740234,
            "chemical_diversity": 0.4215046527636077,
            "average_molecular_weight": 195.26600000000005,
            "api_call_time": 10.547504186630249
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1ccc(-c2cc(C(F)(F)F)nn2-c2ccc(S(=O)(=O)N3CCCC3)cc2)cc1",
                "O=C1NC(=O)C(c2cccc(Cl)c2)=C1c1ccccc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(F)cc2)CC1",
                "COc1cc(OC)c(C(=O)NCc2cccc(C(F)(F)F)c2)cc1Br",
                "O=C(NCc1ccco1)c1ccc(CN2CCN(c3ncccn3)CC2)cc1",
                "O=C(O)c1cccc(NC(=O)c2ccc(-c3ccccc3)s2)c1",
                "Cc1cc(Cl)ccc1NC(=O)Nc1cccc(C#N)c1",
                "Cc1nc2ccccc2c(=O)n1-c1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "CC(=O)Nc1ccc(OCc2cn(Cc3ccccc3)nn2)cc1",
                "Cc1ccc(NC(=O)c2ccc(CN3CCN(C)CC3)cc2)cc1Cl"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1cccc(Cl)c1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(F)cc2)CC1",
                "Cc1nc2ccccc2c(=O)n1-c1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "O=C(NCc1ccco1)c1ccc(CN2CCN(c3ncccn3)CC2)cc1",
                "COc1ccc(-c2cc(C(F)(F)F)nn2-c2ccc(S(=O)(=O)N3CCCC3)cc2)cc1",
                "CC(=O)Nc1ccc(OCc2cn(Cc3ccccc3)nn2)cc1",
                "Cc1ccc(NC(=O)c2ccc(CN3CCN(C)CC3)cc2)cc1Cl",
                "O=C(O)c1cccc(NC(=O)c2ccc(-c3ccccc3)s2)c1",
                "Cc1cc(Cl)ccc1NC(=O)Nc1cccc(C#N)c1",
                "COc1cc(OC)c(C(=O)NCc2cccc(C(F)(F)F)c2)cc1Br"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.013898849487304688,
            "chemical_diversity": 0.8405210763092665,
            "average_molecular_weight": 352.8026000000001,
            "api_call_time": 15.484804153442383
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 7,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H]1C[C@H](S)CN1CCc1cnn[nH]1",
                "C[C@@H]1C[C@H](O)CN1CCc1cnn[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1cnc[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1nnn[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1ccn[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1cn[nH]c1"
            ],
            "total_raw_response_smiles": [
                "C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1cn[nH]c1",
                "C[C@H]1C[C@H](O)CN1CCc1cnc[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1",
                "C[C@@H]1C[C@H](O)CN1CCc1cnn[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1cncn1",
                "C[C@H]1C[C@H](O)CN1CCc1ccn[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1nnn[nH]1",
                "C[C@H]1C[C@H](S)CN1CCc1cnn[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1c[nH]n1"
            ],
            "validity_ratio": 0.7,
            "post_processing_time": 0.006477832794189453,
            "chemical_diversity": 0.4184772286298263,
            "average_molecular_weight": 198.26714285714283,
            "api_call_time": 10.791340827941895
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1C[C@H](O)CN1CCc1cnn[nH]1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H]1C[C@H](O)CN1CCc1cocn1",
                "C[C@@H]1C[C@@H](O)CN1CCc1ccco1",
                "C[C@H]1C[C@H](O)CN1CCc1ccsc1",
                "C[C@H]1C[C@H](O)CN1CCc1cncs1",
                "C[C@H]1C[C@H](O)CN1CCc1cc[nH]n1",
                "C[C@H]1C[C@H](O)CN1CCc1c[nH]cn1",
                "C[C@H]1C[C@H](O)CN1CCc1ncc[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1ccno1",
                "C[C@H]1C[C@H](S)CN1CCc1nccs1",
                "C[C@H]1C[C@H](O)CN1CCc1cc[nH]c1"
            ],
            "total_raw_response_smiles": [
                "C[C@H]1C[C@H](S)CN1CCc1nccs1",
                "C[C@@H]1C[C@@H](O)CN1CCc1ccco1",
                "C[C@H]1C[C@H](O)CN1CCc1cc[nH]c1",
                "C[C@H]1C[C@H](O)CN1CCc1cncs1",
                "C[C@H]1C[C@H](O)CN1CCc1ccsc1",
                "C[C@H]1C[C@H](O)CN1CCc1c[nH]cn1",
                "C[C@H]1C[C@H](O)CN1CCc1ncc[nH]1",
                "C[C@H]1C[C@H](O)CN1CCc1cc[nH]n1",
                "C[C@H]1C[C@H](O)CN1CCc1ncoc1",
                "C[C@H]1C[C@H](O)CN1CCc1ccno1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008405208587646484,
            "chemical_diversity": 0.4932425149189965,
            "average_molecular_weight": 201.98720000000003,
            "api_call_time": 10.528602838516235
        }
    ],
    "NC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'NC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "NC(=O)N[C@H]1CCC[C@@H]2OCC[C@H]12",
                "NC(=O)N[C@@H]1CCC[C@@H]2NC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@H]2OCC[C@H]12",
                "NC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "N[C@@H]1CCC[C@@H]2OCC[C@H]12",
                "CC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "NC(=O)N[C@H]1CCC[C@H]2OCC[C@H]12",
                "NC(=O)N[C@@H]1CCC[C@@H]2CC[C@@H]21",
                "NC(=O)N1CCC[C@@H]2OCC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2SCC[C@@H]21"
            ],
            "total_raw_response_smiles": [
                "NC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@H]2OCC[C@@H]21",
                "NC(=O)N[C@H]1CCC[C@@H]2OCC[C@@H]21",
                "NC(=O)N[C@H]1CCC[C@H]2OCC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2SCC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2NC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2CC[C@@H]21",
                "CC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "NC(=O)N1CCC[C@@H]2OCC[C@@H]21"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0045549869537353516,
            "chemical_diversity": 0.46380738180934544,
            "average_molecular_weight": 176.9408,
            "api_call_time": 9.696036577224731
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=c1[nH]cnc2cc(-c3ccccc3Cl)ccc12",
                "CC1=CC(=O)N(CCCC(=O)Nc2ccccc2)C1",
                "COc1ccc(C(Cn2ccnc2)C(=O)O)cc1",
                "O=C(Cc1ccccc1)Nc1nccs1",
                "COc1ccc(CNC(=O)c2ccco2)cc1",
                "Cc1ccc(C(=O)Nc2ccccc2C(=O)O)cc1",
                "O=C(Nc1ccccc1)c1ccc(C(F)(F)F)o1",
                "Cc1cc(C(=O)Nc2ccccc2O)nn1C",
                "Cc1ccc(S(=O)(=O)Nc2nccs2)cc1",
                "Cc1nnc(-c2ccc(C(=O)N3CCOCC3)o2)n1C"
            ],
            "total_raw_response_smiles": [
                "CC1=CC=C(C=C1)C(=O)NC1=CC=CC=C1C(=O)O",
                "CC1=NN=C(N1C)C1=CC=C(O1)C(=O)N1CCOCC1",
                "O=C1NC=NC2=C1C=CC(=C2)C1=CC=CC=C1Cl",
                "CC1=CC(=O)N(C1)CCCC(=O)NC1=CC=CC=C1",
                "COC1=CC=C(C=C1)C(CN1C=CN=C1)C(=O)O",
                "CC1=CC=C(C=C1)S(=O)(=O)NC1=NC=CS1",
                "O=C(CC1=CC=CC=C1)NC1=NC=CS1",
                "CC1=CC(=NN1C)C(=O)NC1=CC=CC=C1O",
                "O=C(NC1=CC=CC=C1)C1=CC=C(O1)C(F)(F)F",
                "COC1=CC=C(C=C1)CNC(=O)C1=CC=CO1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009247779846191406,
            "chemical_diversity": 0.8287351375286595,
            "average_molecular_weight": 248.31660000000002,
            "api_call_time": 13.510455131530762
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "NC(=O)N[C@@H]1CCC[C@H]2OCC[C@@H]12",
                "NC(=O)N[C@@H]1CCC[C@@H]2NC[C@@H]21",
                "N[C@@H]1CCC[C@@H]2OCC[C@H]12",
                "NC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "CNC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "NC(=O)N1CCC[C@@H]2OCC[C@@H]21",
                "NC(=S)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "O=C(O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2SCC[C@@H]21",
                "CC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21"
            ],
            "total_raw_response_smiles": [
                "NC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "NC(=S)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "CC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "OC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@H]2OCC[C@H]21",
                "CNC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "NC(=O)N1CCC[C@@H]2OCC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2SCC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2NC[C@@H]21"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006858348846435547,
            "chemical_diversity": 0.4981273426529398,
            "average_molecular_weight": 181.64860000000002,
            "api_call_time": 9.63575005531311
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(F)cc2)CC1",
                "COc1cc(Cl)ccc1C(=O)NCCc1c[nH]c2ccccc12",
                "Cc1ccc(C(=O)Nc2ccc(Cl)c(C(F)(F)F)c2)cc1",
                "O=C(CSc1nnc(-c2cccs2)o1)Nc1ccc(Br)cc1",
                "CC1=NN(c2ccccc2NC(=O)c2ccco2)C(=O)C1",
                "O=C(Nc1ccccc1)c1ccc(-c2ccccc2)o1",
                "CN1CCN(C(=O)Nc2nccs2)CC1",
                "COC(=O)c1cc(F)ccc1NC(=O)c1csc(N)n1",
                "CCOC(=O)c1ccc(NC(=O)c2ccccc2)cc1",
                "CC(=O)N1CCN(C(=O)c2ccc(Oc3ccccc3)cc2)CC1"
            ],
            "total_raw_response_smiles": [
                "CC1=CC=C(C=C1)C(=O)NC2=CC(=C(C=C2)Cl)C(F)(F)F",
                "CCOC(=O)C1=CC=C(C=C1)NC(=O)C2=CC=CC=C2",
                "O=C(NC1=CC=CC=C1)C2=CC=C(O2)C3=CC=CC=C3",
                "CC(C)(C)OC(=O)N1CCC(CC1)NC(=O)C2=CC=C(C=C2)F",
                "COC1=C(C=CC(=C1)Cl)C(=O)NCCC2=CNC3=CC=CC=C32",
                "CC1=NN(C(=O)C1)C2=CC=CC=C2NC(=O)C3=CC=CO3",
                "O=C(CSC1=NN=C(O1)C2=CC=CS2)NC3=CC=C(C=C3)Br",
                "CN1CCN(CC1)C(=O)NC2=NC=CS2",
                "CC(=O)N1CCN(CC1)C(=O)C2=CC=C(C=C2)OC3=CC=CC=C3",
                "COC(=O)C1=C(C=CC(=C1)F)NC(=O)C2=CSC(=N2)N"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011115550994873047,
            "chemical_diversity": 0.8141742701602668,
            "average_molecular_weight": 302.3039,
            "api_call_time": 15.9685218334198
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "NC(=O)N[C@@H]1CCC[C@@H]2NC[C@@H]21",
                "NC(=O)CN[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "N[C@@H](C(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21)C(F)(F)F",
                "COC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "CNC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2CC[C@@H]21",
                "NC(=S)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2SCC[C@@H]21",
                "CC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21"
            ],
            "total_raw_response_smiles": [
                "NC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "CC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "CNC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "N[C@@H](C(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21)C(F)(F)F",
                "NC(=O)CN[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "NC(=S)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2SCC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2NC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2CC[C@@H]21",
                "COC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0074901580810546875,
            "chemical_diversity": 0.49304189434840895,
            "average_molecular_weight": 196.7617,
            "api_call_time": 11.08721923828125
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(SCC(=O)Nc2ccc(C(=O)O)cc2)s1",
                "COc1ccc(C(=O)N2CCN(CC(=O)N3CCOCC3)CC2)cc1OC",
                "O=C(CSc1nccs1)Nc1ccc(C(=O)N2CCCCC2)cc1",
                "CC(=O)N1CCN(C(=O)c2ccc(Cl)cc2)CC1",
                "Cn1c(=O)c2c(ncn2C)n(C)c1=O",
                "CC(C)C(=O)Nc1ccc(N2C(=O)C3=C(CCCC3)C2=O)cc1",
                "Cc1ccc(NC(=O)c2cc(=O)[nH]c(=O)[nH]2)cc1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "CC1=NN(C(=O)c2cccs2)C(=O)C1",
                "O=C(Nc1ccc(Cl)cc1)N1CCN(C(=O)C2CC2)CC1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)N1CCN(C(=O)c2ccc(Cl)cc2)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "COc1ccc(C(=O)N2CCN(CC(=O)N3CCOCC3)CC2)cc1OC",
                "Cc1nnc(SCC(=O)Nc2ccc(C(=O)O)cc2)s1",
                "O=C(CSc1nccs1)Nc1ccc(C(=O)N2CCCCC2)cc1",
                "CC(C)C(=O)Nc1ccc(N2C(=O)C3=C(CCCC3)C2=O)cc1",
                "Cn1c(=O)c2c(ncn2C)n(C)c1=O",
                "O=C(Nc1ccc(Cl)cc1)N1CCN(C(=O)C2CC2)CC1",
                "CC1=NN(C(=O)c2cccs2)C(=O)C1",
                "Cc1ccc(NC(=O)C2=CC(=O)NC(=O)N2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010139942169189453,
            "chemical_diversity": 0.8103182647513436,
            "average_molecular_weight": 291.9226,
            "api_call_time": 15.176174879074097
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "NC(=O)N[C@H]1CCC[C@@H]2OCC[C@H]12",
                "NC(=O)N[C@@H]1CCC[C@@H]2OCN[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2NC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@H]2OCC[C@H]12",
                "NC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "CC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "NC(=S)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "O=C(O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2OC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2SCC[C@@H]21"
            ],
            "total_raw_response_smiles": [
                "NC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@H]2OCC[C@@H]21",
                "NC(=O)N[C@H]1CCC[C@@H]2OCC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2SCC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2NC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2OC[C@@H]21",
                "NC(=O)N[C@@H]1CCC[C@@H]2OCN[C@@H]21",
                "NC(=S)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "OC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21",
                "CC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007394552230834961,
            "chemical_diversity": 0.4054853748765145,
            "average_molecular_weight": 184.6472,
            "api_call_time": 10.35585904121399
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NC(=O)N[C@@H]1CCC[C@@H]2OCC[C@@H]21', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CNC(=O)c1ccc(-c2ccccc2)cc1",
                "Cc1ccc(C(=O)Nc2ccccc2)cc1",
                "CC(=O)Nc1ccc(-c2ccccc2)cc1",
                "O=C(Nc1ccccc1)c1ccc(I)cc1",
                "O=c1[nH]ccc2c(Cl)cccc12",
                "O=C(Nc1ccccc1)c1ccc(Br)cc1",
                "O=C(Nc1ccccc1)c1ccc(F)cc1",
                "NC(=O)c1cccc2ccccc12",
                "COc1ccc(C(=O)Nc2ccccc2)cc1",
                "NC(=O)c1ccc(-c2ccccc2)cc1"
            ],
            "total_raw_response_smiles": [
                "NC(=O)C1=CC=CC2=C1C=CC=C2",
                "O=C1NC=CC2=C1C=CC=C2Cl",
                "CC1=CC=C(C=C1)C(=O)NC1=CC=CC=C1",
                "O=C(NC1=CC=CC=C1)C1=CC=C(F)C=C1",
                "COC1=CC=C(C=C1)C(=O)NC1=CC=CC=C1",
                "NC(=O)C1=CC=C(C=C1)C1=CC=CC=C1",
                "O=C(NC1=CC=CC=C1)C1=CC=C(Br)C=C1",
                "CC(=O)NC1=CC=C(C=C1)C1=CC=CC=C1",
                "O=C(NC1=CC=CC=C1)C1=CC=C(I)C=C1",
                "CNC(=O)C1=CC=C(C=C1)C1=CC=CC=C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009194374084472656,
            "chemical_diversity": 0.6234348380756003,
            "average_molecular_weight": 222.359,
            "api_call_time": 12.265937805175781
        }
    ],
    "C/C=C(/C)C(=O)NCC(C)(C)C": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C/C=C(/C)C(=O)NCC(C)(C)C', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC=C(C)C(=O)NCC(C)(C)C",
                "C/C=C(/C)C(=O)NCCC(C)(C)C",
                "C/C=C(/C)C(=O)NCC(C)C",
                "C/C=C(/C)C(=O)NC(C)(C)C",
                "C/C=C(/C)C(=N)NCC(C)(C)C",
                "C/C=C1\\CC(C)(C)CNC1=O",
                "C/C=C(/C)C(=O)N(C)CC(C)(C)C",
                "C/C=C(/C)C(=O)NCC(C)(C)CC",
                "C/C=C(/C)C(=O)NCC(C)(C)C",
                "CCC=C(C)C(=O)NCC(C)(C)C"
            ],
            "total_raw_response_smiles": [
                "C/C=C(/C)C(=O)NCC(C)(C)C",
                "C/C=C(/C)C(=O)NC(C)(C)C",
                "C/C=C(/C)C(=O)NCCC(C)(C)C",
                "CC=C(C)C(=O)NCC(C)(C)C",
                "C/C=C(/C)C(=O)N(C)CC(C)(C)C",
                "C/C=C(/C)C(=N)NCC(C)(C)C",
                "C/C=C(/C)C(=O)NCC(C)C",
                "C/C=C(/C)C(=O)NCC(C)(C)CC",
                "CCC=C(C)C(=O)NCC(C)(C)C",
                "C/C=C1/C(=O)NCC(C)(C)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.005448102951049805,
            "chemical_diversity": 0.593840394043302,
            "average_molecular_weight": 170.3707,
            "api_call_time": 8.158869504928589
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C/C=C(/C)C(=O)NCC(C)(C)C', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NC1CCCC1)c1ccnc(Cl)c1",
                "Cc1ccc(NC(=O)C2CCCO2)cc1",
                "O=C(NC1CCCCC1)c1cccs1",
                "CC(C)(C)NC(=O)c1ccco1",
                "O=C(Nc1cccc(F)c1)C1CCOC1",
                "CC1(C)CC(=O)NC(=O)C1",
                "Cc1cc(NC(=O)c2ccco2)no1",
                "O=C(Nc1ccc(Cl)cc1)c1ccncc1",
                "O=c1[nH]cc(-c2ccccc2)c(=O)[nH]1",
                "CC(=O)Nc1ccc(C#N)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=CN1",
                "CC1(C)CC(=O)NC(=O)C1",
                "O=C(Nc1ccc(Cl)cc1)c1ccncc1",
                "CC(C)(C)NC(=O)c1ccco1",
                "O=C(NC1CCCCC1)c1cccs1",
                "Cc1ccc(NC(=O)C2CCCO2)cc1",
                "O=C(Nc1cccc(F)c1)C1CCOC1",
                "CC(=O)Nc1ccc(C#N)cc1",
                "O=C(NC1CCCC1)c1ccnc(Cl)c1",
                "Cc1cc(NC(=O)c2ccco2)no1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008402824401855469,
            "chemical_diversity": 0.8264045515761883,
            "average_molecular_weight": 193.0066,
            "api_call_time": 11.321829319000244
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C/C=C(/C)C(=O)NCC(C)(C)C', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C/C=C(/C)C(=O)NCCC(C)(C)C",
                "C/C=C(/C)C(=O)NC(C)(C)C",
                "C/C=C(/C)C(=N)NCC(C)(C)C",
                "C/C=C(/C)C(=O)N(C)CC(C)(C)C",
                "C/C=C(/C)C(=O)NCC(C)(C)CF",
                "CC(C)=C(C)C(=O)NCC(C)(C)C",
                "C/C=C(/C)C(=O)NCC(C)(C)CO",
                "C/C=C(/C)C(=O)NCC(C)(C)CC",
                "C/C=C(/C)C(=O)NC(C)C(C)(C)C",
                "C/C=C(/C)C(=O)NCC(C)(C)C"
            ],
            "total_raw_response_smiles": [
                "C/C=C(/C)C(=O)NCC(C)(C)C",
                "C/C=C(/C)C(=O)NC(C)(C)C",
                "C/C=C(/C)C(=O)NCCC(C)(C)C",
                "C/C=C(/C)C(=O)NC(C)C(C)(C)C",
                "C/C=C(/C)C(=O)NCC(C)(C)CC",
                "C/C=C(/C)C(=N)NCC(C)(C)C",
                "C/C=C(/C)C(=O)N(C)CC(C)(C)C",
                "CC(C)=C(C)C(=O)NCC(C)(C)C",
                "C/C=C(/C)C(=O)NCC(C)(C)CO",
                "C/C=C(/C)C(=O)NCC(C)(C)CF"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.005465984344482422,
            "chemical_diversity": 0.5499507567400361,
            "average_molecular_weight": 178.1793,
            "api_call_time": 11.373655557632446
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C/C=C(/C)C(=O)NCC(C)(C)C', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ccc(C(=O)Nc2ccccc2)cc1",
                "O=C(NCCc1ccc(F)cc1)c1ccccc1",
                "Cc1ccccc1NC(=O)c1ccc(Cl)s1",
                "O=C(Cc1ccccc1)Nc1cccc(Cl)c1",
                "O=C1NC(=O)C(=O)N1",
                "CC(C)(C)OC(=O)NCCc1ccccc1",
                "COc1ccc(CNC(=O)c2ccc(F)cc2)cc1",
                "COc1ccc(NC(=O)CC(C)C)cc1OC",
                "O=C(Nc1ccccc1)c1ccc(Oc2ccccc2)cc1",
                "Cc1cc(C)n(C(=O)Nc2ccccc2Cl)n1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)N1",
                "CC1=CC=C(C=C1)C(=O)NC1=CC=CC=C1",
                "C1=CC=C(C=C1)CC(=O)NC1=CC(=CC=C1)Cl",
                "CC(C)(C)OC(=O)NCCC1=CC=CC=C1",
                "O=C(NCCC1=CC=C(C=C1)F)C1=CC=CC=C1",
                "COC1=CC=C(C=C1)CNC(=O)C1=CC=C(C=C1)F",
                "CC1=CC(=NN1C(=O)NC1=CC=CC=C1Cl)C",
                "CC(C)CC(=O)NC1=CC(=C(C=C1)OC)OC",
                "O=C(NC1=CC=CC=C1)C1=CC=C(C=C1)OC1=CC=CC=C1",
                "CC1=CC=CC=C1NC(=O)C1=CC=C(S1)Cl"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00884103775024414,
            "chemical_diversity": 0.7847090157872989,
            "average_molecular_weight": 232.29659999999998,
            "api_call_time": 13.610456466674805
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C/C=C(/C)C(=O)NCC(C)(C)C', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 6,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C/C=C(/C)C(=O)NCC(C)(CC)CC",
                "C/C=C(/C)C(=O)NCC(C)C",
                "C/C=C(/C)C(=O)NC(C)(C)C",
                "C/C=C(/C)C(=O)NCC(C)(C)CCC",
                "C/C=C(/C)C(=O)NCC(C)(C)CC",
                "C/C=C(/C)C(=O)NCC(C)(C)C"
            ],
            "total_raw_response_smiles": [
                "C/C=C(/C)C(=O)NCC(C)(C)C",
                "C/C=C(/C)C(=O)NCC(C)C",
                "C/C=C(/C)C(=O)NC(C)(C)C",
                "C/C=C(/C)C(=O)NCC(C)(C)(C)C",
                "C/C=C(/C)C(=O)NCC(C)(CC)C",
                "C/C=C(/C)C(=O)NCC(CC)(CC)C",
                "C/C=C(/C)C(=O)NCC(C)(C)CC",
                "C/C=C(/C)C(=O)NCC(C)(CCC)C",
                "C/C=C(/C)C(=O)NCC(CC)(C)C",
                "C/C=C(/C)C(=O)NCC(C)(C)CCC"
            ],
            "validity_ratio": 0.6,
            "post_processing_time": 0.004278898239135742,
            "chemical_diversity": 0.44516647527465636,
            "average_molecular_weight": 176.28149999999994,
            "api_call_time": 9.365799903869629
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C/C=C(/C)C(=O)NCC(C)(C)C', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)CC(=O)CC(=NNc2ccc(C(F)(F)F)cc2)C1",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3ccccc23)CC1",
                "O=C(CSc1nnc(-c2cccs2)o1)N1CCOCC1",
                "O=C(Nc1ccc(N2CCOCC2)cc1)c1csc(N2CCOCC2)n1",
                "Cc1cc(C)c(C(=O)N2CCN(C(=O)c3ccco3)CC2)c(C)c1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "COc1ccc(-c2nn(-c3ccccc3)c3c2C(=O)CC(C)(C)C3)cc1",
                "CC1(C)CC(=O)c2sc(-c3ccc(F)cc3)nc2C1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "COc1cc(OC)cc(C(=O)N2CCN(Cc3ccc(F)cc3)CC2)c1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccc(Cl)cc1",
                "CC1(C)CC(=O)C2=C(C1)N=C(S2)c1ccc(F)cc1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "COc1ccc(C2=NN(C3=C2C(=O)CC(C)(C)C3)c2ccccc2)cc1",
                "CC1(C)CC(=O)CC(=NNc2ccc(C(F)(F)F)cc2)C1",
                "O=C(CSc1nnc(-c2cccs2)o1)N1CCOCC1",
                "Cc1cc(C)c(C(=O)N2CCN(C(=O)c3ccco3)CC2)c(C)c1",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3ccccc23)CC1",
                "O=C(Nc1ccc(N2CCOCC2)cc1)c1csc(N2CCOCC2)n1",
                "COc1cc(OC)cc(C(=O)N2CCN(Cc3ccc(F)cc3)CC2)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012582063674926758,
            "chemical_diversity": 0.8475610250130801,
            "average_molecular_weight": 323.9248000000001,
            "api_call_time": 17.4106228351593
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C/C=C(/C)C(=O)NCC(C)(C)C', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 11,
            "number_of_valid_canonicalized_smiles": 11,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC=C(C)C(=O)NCC(C)(C)C",
                "C/C=C(/C)C(=O)NCC(C)C",
                "C/C=C(/C)C(=O)NCCC(C)C",
                "C/C=C(/C)C(=O)NC1CCCC1",
                "C/C=C(/C)C(=O)NCC1(C)CC1",
                "C/C=C(/C)C(=N)NCC(C)(C)C",
                "C/C=C(/C)C(=O)NC(C)(C)C",
                "C/C=C(/C)C(=O)NCC=C(C)C",
                "C/C=C(/C)C(=O)NCC(F)(F)F",
                "C/C=C(/C)C(=O)NCc1ccccc1",
                "C/C=C(/C)C(=O)NCC(C)(C)C"
            ],
            "total_raw_response_smiles": [
                "C/C=C(/C)C(=O)NCC(C)(C)C",
                "C/C=C(/C)C(=O)NC(C)(C)C",
                "C/C=C(/C)C(=O)NCc1ccccc1",
                "C/C=C(/C)C(=N)NCC(C)(C)C",
                "C/C=C(/C)C(=O)NCC1(CC1)C",
                "CC=C(C)C(=O)NCC(C)(C)C",
                "C/C=C(/C)C(=O)NCC=C(C)C",
                "C/C=C(/C)C(=O)NC1CCCC1",
                "C/C=C(/C)C(=O)NCCC(C)(C)",
                "C/C=C(/C)C(=O)NCC(F)(F)F",
                "C/C=C(/C)C(=O)NCC(C)C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00606846809387207,
            "chemical_diversity": 0.5531464292749321,
            "average_molecular_weight": 168.97645454545452,
            "api_call_time": 10.194594860076904
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C/C=C(/C)C(=O)NCC(C)(C)C', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C#CCCNC(=O)/C(C)=C\\C",
                "CC(C)(C)CNC(=O)C1=CC=CC1",
                "C/C=C(/C)C(=O)NNC(C)(C)C",
                "C/C=C(/C)C(=O)NC1CCCC1",
                "C/C=C(/C)C(=O)NCC1(C)CC1",
                "C/C=C(/C)C(=O)NCC=C(C)C",
                "C/C=C(/C)C(=N)NCC(C)(C)C",
                "C/C=C/C(=O)NCC(C)(C)C",
                "C/C=C(/C)S(=O)(=O)NCC(C)(C)C",
                "CC#CC(=O)NCC(C)(C)C"
            ],
            "total_raw_response_smiles": [
                "C/C=C(/C)S(=O)(=O)NCC(C)(C)C",
                "C/C=C(/C)C(=O)NCC1(CC1)C",
                "C/C=C(/C)C(=O)NCC=C(C)C",
                "C/C=C(/C)C(=O)NC1CCCC1",
                "C/C=C(/C)C(=O)NCCC#C",
                "C/C=C(/C)C(=N)NCC(C)(C)C",
                "C/C=C(/C)C(=O)NNC(C)(C)C",
                "C1=CC=C(C(=O)NCC(C)(C)C)C1",
                "CC#CC(=O)NCC(C)(C)C",
                "C/C=C/C(=O)NCC(C)(C)C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004884958267211914,
            "chemical_diversity": 0.7171425488793268,
            "average_molecular_weight": 168.45569999999992,
            "api_call_time": 10.203810930252075
        }
    ],
    "CN(CC1CCC1)[C@@H]1CCC[C@H]1O": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CN(CC1CCC1)[C@@H]1CCC[C@H]1O', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CN(CC1CCC1)[C@H]1CCCC1O",
                "CN(CC1CCC1)[C@@H]1CCCC1O",
                "CO[C@@H]1CCC[C@H]1N(C)CC1CCC1",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1O",
                "CN(CC1CCC1)[C@H]1CCC[C@@H]1O",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1F",
                "CN(CC1CCC1)C1CCC[C@@H]1O",
                "CN(CC1CCC1)C1CCC[C@H]1O",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1Cl",
                "CC(=O)O[C@@H]1CCC[C@H]1N(C)CC1CCC1"
            ],
            "total_raw_response_smiles": [
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1O",
                "CN(CC1CCC1)[C@H]1CCC[C@@H]1O",
                "CN(CC1CCC1)[C@@H]1CCCC1O",
                "CN(CC1CCC1)[C@H]1CCCC1O",
                "CN(CC1CCC1)C1CCC[C@H]1O",
                "CN(CC1CCC1)C1CCC[C@@H]1O",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1OC",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1OC(C)=O",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1F",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1Cl"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007039546966552734,
            "chemical_diversity": 0.27742590914448517,
            "average_molecular_weight": 190.94509999999997,
            "api_call_time": 8.193171501159668
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CN(CC1CCC1)[C@@H]1CCC[C@H]1O', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)OC(=O)N(C2CCCCCC2)C1=O",
                "CC1CCC(S(=O)(=O)N2CCNCC2)CC1",
                "CC1CCCCN1C(=O)C1CCN(C2CCOC2)CC1",
                "O=C1CCCCN1C1CCN(C2CCCC2)CC1",
                "O=C1NC(=O)C2(CCCCC2)N1",
                "O=C(C1CCCCC1)N1CCC(C2CCCO2)CC1",
                "O=C(NC1CCCCC1)C1CCOC1",
                "CN1CCC(C(=O)N2CCCCCC2)CC1",
                "CC1CCC(C(=O)N2CCOCC2)CC1",
                "O=C1OCCN1C1CCC(C2CCNCC2)CC1"
            ],
            "total_raw_response_smiles": [
                "CC1CCC(CC1)C(=O)N1CCOCC1",
                "O=C1NC(=O)C2(CCCCC2)N1",
                "CC1(C)OC(=O)N(C1=O)C1CCCCCC1",
                "O=C(NC1CCCCC1)C1CCOC1",
                "CN1CCC(CC1)C(=O)N1CCCCCC1",
                "O=C1CCCCN1C1CCN(CC1)C1CCCC1",
                "CC1CCC(CC1)S(=O)(=O)N1CCNCC1",
                "O=C(C1CCCCC1)N1CCC(CC1)C1CCCO1",
                "CC1CCCCN1C(=O)C1CCN(CC1)C1CCOC1",
                "O=C1OCCN1C1CCC(CC1)C1CCNCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008556127548217773,
            "chemical_diversity": 0.8011380728758482,
            "average_molecular_weight": 232.1344,
            "api_call_time": 13.236422777175903
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CN(CC1CCC1)[C@@H]1CCC[C@H]1O', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@@H]1CCC[C@H]1N(C)CC1CCC1",
                "CCO[C@@H]1CCC[C@H]1N(C)CC1CCC1",
                "CO[C@@H]1CCC[C@H]1N(C)CC1CCC1",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1O",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1F",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1N",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1I",
                "CC[C@@H]1CCC[C@H]1N(C)CC1CCC1",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1Br",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1Cl"
            ],
            "total_raw_response_smiles": [
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1O",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1OC",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1OCC",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1F",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1Cl",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1Br",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1I",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1N",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1C",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1CC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007309675216674805,
            "chemical_diversity": 0.4109065781119696,
            "average_molecular_weight": 207.73609999999994,
            "api_call_time": 8.451125144958496
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CN(CC1CCC1)[C@@H]1CCC[C@H]1O', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)CC(NC(=O)c2ccc(F)cc2)CC(C)(CN)O1",
                "COc1cc(OC)c(NC(=O)C2CC(=O)N(c3ccc(F)cc3)C2)cc1Cl",
                "O=C(NCc1ccccc1)c1ccc(Cl)s1",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "O=C(Nc1ccc(N2CCOCC2)c(Cl)c1)c1cc(Cl)sc1Cl",
                "COc1ccc(C2C(C(=O)OC(C)C)=C(C)NC3=C2C(=O)CCC3)cc1",
                "Cc1nnc(SCC(=O)c2cc(C)n(Cc3ccco3)c2C)s1",
                "CC(=O)NC[C@H]1CN(c2ccc(N3CCOCC3)cc2)C(=O)O1",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "O=C(NCc1ccccc1)c1ccc(Cl)s1",
                "COc1ccc(C2C(C(=O)OC(C)C)=C(C)NC3=C2C(=O)CCC3)cc1",
                "CC1(C)CC(NC(=O)c2ccc(F)cc2)CC(C)(CN)O1",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "O=C(Nc1ccc(N2CCOCC2)c(Cl)c1)c1cc(Cl)sc1Cl",
                "Cc1cc(C(=O)CSc2nnc(C)s2)c(C)n1Cc1ccco1",
                "COc1cc(OC)c(NC(=O)C2CC(=O)N(c3ccc(F)cc3)C2)cc1Cl",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "CC(=O)NC[C@H]1CN(c2ccc(N3CCOCC3)cc2)C(=O)O1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012164115905761719,
            "chemical_diversity": 0.8490982396198967,
            "average_molecular_weight": 317.6867000000001,
            "api_call_time": 16.279534339904785
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CN(CC1CCC1)[C@@H]1CCC[C@H]1O', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CN(CC1CCCC1)[C@@H]1CCC[C@H]1O",
                "CN(CC1CCC1)[C@@H]1CCCC[C@H]1O",
                "CN(Cc1ccccc1)[C@@H]1CCC[C@H]1O",
                "CO[C@@H]1CCC[C@H]1N(C)CC1CCC1",
                "CCO[C@@H]1CCC[C@H]1N(C)CC1CCC1",
                "CO[C@@H]1CCCC[C@H]1N(C)CC1CCC1",
                "CCN(CC1CCC1)[C@@H]1CCC[C@H]1O",
                "CN(CCC1CCC1)[C@@H]1CCC[C@H]1O",
                "CN(CC1CCCCC1)[C@@H]1CCC[C@H]1O",
                "CN(CC1CC1)[C@@H]1CCC[C@H]1O"
            ],
            "total_raw_response_smiles": [
                "CN(CC1CCC1)[C@@H]1CCCC[C@H]1O",
                "CCN(CC1CCC1)[C@@H]1CCC[C@H]1O",
                "CN(CCC1CCC1)[C@@H]1CCC[C@H]1O",
                "CN(CC1CCCC1)[C@@H]1CCC[C@H]1O",
                "CN(CC1CC1)[C@@H]1CCC[C@H]1O",
                "CN(CC1CCCCC1)[C@@H]1CCC[C@H]1O",
                "CN(Cc1ccccc1)[C@@H]1CCC[C@H]1O",
                "CN(CC1CCC1)[C@@H]1CCCC[C@H]1OC",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1OC",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1OCC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007552385330200195,
            "chemical_diversity": 0.41705990093143785,
            "average_molecular_weight": 199.52259999999995,
            "api_call_time": 9.897407293319702
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CN(CC1CCC1)[C@@H]1CCC[C@H]1O', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(-c2ccc(S(=O)(=O)Nc3ccccc3)cc2)o1",
                "O=C(O)CCCn1c(=O)[nH]c2ccccc2c1=O",
                "O=C(NCCc1c[nH]c2ncccc12)c1ccc(F)cc1",
                "Cc1ccccc1NC(=O)Cn1ccnc1",
                "COc1ccc(CC(=O)Nc2cccc(Cl)c2)cc1OC",
                "COc1ccc(CNC(=O)c2ccccc2NS(C)(=O)=O)cc1",
                "CC(=O)N1CCN(c2ccc(C#N)cc2)CC1",
                "O=C(O)CCNC(=O)c1ccc(F)c(F)c1",
                "Cc1nc(Nc2ccc(C(=O)O)cc2)sc1C",
                "COc1ccc(C(=O)Nc2ccc(C)cc2)cc1OC"
            ],
            "total_raw_response_smiles": [
                "CC(=O)N1CCN(C2=CC=C(C=C2)C#N)CC1",
                "C1=CC(=CC=C1C(=O)NCCC2=CNC3=C2C=CC=N3)F",
                "CC1=NN=C(O1)C2=CC=C(C=C2)S(=O)(=O)NC3=CC=CC=C3",
                "COC1=C(C=C(C=C1)CC(=O)NC2=CC=CC(=C2)Cl)OC",
                "CC1=CC=C(C=C1)NC(=O)C2=CC(=C(C=C2)OC)OC",
                "C1=CC=C2C(=C1)C(=O)N(C(=O)N2)CCCC(=O)O",
                "CC1=C(SC(=N1)NC2=CC=C(C=C2)C(=O)O)C",
                "C1=CC(=C(C=C1C(=O)NCCC(=O)O)F)F",
                "COC1=CC=C(C=C1)CNC(=O)C2=CC=CC=C2NS(=O)(=O)C",
                "CC1=CC=CC=C1NC(=O)CN2C=CN=C2"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009511232376098633,
            "chemical_diversity": 0.8298888536826343,
            "average_molecular_weight": 268.04,
            "api_call_time": 17.081409454345703
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CN(CC1CCC1)[C@@H]1CCC[C@H]1O', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CN(CC1CCCO1)[C@@H]1CCC[C@H]1O",
                "CN(CC1CCC1)[C@@H]1CCCC(O)C1",
                "CN(CC1CCCC1)[C@@H]1CCC[C@H]1O",
                "CN(CC1CCCN1)[C@@H]1CCC[C@H]1O",
                "CN(CC1CCC1)[C@@H]1CCCC1O",
                "CN(CC1CCC1)[C@H]1CCC[C@@H]1O",
                "CC(CC1CCC1)[C@@H]1CCC[C@H]1O",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1F",
                "CN(CC1CCC1)[C@H]1CCC=C1O",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1Cl"
            ],
            "total_raw_response_smiles": [
                "CN(CC1CCC1)[C@@H]1CCCC1O",
                "CN(CC1CCC1)[C@H]1CCC[C@@H]1O",
                "CN(CC1CCC1)[C@@H]1CCCC(O)C1",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1F",
                "CN(CC1CCC1)[C@@H]1CCC[C@H]1Cl",
                "CN(CC1CCCC1)[C@@H]1CCC[C@H]1O",
                "CN(CC1CCCO1)[C@@H]1CCC[C@H]1O",
                "CN(CC1CCCN1)[C@@H]1CCC[C@H]1O",
                "CC(CC1CCC1)[C@@H]1CCC[C@H]1O",
                "CN(CC1CCC1)[C@H]1CCC=C1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006963968276977539,
            "chemical_diversity": 0.5138734113512277,
            "average_molecular_weight": 190.94509999999997,
            "api_call_time": 8.396480798721313
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CN(CC1CCC1)[C@@H]1CCC[C@H]1O', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ccc(NC(=O)c2ccc(CN3CCCC3)cc2)cc1",
                "CCOC(=O)c1ccc(N2C(=O)c3ccccc3C2=O)cc1",
                "CC(C)(C)OC(=O)N1CCC(Oc2ccc(C(=O)O)cc2)CC1",
                "COc1ccc(C(=O)N2CCN(c3ncccn3)CC2)cc1OC",
                "O=C(CSc1nccs1)N1CCN(c2ccccc2)CC1",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "Cn1c(=O)c2c(ncn2C)n(C)c1=O",
                "O=C(Nc1ccc(Cl)cc1)c1ccc(CN2CCOCC2)cc1",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOC[C@H]2C)cc1",
                "Cc1cc(C)n(C(=O)CSc2nnc(C3CCCC3)n2C)n1"
            ],
            "total_raw_response_smiles": [
                "CCOC(=O)c1ccc(N2C(=O)c3ccccc3C2=O)cc1",
                "CC(C)(C)OC(=O)N1CCC(Oc2ccc(C(=O)O)cc2)CC1",
                "O=C(Nc1ccc(Cl)cc1)c1ccc(CN2CCOCC2)cc1",
                "COc1ccc(C(=O)N2CCN(c3ncccn3)CC2)cc1OC",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOC[C@H]2C)cc1",
                "Cc1cc(C)n(C(=O)CSc2nnc(C3CCCC3)n2C)n1",
                "O=C(CSc1nccs1)N1CCN(c2ccccc2)CC1",
                "Cn1c(=O)c2c(ncn2C)n(C)c1=O",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "Cc1ccc(NC(=O)c2ccc(CN3CCCC3)cc2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.01199197769165039,
            "chemical_diversity": 0.8238776908896734,
            "average_molecular_weight": 293.79740000000004,
            "api_call_time": 14.902196884155273
        }
    ],
    "CCC(CC)NCc1ccn(C)c1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(CC)NCc1ccn(C)c1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(CC)NCc1ccnc(C)c1",
                "CCC(C)NCc1ccn(C)c1",
                "CCC(CC)NCc1ccn(CCO)c1",
                "CCC(CC)NCc1ccn(C)c1",
                "CCC(CC)NCc1ccn(CO)c1",
                "CCCC(CC)NCc1ccn(C)c1",
                "CCC(CC)NCc1ccn(CC)c1",
                "CCC(CC)NCc1ccn(CCN)c1"
            ],
            "total_raw_response_smiles": [
                "CCC(CC)NCc1ccn(C)c1",
                "CCC(CC)NCc1ccn(CC)c1",
                "CCC(CC)NCc1ccn(CO)c1",
                "CCC(CC)NCc1ccn(CCO)c1",
                "CCC(CC)NCc1ccn(CCN)c1",
                "CCC(C)NCc1ccn(C)c1",
                "CC(CC)NCc1ccn(C)c1",
                "CCCC(CC)NCc1ccn(C)c1",
                "CCC(CC)NCc1ccc(C)n1",
                "CCC(CC)NCc1ccnc(C)c1"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.006616115570068359,
            "chemical_diversity": 0.4245392284803108,
            "average_molecular_weight": 192.93312500000002,
            "api_call_time": 6.742666244506836
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(CC)NCc1ccn(C)c1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1cc(C=NNC(=O)c2cc(C)on2)ccc1O",
                "Cc1ccc(NC(=O)C2=CC(=O)c3ccccc3C2=O)cc1",
                "CC12CCC(C(=NNc3ccc(Br)cc3)C1=O)C2(C)C",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "COc1ccc(C2=NC(C)(C)CS2)cc1NC(=O)c1ccco1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "O=C(NCc1cccs1)C1CCN(Cc2ccc3c(c2)OCO3)CC1",
                "CC(=O)N1CCN(c2ccc(NC(=O)c3ccc(F)cc3)cc2)CC1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(F)(F)F)cc2)s1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccc(Cl)cc1",
                "CC1(C)C2CCC1(C)C(=O)C2=NNc1ccc(Br)cc1",
                "COc1ccc(C2=NC(C)(C)CS2)cc1NC(=O)c1ccco1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(F)(F)F)cc2)s1",
                "O=C(NCc1cccs1)C1CCN(Cc2ccc3c(c2)OCO3)CC1",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "Cc1ccc(NC(=O)C2=CC(=O)c3ccccc3C2=O)cc1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "COc1cc(C=NNC(=O)c2cc(C)on2)ccc1O",
                "CC(=O)N1CCN(c2ccc(NC(=O)c3ccc(F)cc3)cc2)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012595176696777344,
            "chemical_diversity": 0.8576356148194741,
            "average_molecular_weight": 312.17910000000006,
            "api_call_time": 16.326892614364624
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(CC)NCc1ccn(C)c1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(CC)NCc1ccn(CCNC)c1",
                "CCC(CC)NCc1ccn(CCNS)c1",
                "CCC(CC)NCc1ccn(CCO)c1",
                "CCC(CC)NCc1ccn(C)c1",
                "CCC(CC)NCc1ccn(CO)c1",
                "CCC(CC)NCc1ccn(CCF)c1",
                "CCC(CC)NCc1ccn(CC)c1",
                "CCC(CC)NCc1ccn(CCN)c1"
            ],
            "total_raw_response_smiles": [
                "CCC(CC)NCc1ccn(C)c1",
                "CCC(CC)NCc1ccn(CC)c1",
                "CCC(CC)NCc1ccn(CO)c1",
                "CCC(CC)NCc1ccn(CCO)c1",
                "CCC(CC)NCc1ccn(CCN)c1",
                "CCC(CC)NCc1ccn(CCOH)c1",
                "CCC(CC)NCc1ccn(CCNH2)c1",
                "CCC(CC)NCc1ccn(CCNC)c1",
                "CCC(CC)NCc1ccn(CCNS)c1",
                "CCC(CC)NCc1ccn(CCF)c1"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.005831480026245117,
            "chemical_diversity": 0.29484304693481433,
            "average_molecular_weight": 208.456125,
            "api_call_time": 7.557758569717407
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(CC)NCc1ccn(C)c1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCOC(=O)c1ccc(S(N)(=O)=O)cc1",
                "CC(C)(C)OC(=O)NCCc1cccs1",
                "CCCCN1C(=O)c2ccccc2C1=O",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "Cc1nnc(C(=O)Nc2nccs2)n1C",
                "OC1COC(C(Cl)(Cl)Cl)OC1",
                "CC12CCC(CC1=O)C2(C)C",
                "CC12CCC(=O)C=C1CCC1C2CCC2(C)C(O)CCC12",
                "C1CCC(C(C2CCCCC2)C2CCCCN2)CC1",
                "C1CCC2(CC1)OCCO2"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "CC1(C)C2CCC1(C)C(=O)C2",
                "C1CCC2(CC1)OCCO2",
                "CC(C)(C)OC(=O)NCCC1=CC=CS1",
                "C1CCC(CC1)C(C2CCCCN2)C3CCCCC3",
                "CCOC(=O)C1=CC=C(C=C1)S(=O)(=O)N",
                "CC1=NN=C(N1C)C(=O)NC2=NC=CS2",
                "OC1COC(C(Cl)(Cl)Cl)OC1",
                "CC12CCC3C(CCC4=CC(=O)CCC34C)C1CCC2O",
                "CCCCN1C(=O)C2=CC=CC=C2C1=O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009151935577392578,
            "chemical_diversity": 0.9259274524859213,
            "average_molecular_weight": 220.3163,
            "api_call_time": 13.014865398406982
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(CC)NCc1ccn(C)c1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCCn1ccc(CNC(CC)CC)c1",
                "CCC(C)NCc1ccn(C)c1",
                "CCC(CC)NCc1ccn(C)c1",
                "CCCC(CC)NCc1ccn(C)c1",
                "CCCNCc1ccn(C)c1",
                "CC(C)CNCc1ccn(C)c1",
                "CCCn1ccc(CNC(CC)CC)c1",
                "CCCCC(CC)NCc1ccn(C)c1",
                "CCC(CC)NCc1ccn(CC)c1"
            ],
            "total_raw_response_smiles": [
                "CCC(CC)NCc1ccn(C)c1",
                "CCC(C)NCc1ccn(C)c1",
                "CC(C)CNCc1ccn(C)c1",
                "CCCNCc1ccn(C)c1",
                "CC(CC)NCc1ccn(C)c1",
                "CCCC(CC)NCc1ccn(C)c1",
                "CCC(CC)NCc1ccn(CC)c1",
                "CCC(CC)NCc1ccn(CCC)c1",
                "CCC(CC)NCc1ccn(CCCC)c1",
                "CCC(CCCC)NCc1ccn(C)c1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.007150411605834961,
            "chemical_diversity": 0.413495675097171,
            "average_molecular_weight": 188.08777777777775,
            "api_call_time": 6.730733156204224
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(CC)NCc1ccn(C)c1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCc1ccco1)c1ccc(CN2CCN(c3ccccc3)CC2)cc1",
                "Cc1ccc(C(=O)CSc2nnc(C3CCCCC3)n2C)cc1",
                "COc1cc(OC)c(NC(=O)Nc2ccc(N3CCN(C)CC3)cc2)cc1Cl",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3cc(Br)ccc23)CC1",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(S(=O)(=O)N3CCOCC3)cc1S2",
                "CC(C)Cn1cnc2c(N)nc(NCCC3=CCCCC3)nc21",
                "O=C(CN1CCOCC1)Nc1ccc(-c2cn3ccccc3n2)cc1",
                "Cc1cc(Nc2cccc(C(F)(F)F)c2)c(N)c(C(=O)N2CCCC2)c1",
                "O=C(Nc1ccc(Cl)cc1)c1ccc(N2CCOCC2)cc1",
                "COc1ccc(S(=O)(=O)N2CCN(CC(=O)Nc3ccc(F)cc3)CC2)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C(Nc1ccc(Cl)cc1)c1ccc(N2CCOCC2)cc1",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3cc(Br)ccc23)CC1",
                "Cc1cc(C(=O)N2CCCC2)c(N)c(Nc2cccc(C(F)(F)F)c2)c1",
                "O=C(NCc1ccco1)c1ccc(CN2CCN(c3ccccc3)CC2)cc1",
                "COc1ccc(S(=O)(=O)N2CCN(CC(=O)Nc3ccc(F)cc3)CC2)cc1",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(S(=O)(=O)N3CCOCC3)cc1S2",
                "Cc1ccc(C(=O)CSc2nnc(C3CCCCC3)n2C)cc1",
                "O=C(CN1CCOCC1)Nc1ccc(-c2cn3ccccc3n2)cc1",
                "CC(C)Cn1cnc2c(N)nc(NCCC3=CCCCC3)nc21",
                "COc1cc(OC)c(NC(=O)Nc2ccc(N3CCN(C)CC3)cc2)cc1Cl"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012653589248657227,
            "chemical_diversity": 0.8362231606447059,
            "average_molecular_weight": 365.01390000000004,
            "api_call_time": 16.629328966140747
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(CC)NCc1ccn(C)c1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(C)NCc1ccn(C)c1",
                "CCC(CCO)NCc1ccn(C)c1",
                "CCC(CCN)NCc1ccn(C)c1",
                "CCC(CC)NCc1ccn(CCO)c1",
                "CCC(CC)NCc1ccn(C)c1",
                "CCC(CC)NCc1ccn(CO)c1",
                "CCC(CC)NCc1cnn(C)c1",
                "CCC(CC)NCc1ccn(CC)c1",
                "CCC(CO)NCc1ccn(C)c1",
                "CCC(CC)NCc1ccn(CCN)c1"
            ],
            "total_raw_response_smiles": [
                "CCC(CC)NCc1ccn(C)c1",
                "CCC(CC)NCc1ccn(CC)c1",
                "CCC(CC)NCc1ccn(CO)c1",
                "CCC(CC)NCc1ccn(CCO)c1",
                "CCC(CC)NCc1ccn(CCN)c1",
                "CCC(C)NCc1ccn(C)c1",
                "CCC(CO)NCc1ccn(C)c1",
                "CCC(CCO)NCc1ccn(C)c1",
                "CCC(CCN)NCc1ccn(C)c1",
                "CCC(CC)NCc1cnn(C)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007055521011352539,
            "chemical_diversity": 0.39891489712881945,
            "average_molecular_weight": 191.1991,
            "api_call_time": 7.948670387268066
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(CC)NCc1ccn(C)c1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(CC)NC(=O)c1ccc(Br)cc1",
                "CCC(CC)NC(=O)c1ccc(O)cc1",
                "CCC(CC)NC(=O)c1ccc(F)cc1",
                "CCC(CC)N1CCOCC1",
                "CCC(CC)NC(=O)c1ccco1",
                "CCC(CC)NC(=O)C1CCCCC1",
                "CCC(CC)NC(=O)c1ccc(C#N)cc1",
                "CCC(CC)NC(=O)c1ccc(I)cc1",
                "CCC(CC)NC(=S)Nc1ccccn1",
                "CCC(CC)NC(=O)c1ccc(Cl)cc1"
            ],
            "total_raw_response_smiles": [
                "CCC(CC)N1CCOCC1",
                "CCC(CC)NC(=O)c1ccco1",
                "CCC(CC)NC(=S)Nc1ccccn1",
                "CCC(CC)NC(=O)C1CCCCC1",
                "CCC(CC)NC(=O)c1ccc(F)cc1",
                "CCC(CC)NC(=O)c1ccc(Cl)cc1",
                "CCC(CC)NC(=O)c1ccc(Br)cc1",
                "CCC(CC)NC(=O)c1ccc(I)cc1",
                "CCC(CC)NC(=O)c1ccc(C#N)cc1",
                "CCC(CC)NC(=O)c1ccc(O)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0071909427642822266,
            "chemical_diversity": 0.5815494925142994,
            "average_molecular_weight": 220.50390000000002,
            "api_call_time": 9.029860496520996
        }
    ],
    "CC(C)(C)c1cc(N)cc(N)c1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)(C)c1cc(N)cc(N)c1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)c1cc(N)cc(Br)c1",
                "CC(C)(C)c1cc(N)cc(I)c1",
                "CC(C)(C)c1cc(N)cc(Cl)c1",
                "CC(C)(C)c1cc(N)cc(CN)c1",
                "CC(C)(C)c1cc(N)cc(N)c1",
                "CC(C)(C)c1cc(N)cc(O)c1",
                "CC(C)(C)c1cc(N)cc(F)c1",
                "CC(C)(C)c1cc(N)cc(P)c1",
                "CC(C)(C)c1cc(N)cc(S)c1",
                "Cc1cc(N)cc(C(C)(C)C)c1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)c1cc(N)cc(N)c1",
                "CC(C)(C)c1cc(N)cc(O)c1",
                "CC(C)(C)c1cc(N)cc(F)c1",
                "CC(C)(C)c1cc(N)cc(C)c1",
                "CC(C)(C)c1cc(N)cc(Cl)c1",
                "CC(C)(C)c1cc(N)cc(Br)c1",
                "CC(C)(C)c1cc(N)cc(I)c1",
                "CC(C)(C)c1cc(N)cc(S)c1",
                "CC(C)(C)c1cc(N)cc(P)c1",
                "CC(C)(C)c1cc(N)cc(CN)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006209373474121094,
            "chemical_diversity": 0.4335335755673918,
            "average_molecular_weight": 188.7729,
            "api_call_time": 7.5298614501953125
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)(C)c1cc(N)cc(N)c1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(O)c1cccc(NC(=O)c2ccco2)c1",
                "Cc1cc(C)n2nc(N)c(Br)c2n1",
                "COc1ccc(-c2nc3ccccc3[nH]2)cc1OC",
                "COc1cc(C=NNC(=O)c2cccs2)ccc1O",
                "O=C(NCc1ccco1)c1ccc(F)cc1",
                "CC(=O)Nc1ccc(-c2ccc3ncsc3c2)cc1",
                "Cc1nnc(SCC(=O)Nc2ccccc2)s1",
                "Cn1cc(C(=O)N2CCOCC2)c(=O)c2ccccc21",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "CCN(CC)CCOc1ccc(C=O)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccc(Cl)cc1",
                "COc1ccc(-c2nc3ccccc3[nH]2)cc1OC",
                "CC(=O)Nc1ccc(-c2ccc3ncsc3c2)cc1",
                "Cc1cc(C)n2nc(N)c(Br)c2n1",
                "O=C(O)c1cccc(NC(=O)c2ccco2)c1",
                "CCN(CC)CCOc1ccc(C=O)cc1",
                "Cc1nnc(SCC(=O)Nc2ccccc2)s1",
                "O=C(NCc1ccco1)c1ccc(F)cc1",
                "COc1cc(C=NNC(=O)c2cccs2)ccc1O",
                "Cn1cc(C(=O)N2CCOCC2)c(=O)c2ccccc21"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010421991348266602,
            "chemical_diversity": 0.8760904342831356,
            "average_molecular_weight": 253.31420000000003,
            "api_call_time": 12.724586486816406
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)(C)c1cc(N)cc(N)c1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)c1cc(N)cc(Br)c1",
                "CC(C)(C)c1cc(N)cc(I)c1",
                "CC(C)(C)c1cc(N)cc(Cl)c1",
                "COc1cc(N)cc(C(C)(C)C)c1",
                "CC(C)(C)c1cc(N)cc(C#N)c1",
                "CC(C)(C)c1cc(N)cc(N)c1",
                "CC(C)(C)c1cc(N)cc(O)c1",
                "CC(C)(C)c1cc(N)cc(F)c1",
                "CC(C)(C)c1cc(N)cc(C(F)(F)F)c1",
                "CC(C)(C)c1cc(N)cc(S(N)(=O)=O)c1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)c1cc(N)cc(N)c1",
                "CC(C)(C)c1cc(N)cc(O)c1",
                "CC(C)(C)c1cc(N)cc(F)c1",
                "CC(C)(C)c1cc(N)cc(Cl)c1",
                "CC(C)(C)c1cc(N)cc(Br)c1",
                "CC(C)(C)c1cc(N)cc(I)c1",
                "CC(C)(C)c1cc(N)cc(C#N)c1",
                "CC(C)(C)c1cc(N)cc(S(N)(=O)=O)c1",
                "CC(C)(C)c1cc(N)cc(C(F)(F)F)c1",
                "CC(C)(C)c1cc(N)cc(OC)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00654911994934082,
            "chemical_diversity": 0.4678495879262915,
            "average_molecular_weight": 198.2724,
            "api_call_time": 7.650734186172485
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)(C)c1cc(N)cc(N)c1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(SCC(=O)Nc2ccccn2)s1",
                "CC(C)(C)OC(=O)NCCC1=CCCCC1",
                "COc1ccc(C=NNC(=O)c2ccncc2)cc1OC",
                "O=C(Nc1ccccc1)c1ccc(N2CCOCC2)cc1",
                "CC(C)CC(N)C(=O)Nc1ccc(Cl)cc1",
                "O=C(Nc1nccs1)c1ccccc1",
                "CN1CCN(C(=O)c2ccc(F)cc2)CC1",
                "CC1(C)CC(=O)NC(=O)C1",
                "O=C(O)C1CCCN1C(=O)c1ccc(Br)cc1",
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccccc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccccc1",
                "C1=CC=C(C(=O)NC2=NC=CS2)C=C1",
                "CC(C)CC(N)C(=O)Nc1ccc(Cl)cc1",
                "O=C(Nc1ccccc1)c1ccc(N2CCOCC2)cc1",
                "COc1ccc(C=NNC(=O)c2ccncc2)cc1OC",
                "CC1(C)CC(=O)NC(=O)C1",
                "Cc1nnc(SCC(=O)Nc2ccccn2)s1",
                "O=C(O)C1CCCN1C(=O)c1ccc(Br)cc1",
                "CC(C)(C)OC(=O)NCCC1=CCCCC1",
                "CN1CCN(C(=O)c2ccc(F)cc2)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009261608123779297,
            "chemical_diversity": 0.8556013615852202,
            "average_molecular_weight": 241.51550000000003,
            "api_call_time": 13.681273460388184
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)(C)c1cc(N)cc(N)c1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)Cc1cc(N)cc(N)c1",
                "CC(C)(CI)c1cc(N)cc(N)c1",
                "CCC(C)(C)c1cc(N)cc(N)c1",
                "CC(C)(C#N)c1cc(N)cc(N)c1",
                "CC(C)(C)c1cc(N)cc(N)c1",
                "CCC(C)c1cc(N)cc(N)c1",
                "CC(C)(CBr)c1cc(N)cc(N)c1",
                "CC(C)(CCl)c1cc(N)cc(N)c1",
                "CC(C)(CF)c1cc(N)cc(N)c1",
                "CC(C)(CO)c1cc(N)cc(N)c1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)c1cc(N)cc(N)c1",
                "CCC(C)c1cc(N)cc(N)c1",
                "CC(C)Cc1cc(N)cc(N)c1",
                "CC(C)(CC)c1cc(N)cc(N)c1",
                "CC(C)(CO)c1cc(N)cc(N)c1",
                "CC(C)(CF)c1cc(N)cc(N)c1",
                "CC(C)(CBr)c1cc(N)cc(N)c1",
                "CC(C)(CCl)c1cc(N)cc(N)c1",
                "CC(C)(CI)c1cc(N)cc(N)c1",
                "CC(C)(C#N)c1cc(N)cc(N)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006535768508911133,
            "chemical_diversity": 0.5152957925895931,
            "average_molecular_weight": 194.07560000000004,
            "api_call_time": 8.198397159576416
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)(C)c1cc(N)cc(N)c1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(CSc1nccc(=O)[nH]1)Nc1ccc(F)cc1",
                "Cc1sc2ncnc(N3CCN(C(=O)OC(C)(C)C)CC3)c2c1C",
                "COc1ccc(C=NNC(=O)c2ccncc2)cc1",
                "CC1(C)CC(=O)c2c([nH]c3ccc(Br)cc23)C1",
                "O=C(NCc1ccccc1)c1ccc(Cl)cc1",
                "CCN(CC)CCNC(=O)c1ccc(OC)cc1",
                "COc1cc(C=NNC(=N)N)ccc1O",
                "Cc1nnc(SCC(=O)Nc2ccccc2)s1",
                "Cc1cc(C)nc(Nc2cccc(C(=O)O)c2)n1",
                "Nc1ncnc2c1ncn2CC(=O)N1CCOCC1"
            ],
            "total_raw_response_smiles": [
                "O=C(NCc1ccccc1)c1ccc(Cl)cc1",
                "COc1ccc(C=NNC(=O)c2ccncc2)cc1",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Br)cc12",
                "Cc1nnc(SCC(=O)Nc2ccccc2)s1",
                "O=C(Cn1cnc2c(N)ncnc21)N1CCOCC1",
                "CCN(CC)CCNC(=O)c1ccc(OC)cc1",
                "Cc1cc(C)nc(Nc2cccc(C(=O)O)c2)n1",
                "COc1cc(C=NNC(=N)N)ccc1O",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3sc(C)c(C)c23)CC1",
                "O=C(CSc1nccc(=O)[nH]1)Nc1ccc(F)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.003995656967163086,
            "chemical_diversity": 0.8489155213486301,
            "average_molecular_weight": 265.0395,
            "api_call_time": 12.356444835662842
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)(C)c1cc(N)cc(N)c1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)c1cc(N)cc(Br)c1",
                "CC(C)(C)c1cc(N)cc(I)c1",
                "CC(C)(C)c1cc(N)cc(Cl)c1",
                "CC(C)(C)c1cc(N)cc(N)c1",
                "CC(C)(C)c1cc(N)cc(O)c1",
                "CC(C)(C)c1cc(N)cc(F)c1",
                "CC(C)(C)c1cc(N)cc(S)c1",
                "Cc1cc(N)cc(C(C)(C)C)c1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)c1cc(N)cc(N)c1",
                "CC(C)(C)c1cc(N)cc(O)c1",
                "CC(C)(C)c1cc(N)cc(S)c1",
                "CC(C)(C)c1cc(N)cc(C)c1",
                "CC(C)(C)c1cc(N)cc(Cl)c1",
                "CC(C)(C)c1cc(N)cc(F)c1",
                "CC(C)(C)c1cc(N)cc(Br)c1",
                "CC(C)(C)c1cc(N)cc(I)c1",
                "CC(C)(C)c1cc(O)cc(N)c1",
                "CC(C)(C)c1cc(S)cc(N)c1"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.006077766418457031,
            "chemical_diversity": 0.41781135531135516,
            "average_molecular_weight": 191.028875,
            "api_call_time": 6.712056636810303
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)(C)c1cc(N)cc(N)c1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)c1cc(Br)cc(Br)c1",
                "CC(C)(C)c1cc(C#N)cc(C#N)c1",
                "CC(C)(C)c1cc(C(=O)O)cc(C(=O)O)c1",
                "CC(C)(C)c1cc(F)cc(F)c1",
                "CC(C)(C)c1cc(C(F)(F)F)cc(C(F)(F)F)c1",
                "CC(C)(C)c1cc(O)cc(O)c1",
                "CC(C)(C)c1cc(C(N)=O)cc(C(N)=O)c1",
                "CC(C)(C)c1cc(S(=O)(=O)O)cc(S(=O)(=O)O)c1",
                "CC(C)(C)c1cc(Cl)cc(Cl)c1",
                "CC(C)(C)c1cc(S)cc(S)c1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)c1cc(O)cc(O)c1",
                "CC(C)(C)c1cc(S)cc(S)c1",
                "CC(C)(C)c1cc(Cl)cc(Cl)c1",
                "CC(C)(C)c1cc(Br)cc(Br)c1",
                "CC(C)(C)c1cc(F)cc(F)c1",
                "CC(C)(C)c1cc(C#N)cc(C#N)c1",
                "CC(C)(C)c1cc(C(F)(F)F)cc(C(F)(F)F)c1",
                "CC(C)(C)c1cc(C(=O)O)cc(C(=O)O)c1",
                "CC(C)(C)c1cc(C(=O)N)cc(C(=O)N)c1",
                "CC(C)(C)c1cc(S(=O)(=O)O)cc(S(=O)(=O)O)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0072154998779296875,
            "chemical_diversity": 0.6014250664655463,
            "average_molecular_weight": 222.12239999999997,
            "api_call_time": 9.026671648025513
        }
    ],
    "CCC(C)(C)C(=O)NCC1CNC1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(C)(C)C(=O)NCC1CNC1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(C)(C)C(=O)NCC1CCCNC1",
                "CCC(C)(C)C(=O)NCC1CNCN1",
                "CCC(C)(C)C(=O)NCC1CNCO1",
                "CCC(C)(C)C(=O)NC1CCNC1",
                "CCC(C)(C)C(=O)NC1CCNCC1",
                "CCC(C)(C)C(=O)NCC1CCNC1",
                "CCC(C)(C)C(=O)NCC1CNC1",
                "CCC(C)(C)C(=O)NCC1CNCS1",
                "CCC(C)(C)C(=O)NCC1CNNC1"
            ],
            "total_raw_response_smiles": [
                "CCC(C)(C)C(=O)NCC1CNC1",
                "CCC(C)(C)C(=O)NCC1CNCC1",
                "CCC(C)(C)C(=O)NCC1CNNC1",
                "CCC(C)(C)C(=O)NCC1CCNC1",
                "CCC(C)(C)C(=O)NCC1CNCN1",
                "CCC(C)(C)C(=O)NCC1CNCO1",
                "CCC(C)(C)C(=O)NCC1CNCS1",
                "CCC(C)(C)C(=O)NCC1CNCCC1",
                "CCC(C)(C)C(=O)NC1CCNC1",
                "CCC(C)(C)C(=O)NC1CCNCC1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.006105184555053711,
            "chemical_diversity": 0.4289934616751929,
            "average_molecular_weight": 199.1945555555555,
            "api_call_time": 8.574787139892578
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(C)(C)C(=O)NCC1CNC1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(=O)N1CCN(c2ncccn2)CC1",
                "O=C(NCc1ccco1)c1ccc(F)cc1",
                "CN1CCN(C(=O)c2ccc(Br)cc2)CC1",
                "CC1(C)CC(=O)NC(=O)C1",
                "Cc1nnc(SCC(=O)Nc2ccccc2)o1",
                "COc1ccc(CNC(=O)c2cccs2)cc1",
                "CC(C)(C)OC(=O)Nc1ccc(F)cc1",
                "O=C(CSc1nccs1)Nc1cccc(Cl)c1",
                "O=C(Nc1ccc(Cl)cc1)c1ccncc1",
                "O=c1[nH]cc(-c2ccccc2)c(=O)[nH]1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=CN1",
                "CC1(C)CC(=O)NC(=O)C1",
                "O=C(Nc1ccc(Cl)cc1)c1ccncc1",
                "CC(C)(C)OC(=O)Nc1ccc(F)cc1",
                "O=C(NCc1ccco1)c1ccc(F)cc1",
                "COc1ccc(CNC(=O)c2cccs2)cc1",
                "CC(=O)N1CCN(c2ncccn2)CC1",
                "Cc1nnc(SCC(=O)Nc2ccccc2)o1",
                "O=C(CSc1nccs1)Nc1cccc(Cl)c1",
                "CN1CCN(C(=O)c2ccc(Br)cc2)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008629083633422852,
            "chemical_diversity": 0.8491708402150613,
            "average_molecular_weight": 226.33020000000002,
            "api_call_time": 9.874839544296265
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(C)(C)C(=O)NCC1CNC1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(C)(C)C(=N)NCC1CNC1",
                "CCC(C)(C)C(=O)NCC1CCOC1",
                "CCC(C)(C)C(=O)NCC1CCSC1",
                "CCC(C)(C)C(=O)NCC1CNC1",
                "CCC(C)(C)C(O)NCC1CNC1",
                "CCC(C)(C)C(=O)NCC1CCNC1",
                "CCC(C)(C)C(=O)NCC1CCSCC1",
                "CCC(C)(C)C(=O)NCC1CCOCC1",
                "CCC(C)(C)C(=O)NCC1CCCNC1"
            ],
            "total_raw_response_smiles": [
                "CCC(C)(C)C(=O)NCC1CNC1",
                "CCC(C)(C)C(=O)NCC1CNCC1",
                "CCC(C)(C)C(=O)NCC1CNCCC1",
                "CCC(C)(C)C(=O)NCC1CCNC1",
                "CCC(C)(C)C(=O)NCC1CCOCC1",
                "CCC(C)(C)C(=O)NCC1CCSCC1",
                "CCC(C)(C)C(=O)NCC1CCOC1",
                "CCC(C)(C)C(=O)NCC1CCSC1",
                "CCC(C)(C)C(=N)NCC1CNC1",
                "CCC(C)(C)C(O)NCC1CNC1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.0061817169189453125,
            "chemical_diversity": 0.46019376660356714,
            "average_molecular_weight": 202.4326666666666,
            "api_call_time": 9.194990158081055
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(C)(C)C(=O)NCC1CNC1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(Nc1ccon1)C1CCCCC1",
                "O=C(NCCc1ccco1)c1ccc(O)c(Cl)c1",
                "O=C(c1ccccc1)N1CCOCC1",
                "O=C1NC(=O)C(=O)N1",
                "CCOC(=O)C(C)(C)OC",
                "COc1ccc(S(=O)(=O)NC(=O)NC2CCCCC2)cc1",
                "Cc1nnc(C(=O)Nc2ccc(F)c(F)c2)o1",
                "CC(C)CC(=O)NNC(=O)c1cscn1",
                "CCOC(=O)C(NC(=O)c1c[nH]c2ccccc12)C(C)C",
                "CC1=CC(=O)C=C(C)C1=O"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)N1",
                "C1COCCN1C(=O)C2=CC=CC=C2",
                "CC1=CC(=O)C=C(C)C1=O",
                "CCOC(=O)C(C)(C)OC",
                "C1CCC(CC1)C(=O)NC2=NOC=C2",
                "CC(C)CC(=O)NNC(=O)C1=CSC=N1",
                "OC1=C(Cl)C=C(C=C1)C(=O)NCCC2=CC=CO2",
                "COC1=CC=C(C=C1)S(=O)(=O)NC(=O)NC2CCCCC2",
                "CC1=NN=C(O1)C(=O)NC2=CC(=C(C=C2)F)F",
                "CCOC(=O)C(C(C)C)NC(=O)C1=CNC2=CC=CC=C12"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007951974868774414,
            "chemical_diversity": 0.8807978910530696,
            "average_molecular_weight": 211.4764,
            "api_call_time": 13.606253862380981
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(C)(C)C(=O)NCC1CNC1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCC(C)(C)C(=O)NCC1CNC1",
                "CCC(C)(CC)C(=O)NCC1CNC1",
                "CC(C)(C)C(=O)NCC1CNC1",
                "CCC(C)(C)C(=O)NC1CNC1",
                "CCC(CC)(CC)C(=O)NCC1CNC1",
                "CCC(C)(C)C(=O)NCC1CCNC1",
                "CCC(C)(C)C(=O)NCC1CNC1",
                "CCC(C)(C)C(=O)NCC1CCCNC1"
            ],
            "total_raw_response_smiles": [
                "CCC(C)(C)C(=O)NCC1CNC1",
                "CCCC(C)(C)C(=O)NCC1CNC1",
                "CC(C)(C)C(=O)NCC1CNC1",
                "CCC(C)(CC)C(=O)NCC1CNC1",
                "CCC(CC)(CC)C(=O)NCC1CNC1",
                "CCC(C)(C)C(=O)NCC1CNCC1",
                "CCC(C)(C)C(=O)NCC1CNCCC1",
                "CCC(C)(C)C(=O)NCC1CCNC1",
                "CCC(C)(C)C(=O)NCC1CCCNC1",
                "CCC(C)(C)C(=O)NC1CNC1"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.005907297134399414,
            "chemical_diversity": 0.3616069090033126,
            "average_molecular_weight": 193.049875,
            "api_call_time": 7.407564401626587
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(C)(C)C(=O)NCC1CNC1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(CSc1nccs1)N1CCOCC1",
                "Cc1cc(=O)oc2cc(OCC(=O)N3CCCC3)ccc12",
                "CC(C)(C)OC(=O)N1CCC(Oc2ccccc2)CC1",
                "O=C1NC(=O)C(Cc2ccccc2)NS1",
                "Cc1nnc(SCC(=O)Nc2ccc(Cl)cc2)o1",
                "CC1(C)CC(=O)NC(=O)C1",
                "Cn1cc(C(=O)N2CCNC(=O)C2)c(=O)[nH]1",
                "O=C(Cn1cnc2c(Cl)ncnc21)N1CCSCC1",
                "CC(C)(C)NC(=O)COc1cccc(C#N)c1",
                "COc1ccc(C=NNC(=O)c2ccco2)cc1O"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(Cc2ccccc2)NS1",
                "COc1ccc(C=NNC(=O)c2ccco2)cc1O",
                "CC(C)(C)OC(=O)N1CCC(Oc2ccccc2)CC1",
                "Cc1nnc(SCC(=O)Nc2ccc(Cl)cc2)o1",
                "O=C(CSc1nccs1)N1CCOCC1",
                "CC1(C)CC(=O)NC(=O)C1",
                "Cn1cc(C(=O)N2CCNC(=O)C2)c(=O)[nH]1",
                "O=C(Cn1cnc2c(Cl)ncnc21)N1CCSCC1",
                "CC(C)(C)NC(=O)COc1cccc(C#N)c1",
                "Cc1cc(=O)oc2cc(OCC(=O)N3CCCC3)ccc12"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0090484619140625,
            "chemical_diversity": 0.8632526453464493,
            "average_molecular_weight": 247.0722,
            "api_call_time": 12.150834083557129
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(C)(C)C(=O)NCC1CNC1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(C)(C)C(=O)NCC1CNC1",
                "CCC(C)(C)C(O)NCC1CNC1",
                "CCC(C)(C)C(=O)NCC1CCC1",
                "CCC(C)(C)C(=O)NC1CCNC1",
                "CCC(C)(C)C(=O)NCC1CNC1O",
                "CCC(C)(C)C(=O)NCC1COC1",
                "CCC(C)(C)C(=O)NCC1CCNC1",
                "CCC(C)(C)C(=O)NCC1CCN1",
                "CCC(C)(C)C(=N)NCC1CNC1",
                "CCC(C)(C)C(=O)NCC1CNC1C"
            ],
            "total_raw_response_smiles": [
                "CCC(C)(C)C(=O)NCC1CNC1",
                "CCC(C)(C)C(=O)NCC1COC1",
                "CCC(C)(C)C(=O)NCC1CCN1",
                "CCC(C)(C)C(=O)NCC1CCC1",
                "CCC(C)(C)C(=O)NCC1CNC1C",
                "CCC(C)(C)C(=O)NC1CCNC1",
                "CCC(C)(C)C(=O)NCC1CNCC1",
                "CCC(C)(C)C(=N)NCC1CNC1",
                "CCC(C)(C)C(=O)NCC1CNC1O",
                "CCC(C)(C)C(O)NCC1CNC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006033182144165039,
            "chemical_diversity": 0.49338432937354193,
            "average_molecular_weight": 188.79109999999997,
            "api_call_time": 8.310516595840454
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(C)(C)C(=O)NCC1CNC1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)CC(=O)Nc1ccncc1",
                "O=C(NC1CCNCC1)c1ccccc1",
                "CCOC(=O)C1CCNC1",
                "CCC(NC(=O)c1cccs1)C1CCCO1",
                "CC1CCC(CC(=O)N2CCCC2)CC1",
                "CCNC(=O)C1CCCN(C)C1",
                "O=C(Nc1cccnc1)C1CCCO1",
                "CC(C)NC(=O)C1CCSC1",
                "COCCNC(=O)C1CCCC1",
                "CNC(=O)C1CCCCC1"
            ],
            "total_raw_response_smiles": [
                "CNC(=O)C1CCCCC1",
                "O=C(NC1CCNCC1)c1ccccc1",
                "CC(C)CC(=O)Nc1ccncc1",
                "CCOC(=O)C1CCNC1",
                "CC1CCC(CC(=O)N2CCCC2)CC1",
                "O=C(Nc1cccnc1)C1CCCO1",
                "CCC(NC(=O)c1cccs1)C1CCCO1",
                "CCNC(=O)C1CCCN(C)C1",
                "CC(C)NC(=O)C1CCSC1",
                "COCCNC(=O)C1CCCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006701946258544922,
            "chemical_diversity": 0.7937848646546775,
            "average_molecular_weight": 182.25759999999997,
            "api_call_time": 10.232203722000122
        }
    ],
    "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2F)o1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1nnc(CNC(=O)[C@H]2C[C@@H]2F)o1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2C)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2S)o1",
                "Cc1nnc(CNC(=O)C2CC2)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2I)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2O)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2Br)o1",
                "Cc1nnc(CN(C)C(=O)[C@H]2C[C@@H]2F)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2N)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2Cl)o1",
                "Cc1nnc(CNC(=O)[C@@H]2C[C@H]2F)o1"
            ],
            "total_raw_response_smiles": [
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2Cl)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2Br)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2I)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2O)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2N)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2C)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2S)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2[H])o1",
                "Cc1nnc(CNC(=O)[C@@H]2C[C@H]2F)o1",
                "Cc1nnc(CN(C)C(=O)[C@H]2C[C@@H]2F)o1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008976459503173828,
            "chemical_diversity": 0.32183333587308915,
            "average_molecular_weight": 217.83019999999996,
            "api_call_time": 12.491139650344849
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1nnc(CNC(=O)[C@H]2C[C@@H]2F)o1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3ccccc23)CC1",
                "O=C(Nc1ccccc1)c1ccc2c(c1)OCO2",
                "Cc1cc(C(=O)NCc2ccco2)no1",
                "Cc1ccc(NC(=O)c2ccc(Cl)s2)cc1",
                "COc1ccc(C=NNC(=O)c2ccncc2)cc1OC",
                "O=C(O)c1ccc(NC(=O)c2cccs2)cc1",
                "COc1cc(C=NNC(=O)Nc2ccccc2)ccc1O",
                "Cn1cnc(C(=O)N2CCNCC2)c1",
                "NC(=O)c1ccc(Oc2ccccc2)cc1",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "NC(=O)c1ccc(Oc2ccccc2)cc1",
                "O=C(Nc1ccccc1)c1ccc2c(c1)OCO2",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3ccccc23)CC1",
                "COc1ccc(C=NNC(=O)c2ccncc2)cc1OC",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "Cc1cc(C(=O)NCc2ccco2)no1",
                "O=C(O)c1ccc(NC(=O)c2cccs2)cc1",
                "Cn1cnc(C(=O)N2CCNCC2)c1",
                "Cc1ccc(NC(=O)c2ccc(Cl)s2)cc1",
                "COc1cc(C=NNC(=O)Nc2ccccc2)ccc1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010558605194091797,
            "chemical_diversity": 0.81408597429187,
            "average_molecular_weight": 253.72930000000002,
            "api_call_time": 12.26246976852417
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1nnc(CNC(=O)[C@H]2C[C@@H]2F)o1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CO[C@H]1C[C@@H]1C(=O)NCc1nnc(C)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2I)o1",
                "COC(=O)[C@H]1C[C@@H]1C(=O)NCc1nnc(C)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2S(C)(=O)=O)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2O)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2Br)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2N)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2Cl)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2C(F)(F)F)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2C#N)o1"
            ],
            "total_raw_response_smiles": [
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2Cl)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2Br)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2I)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2O)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2N)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2C#N)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2C(F)(F)F)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2OC)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2S(C)(=O)=O)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2C(=O)OC)o1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008877277374267578,
            "chemical_diversity": 0.3067331782053291,
            "average_molecular_weight": 234.13619999999997,
            "api_call_time": 12.022820234298706
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1nnc(CNC(=O)[C@H]2C[C@@H]2F)o1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)O[C@H]2C[C@@H](Cc3ccccc3)N(C(=O)c3ccc(F)cc3F)C[C@H]2O1",
                "O=C(NCc1ccncc1)c1ccc2c(c1)C(=O)N(CCN1CCOCC1)C2",
                "Cc1nc2c(c(=O)[nH]1)C(=O)N(c1ccc(C#N)cc1)C(C)(C)C2",
                "O=C(c1ccco1)N1CC[C@@]2(C1)C(=O)Nc1ccc(Br)cc12",
                "COc1cc(OC)c(CN2CCN(C(=O)C34CC5CC(CC(C5)C3)C4)CC2)c(OC)c1",
                "CC(C)(C)c1ccc(C(=O)N2CCN(C(=O)c3ccco3)CC2)cc1",
                "CC(C)C[C@H](NC(=O)[C@@H]1CCCN1C(=O)c1cccs1)C(=O)N1CCOCC1",
                "CC(C)Oc1ccc(C[C@@H]2C[C@H](O)[C@@H](O)[C@H](C(=O)O)O2)cc1Cl",
                "CC(=O)N1CCN(c2ccc(NC(=O)C3(c4ccc(Cl)cc4)CC3)cc2)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cn(C2CC2)c2ccccc12"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)c1ccc(C(=O)N2CCN(C(=O)c3ccco3)CC2)cc1",
                "CC1(C)O[C@@H]2CN(C(=O)c3ccc(F)cc3F)[C@H](Cc3ccccc3)C[C@@H]2O1",
                "O=C(NCc1ccncc1)c1ccc2c(c1)C(=O)N(CCN1CCOCC1)C2",
                "COc1cc(OC)c(CN2CCN(C(=O)C34CC5CC(CC(C5)C3)C4)CC2)c(OC)c1",
                "CC(C)C[C@H](NC(=O)[C@@H]1CCCN1C(=O)c1cccs1)C(=O)N1CCOCC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cn(C2CC2)c2ccccc12",
                "CC(C)Oc1ccc(C[C@@H]2C[C@H](O)[C@@H](O)[C@H](C(=O)O)O2)cc1Cl",
                "CC(=O)N1CCN(c2ccc(NC(=O)C3(c4ccc(Cl)cc4)CC3)cc2)CC1",
                "O=C1Nc2ccc(Br)cc2[C@@]12CCN(C(=O)c1ccco1)C2",
                "Cc1nc2c(c(=O)[nH]1)C(=O)N(c1ccc(C#N)cc1)C(C)(C)C2"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.013690471649169922,
            "chemical_diversity": 0.8381621996250377,
            "average_molecular_weight": 378.2149000000001,
            "api_call_time": 23.305543184280396
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1nnc(CNC(=O)[C@H]2C[C@@H]2F)o1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2C)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2S)o1",
                "Cc1nnc(CNC(=O)C2CC2)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2I)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2Br)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2O)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2N)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2Cl)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2P)o1"
            ],
            "total_raw_response_smiles": [
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2Cl)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2Br)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2I)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2C)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2O)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2N)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2S)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2P)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2[H])o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2[CH3])o1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.008336067199707031,
            "chemical_diversity": 0.2648903964693434,
            "average_molecular_weight": 219.898,
            "api_call_time": 10.358932971954346
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1nnc(CNC(=O)[C@H]2C[C@@H]2F)o1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "COc1ccc(-c2cc(C(F)(F)F)nn2-c2ccc(S(=O)(=O)N3CCCC3)cc2)cc1",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc3ccccc3n1C2c1ccccc1Cl",
                "Cc1cc(NC(=O)C2=CC(=O)c3ccccc3C2=O)no1",
                "Cc1ccc(S(=O)(=O)N2CCN(C(=O)COc3cccc4ccccc34)CC2)cc1",
                "CC(C)Oc1ccc(C(=O)N2CCN(C(=O)C3CCCCC3)CC2)cc1Br",
                "COc1cc(C=NNC(=O)c2cc(OC)c(OC)c(OC)c2)ccc1O",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(-c3ccc(C#N)cc3)o2)CC1",
                "O=C(Nc1ccc(Cl)cc1)C1CCN(Cc2c[nH]c3ccccc23)CC1",
                "O=C(O)c1ccc(NC(=O)c2cccs2)c(F)c1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(-c3ccc(C#N)cc3)o2)CC1",
                "COc1cc(C=NNC(=O)c2cc(OC)c(OC)c(OC)c2)ccc1O",
                "CC(C)Oc1ccc(C(=O)N2CCN(C(=O)C3CCCCC3)CC2)cc1Br",
                "O=C(Nc1ccc(Cl)cc1)C1CCN(Cc2c[nH]c3ccccc23)CC1",
                "Cc1cc(NC(=O)C2=CC(=O)c3ccccc3C2=O)no1",
                "COc1ccc(-c2cc(C(F)(F)F)nn2-c2ccc(S(=O)(=O)N3CCCC3)cc2)cc1",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc3ccccc3n1C2c1ccccc1Cl",
                "O=C(O)c1ccc(NC(=O)c2cccs2)c(F)c1",
                "Cc1ccc(S(=O)(=O)N2CCN(C(=O)COc3cccc4ccccc34)CC2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.013365030288696289,
            "chemical_diversity": 0.8531772883515731,
            "average_molecular_weight": 381.0370000000001,
            "api_call_time": 20.164807319641113
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1nnc(CNC(=O)[C@H]2C[C@@H]2F)o1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2C)o1",
                "Cc1nnc(CNC(=O)C2C[C@@H]2F)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2I)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2O)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2Br)o1",
                "Cc1nnc(CNC(=O)[C@@H]2C[C@@H]2F)o1",
                "Cc1nnc(CN(C)C(=O)[C@H]2C[C@@H]2F)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2N)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2Cl)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@H]2F)o1"
            ],
            "total_raw_response_smiles": [
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2Cl)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2Br)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2I)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2O)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2N)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@@H]2C)o1",
                "Cc1nnc(CNC(=O)[C@H]2C[C@H]2F)o1",
                "Cc1nnc(CNC(=O)[C@@H]2C[C@@H]2F)o1",
                "Cc1nnc(CNC(=O)C2C[C@@H]2F)o1",
                "Cc1nnc(CN(C)C(=O)[C@H]2C[C@@H]2F)o1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008391857147216797,
            "chemical_diversity": 0.28442728509917725,
            "average_molecular_weight": 218.22149999999996,
            "api_call_time": 10.650923013687134
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1nnc(CNC(=O)[C@H]2C[C@@H]2F)o1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nc(CNC(=O)C2CC2Cl)cs1",
                "C=CC(=O)NCc1nnc(C)o1",
                "Cc1nnc(C=NC#N)o1",
                "Cc1nnc(CNC(=N)N)o1",
                "Cc1nnc(CNC(=O)c2ccco2)o1",
                "Cc1nnc(CNC(=O)C2CCCC2)s1",
                "Cc1nnc(CN=C=O)o1",
                "Cc1nnc(CNC(=O)C2CCCCC2)o1",
                "C#CC(=O)NCc1nnc(C)o1",
                "Cc1nnc(CN2CCCC2=O)o1"
            ],
            "total_raw_response_smiles": [
                "Cc1nc(CNC(=O)C2CC2Cl)cs1",
                "Cc1nnc(CNC(=O)C2CCCC2)s1",
                "Cc1nnc(CN2C(=O)CCC2)o1",
                "Cc1nnc(CNC(=O)c2ccco2)o1",
                "Cc1nnc(CNC(=O)C2CCCCC2)o1",
                "Cc1nnc(CNC(=O)C=C)o1",
                "Cc1nnc(CNC(=O)C#C)o1",
                "Cc1nnc(CNC(=N)N)o1",
                "Cc1nnc(CN=C=O)o1",
                "Cc1nnc(C=NC#N)o1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007076740264892578,
            "chemical_diversity": 0.6761523218488759,
            "average_molecular_weight": 183.04059999999998,
            "api_call_time": 11.145676851272583
        }
    ],
    "C=C(C)CCNc1ccccc1CC": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C(C)CCNc1ccccc1CC', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C(C)CCNc1ccccc1Br",
                "C=C(C)CCNc1ccccc1",
                "C=C(C)CCNc1ccccc1CC",
                "C=C(C)CCNc1cccc(C)c1CC",
                "C=C(C)CCNc1ccccc1C",
                "C=C(C)CCNc1ccccc1Cl",
                "C=C(C)CCNc1ccccc1CO",
                "C=C(C)CCNc1ccccc1F",
                "CCc1ccccc1NCCC(C)C",
                "C=C(C)CCNc1ccccc1I"
            ],
            "total_raw_response_smiles": [
                "C=C(C)CCNc1ccccc1CC",
                "C=C(C)CCNc1ccccc1C",
                "C=C(C)CCNc1ccccc1",
                "C=C(C)CCNc1ccccc1CO",
                "C=C(C)CCNc1ccccc1F",
                "C=C(C)CCNc1ccccc1Cl",
                "C=C(C)CCNc1ccccc1Br",
                "C=C(C)CCNc1ccccc1I",
                "C=C(C)CCNc1cccc(C)c1CC",
                "CC(C)CCNc1ccccc1CC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006943702697753906,
            "chemical_diversity": 0.4390514360087907,
            "average_molecular_weight": 201.39649999999997,
            "api_call_time": 5.981100559234619
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C(C)CCNc1ccccc1CC', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1cc(=O)oc2cc(OCC(=O)Nc3ccccc3)ccc12",
                "Cc1ccc(C(=O)N2CCN(c3ncccn3)CC2)cc1",
                "Cc1cccc(NC(=O)C2=CC(=O)NC(=O)C2)c1",
                "O=C(CSc1nnc(-c2ccco2)o1)Nc1ccc(Cl)cc1",
                "O=C(Nc1ccc(F)cc1)c1ccc(CN2CCOCC2)cc1",
                "COc1ccc(Cn2c(=O)c3ccccc3c(=O)n2C)cc1",
                "CCOc1ccc(NC(=O)Cn2cnc3ccccc32)cc1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "CC(C)(C)OC(=O)N1CCC(Nc2nccs2)CC1",
                "CCN1C(=O)NC(CC(=O)Nc2ccccc2)C1=O"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccc(Cl)cc1",
                "CCN1C(=O)C(CC(=O)Nc2ccccc2)NC1=O",
                "Cc1ccc(C(=O)N2CCN(c3ncccn3)CC2)cc1",
                "O=C(Nc1ccc(F)cc1)c1ccc(CN2CCOCC2)cc1",
                "COc1ccc(Cn2c(=O)c3ccccc3c(=O)n2C)cc1",
                "CC(C)(C)OC(=O)N1CCC(Nc2nccs2)CC1",
                "Cc1cc(=O)oc2cc(OCC(=O)Nc3ccccc3)ccc12",
                "O=C(CSc1nnc(-c2ccco2)o1)Nc1ccc(Cl)cc1",
                "CCOc1ccc(NC(=O)Cn2cnc3ccccc32)cc1",
                "Cc1cccc(NC(=O)C2=CC(=O)NC(=O)C2)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011261463165283203,
            "chemical_diversity": 0.8249101283662835,
            "average_molecular_weight": 290.61100000000005,
            "api_call_time": 15.638155221939087
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C(C)CCNc1ccccc1CC', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C(C)CCNc1ccc(C)cc1CC",
                "C=C(C)CCNc1ccccc1CC",
                "C=C(C)CCNc1ccc(F)cc1CC",
                "C=C(C)CCNc1ccc(Cl)cc1CC",
                "C=C(C)CCNc1ccc(S)cc1CC",
                "C=C(C)CCNc1ccc(O)cc1CC",
                "C=C(C)CCNc1ccc(N)cc1CC",
                "C=C(C)CCNc1ccccc1C(C)O",
                "C=C(C)CCNc1ccccc1C(C)C",
                "C=C(C)CCNc1ccc(Br)cc1CC"
            ],
            "total_raw_response_smiles": [
                "C=C(C)CCNc1ccccc1CC",
                "C=C(C)CCNc1ccc(F)cc1CC",
                "C=C(C)CCNc1ccc(Cl)cc1CC",
                "C=C(C)CCNc1ccc(Br)cc1CC",
                "C=C(C)CCNc1ccc(C)cc1CC",
                "C=C(C)CCNc1ccc(O)cc1CC",
                "C=C(C)CCNc1ccc(N)cc1CC",
                "C=C(C)CCNc1ccc(S)cc1CC",
                "C=C(C)CCNc1ccccc1C(C)C",
                "C=C(C)CCNc1ccccc1C(O)C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007292270660400391,
            "chemical_diversity": 0.3923006658895971,
            "average_molecular_weight": 213.14849999999996,
            "api_call_time": 6.744548559188843
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C(C)CCNc1ccccc1CC', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)NCC(O)COc1ccc(CCOCC2CC2)cc1",
                "CC[C@H](C)[C@@H]1NC(=O)[C@H](C(C)C)NC(=O)[C@H](CC(N)=O)NC(=O)[C@H](CC(=O)O)NC(=O)[C@H](Cc2ccccc2)NC1=O",
                "O=C1NC(=O)C(=O)N1",
                "Cc1nnc(SCc2ccc(Cl)cc2)s1",
                "CCCCC[C@H](O)/C=C/[C@H]1[C@H]2CC=C[C@H]2C[C@@H]1O",
                "C[C@@H]1CC[C@H]2[C@H](CC[C@H]3[C@@H]4CC[C@@H](O)[C@@H]4CC[C@@H]32)C1",
                "CC(C)(C)OC(=O)NCCc1ccccc1",
                "CC12CCC(CC1=O)C2(C)C",
                "CCOC(=O)c1ccc(N=Nc2cc(=O)n(C)[nH]2)cc1",
                "O=S(=O)(O)c1ccccc1-c1ccccc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)N1",
                "CC1(C)C2CCC1(C)C(=O)C2",
                "C1=CC=C(C=C1)C2=CC=CC=C2S(=O)(=O)O",
                "CCCCC[C@H](O)/C=C/[C@@H]1[C@H](C[C@H]2[C@@H]1CC=C2)O",
                "CC(C)(C)OC(=O)NCCC1=CC=CC=C1",
                "C[C@@H]1CC[C@H]2[C@@H](C1)CC[C@@H]1[C@@H]2CC[C@@H]2[C@H]1CC[C@H]2O",
                "CC1=NN=C(S1)SCC2=CC=C(C=C2)Cl",
                "CC[C@H](C)[C@H]1C(=O)N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)N1)C(C)C)CC(=O)N)CC(=O)O)CC2=CC=CC=C2",
                "CC(C)NCC(COC1=CC=C(C=C1)CCOCC2CC2)O",
                "CCOC(=O)C1=CC=C(C=C1)N=NC2=CC(=O)N(N2)C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009818315505981445,
            "chemical_diversity": 0.9073166739257099,
            "average_molecular_weight": 266.18510000000003,
            "api_call_time": 20.468703269958496
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C(C)CCNc1ccccc1CC', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C(C)CCNc1ccccc1CC",
                "C=C(C)CCNc1ccccc1CN",
                "C=C(C)CCNc1ccccc1CI",
                "C=C(C)CCNc1ccccc1C",
                "C=C(C)CCNc1ccccc1CF",
                "C=C(C)CCNc1ccccc1CCl",
                "C=C(C)CCNc1ccccc1CO",
                "C=C(C)CCNc1ccccc1C(C)C",
                "C=C(C)CCNc1ccccc1CCC",
                "C=C(C)CCNc1ccccc1CBr"
            ],
            "total_raw_response_smiles": [
                "C=C(C)CCNc1ccccc1CC",
                "C=C(C)CCNc1ccccc1C",
                "C=C(C)CCNc1ccccc1CCC",
                "C=C(C)CCNc1ccccc1C(C)C",
                "C=C(C)CCNc1ccccc1CO",
                "C=C(C)CCNc1ccccc1CN",
                "C=C(C)CCNc1ccccc1CF",
                "C=C(C)CCNc1ccccc1CCl",
                "C=C(C)CCNc1ccccc1CBr",
                "C=C(C)CCNc1ccccc1CI"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007002115249633789,
            "chemical_diversity": 0.3196390584832278,
            "average_molecular_weight": 211.1126,
            "api_call_time": 6.4768900871276855
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C(C)CCNc1ccccc1CC', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCN(CC)CCNC(=O)c1ccc(OC)c(OC)c1",
                "O=C(O)c1ccc(NC(=O)C2CC2)c(F)c1",
                "O=C(NCc1ccccc1)c1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)N1CCC(Oc2ccc(F)cc2)CC1",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Cl)cc1C2",
                "Cc1nnc(SCC(=O)Nc2ccc(C(C)(C)C)cc2)s1",
                "COc1cc(C=NNC(N)=S)ccc1O",
                "CC(C)Cn1cnc2c(N)nc(SCCO)nc21",
                "COc1ccc(C2C(C(=O)OC(C)C)=C(C)NC3=C2C(=O)CCC3)cc1",
                "Cn1c(=O)c2c(ncn2CC(=O)N2CCOCC2)n(C)c1=O"
            ],
            "total_raw_response_smiles": [
                "O=C(NCc1ccccc1)c1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)N1CCC(Oc2ccc(F)cc2)CC1",
                "CCN(CC)CCNC(=O)c1ccc(OC)c(OC)c1",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Cl)cc1C2",
                "O=C(Cn1cnc2c1c(=O)n(C)c(=O)n2C)N1CCOCC1",
                "COc1ccc(C2C(C(=O)OC(C)C)=C(C)NC3=C2C(=O)CCC3)cc1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(C)(C)C)cc2)s1",
                "CC(C)Cn1cnc2c(N)nc(SCCO)nc21",
                "O=C(O)c1ccc(NC(=O)C2CC2)c(F)c1",
                "COc1cc(C=NNC(N)=S)ccc1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009440898895263672,
            "chemical_diversity": 0.8708799180707303,
            "average_molecular_weight": 278.32320000000004,
            "api_call_time": 15.84511661529541
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C(C)CCNc1ccccc1CC', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C(C)CCNc1ccccc1Br",
                "C=C(C)CCNc1ccccc1CC",
                "C=C(C)CCNc1cccc(C)c1CC",
                "C=C(C)CCNc1ccccc1CN",
                "C=C(C)CCNc1ccccc1CF",
                "C=C(C)CCNc1ccccc1Cl",
                "C=C(C)CCNc1ccccc1CO",
                "CCc1ccccc1NCCC(C)CC",
                "CCc1ccccc1NCCC(C)C",
                "C=C(C)CCNc1cccnc1CC"
            ],
            "total_raw_response_smiles": [
                "C=C(C)CCNc1ccccc1CC",
                "C=C(C)CCNc1ccccc1CO",
                "C=C(C)CCNc1ccccc1CN",
                "C=C(C)CCNc1cccnc1CC",
                "C=C(C)CCNc1ccccc1CF",
                "C=C(C)CCNc1ccccc1Cl",
                "C=C(C)CCNc1ccccc1Br",
                "C=C(C)CCNc1cccc(C)c1CC",
                "CC(C)CCNc1ccccc1CC",
                "CCC(C)CCNc1ccccc1CC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004512310028076172,
            "chemical_diversity": 0.4711306418621187,
            "average_molecular_weight": 199.02499999999998,
            "api_call_time": 6.795177936553955
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C(C)CCNc1ccccc1CC', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C(C)CCNc1ccc(F)cc1CC",
                "C=C(C)CCNc1ccncc1CC",
                "C=C(C)CCNc1ccc(Cl)cc1CC",
                "C=Cc1ccccc1NCCC(=C)C",
                "C#Cc1ccccc1NCCC(=C)C",
                "C=C(C)CCNc1ccc(O)cc1CC",
                "C=C(C)CCNc1cccc(F)c1CC",
                "C=C(C)CCNc1ccccc1CO",
                "C=C(C)CCCc1ccccc1CC",
                "C=C(C)CCNc1cccnc1CC"
            ],
            "total_raw_response_smiles": [
                "C=C(C)CCCc1ccccc1CC",
                "C=C(C)CCNc1ccncc1CC",
                "C=C(C)CCNc1ccccc1CO",
                "C=C(C)CCNc1ccc(F)cc1CC",
                "C=C(C)CCNc1ccccc1C=C",
                "C=C(C)CCNc1ccc(O)cc1CC",
                "C=C(C)CCNc1cccnc1CC",
                "C=C(C)CCNc1ccccc1C#C",
                "C=C(C)CCNc1cccc(F)c1CC",
                "C=C(C)CCNc1ccc(Cl)cc1CC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0070037841796875,
            "chemical_diversity": 0.5124943679415226,
            "average_molecular_weight": 197.63559999999998,
            "api_call_time": 7.811988830566406
        }
    ],
    "Cc1nc2c(C)cccn2c1CO": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1nc2c(C)cccn2c1CO', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nc2c(C)cccn2c1Cl",
                "Cc1nc2c(C)cccn2c1C=O",
                "Cc1nc2c(C)cccn2c1CS",
                "Cc1nc2c(C)cccn2c1CO",
                "Cc1nc2c(C)cccn2c1CBr",
                "Cc1nc2c(C)cccn2c1CN",
                "Cc1nc2c(C)cccn2c1CI",
                "Cc1nc2c(C)cccn2c1C#N",
                "Cc1nc2c(C)cccn2c1CF",
                "CCc1c(C)nc2c(C)cccn12"
            ],
            "total_raw_response_smiles": [
                "Cc1nc2c(C)cccn2c1CO",
                "Cc1nc2c(C)cccn2c1CS",
                "Cc1nc2c(C)cccn2c1CF",
                "Cc1nc2c(C)cccn2c1Cl",
                "Cc1nc2c(C)cccn2c1CN",
                "Cc1nc2c(C)cccn2c1CC",
                "Cc1nc2c(C)cccn2c1C=O",
                "Cc1nc2c(C)cccn2c1CBr",
                "Cc1nc2c(C)cccn2c1CI",
                "Cc1nc2c(C)cccn2c1C#N"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00771021842956543,
            "chemical_diversity": 0.3658781955028082,
            "average_molecular_weight": 194.74739999999994,
            "api_call_time": 6.5856711864471436
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1nc2c(C)cccn2c1CO', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(SCC(=O)Nc2cccc(C(F)(F)F)c2)n1C",
                "CC(=O)Nc1ccc(Nc2nc(-c3ccccc3)cs2)cc1",
                "CCOc1ccc(C2Nc3ccccc3C(=O)N2c2ccccc2)cc1",
                "O=C(O)c1ccc(NCc2cn(Cc3ccccc3)nn2)cc1",
                "COc1ccc(-c2cc(=O)c3c(O)c(OC)c(OC)cc3o2)cc1OC",
                "COc1cc(OC)c2c(=O)cc(-c3ccccc3)oc2c1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "O=C(NCc1ccncc1)c1ccc(CN2CCOCC2)cc1",
                "CC1(C)CC(=O)c2c([nH]c3ccc(S(=O)(=O)N4CCOCC4)cc23)C1",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccc(Cl)cc1",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(S(=O)(=O)N3CCOCC3)cc12",
                "COc1ccc(-c2cc(=O)c3c(O)c(OC)c(OC)cc3o2)cc1OC",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "O=C(O)c1ccc(NCc2cn(Cc3ccccc3)nn2)cc1",
                "COc1cc(OC)c2c(=O)cc(-c3ccccc3)oc2c1",
                "Cc1nnc(SCC(=O)Nc2cccc(C(F)(F)F)c2)n1C",
                "O=C(NCc1ccncc1)c1ccc(CN2CCOCC2)cc1",
                "CC(=O)Nc1ccc(Nc2nc(-c3ccccc3)cs2)cc1",
                "CCOc1ccc(C2Nc3ccccc3C(=O)N2c2ccccc2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012056589126586914,
            "chemical_diversity": 0.8568777879809903,
            "average_molecular_weight": 319.4041,
            "api_call_time": 15.958270072937012
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1nc2c(C)cccn2c1CO', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nc2c(C)cccn2c1CCO",
                "Cc1nc2c(C)cccn2c1CS",
                "Cc1nc2c(C)cccn2c1CO",
                "Cc1nc2c(C)cccn2c1CCN",
                "Cc1nc2c(C)cccn2c1CN",
                "CNCc1c(C)nc2c(C)cccn12",
                "CCCc1c(C)nc2c(C)cccn12",
                "Cc1nc2c(C)cccn2c1CF",
                "COCc1c(C)nc2c(C)cccn12",
                "CCc1c(C)nc2c(C)cccn12"
            ],
            "total_raw_response_smiles": [
                "Cc1nc2c(C)cccn2c1CO",
                "Cc1nc2c(C)cccn2c1CC",
                "Cc1nc2c(C)cccn2c1CN",
                "Cc1nc2c(C)cccn2c1CF",
                "Cc1nc2c(C)cccn2c1CS",
                "Cc1nc2c(C)cccn2c1CCO",
                "Cc1nc2c(C)cccn2c1CCN",
                "Cc1nc2c(C)cccn2c1CCC",
                "Cc1nc2c(C)cccn2c1COC",
                "Cc1nc2c(C)cccn2c1CNC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008797645568847656,
            "chemical_diversity": 0.3048420448278547,
            "average_molecular_weight": 184.34879999999995,
            "api_call_time": 6.507655620574951
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1nc2c(C)cccn2c1CO', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1cc(C=O)ccc1O",
                "CNC(=O)c1ccc(OC(=O)N(C)C)cc1",
                "CCOC(=O)C1=C(C)NC(C)=C(C(=O)OC)C1c1ccccc1[N+](=O)[O-]",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "CC(C)(C)OC(=O)NCCc1ccccc1",
                "O=C1CCCN1CCCC(=O)N1CCNCC1",
                "CC1(C)SC2C(NC(=O)Cc3ccccc3)C(=O)N2C1C(=O)O",
                "CC(=O)Nc1nnc(S(N)(=O)=O)s1",
                "CCCN(CCC)C(=O)C(CC)NC(=O)OC",
                "C1CCC2(CC1)OCCO2"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "CC(C)(C)OC(=O)NCCC1=CC=CC=C1",
                "C1CCC2(CC1)OCCO2",
                "CC(=O)NC1=NN=C(S1)S(=O)(=O)N",
                "CCCN(CCC)C(=O)C(CC)NC(=O)OC",
                "O=C1CCCN1CCCC(=O)N1CCNCC1",
                "COc1cc(C=O)ccc1O",
                "CCOC(=O)C1=C(C)NC(=C(C1c1ccccc1N(=O)=O)C(=O)OC)C",
                "CC1(C)SC2C(NC(=O)Cc3ccccc3)C(=O)N2C1C(=O)O",
                "CNC(=O)C1=CC=C(OC(=O)N(C)C)C=C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008593559265136719,
            "chemical_diversity": 0.8923892203891358,
            "average_molecular_weight": 239.08319999999998,
            "api_call_time": 14.663237810134888
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1nc2c(C)cccn2c1CO', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nc2c(C)cccn2c1CCO",
                "Cc1nc2c(C)cccn2c1C(CO)CO",
                "Cc1nc2c(C)cccn2c1CO",
                "CCc1cccn2c(CCO)c(C)nc12",
                "Cc1nc2c(C)cccn2c1C(O)CO",
                "Cc1nc2c(C)cccn2c1C(C)O",
                "CCc1nc2c(C)cccn2c1CCO",
                "CCc1nc2c(C)cccn2c1CO",
                "CCc1nc2c(CC)cccn2c1CO",
                "CCc1cccn2c(CO)c(C)nc12"
            ],
            "total_raw_response_smiles": [
                "Cc1nc2c(C)cccn2c1CO",
                "CCc1nc2c(C)cccn2c1CO",
                "Cc1nc2c(CC)cccn2c1CO",
                "Cc1nc2c(C)cccn2c1CCO",
                "Cc1nc2c(C)cccn2c1C(C)O",
                "Cc1nc2c(C)cccn2c1C(O)CO",
                "CCc1nc2c(CC)cccn2c1CO",
                "CCc1nc2c(C)cccn2c1CCO",
                "Cc1nc2c(CC)cccn2c1CCO",
                "Cc1nc2c(C)cccn2c1C(CO)CO"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008703231811523438,
            "chemical_diversity": 0.4534984698649731,
            "average_molecular_weight": 197.65389999999996,
            "api_call_time": 6.843388319015503
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1nc2c(C)cccn2c1CO', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCc1ccccc1)c1ccc(CN2CCN(c3ncccn3)CC2)cc1",
                "O=C(Cn1cnc2c(N3CCCC3)ncnc21)Nc1ccc(Oc2ccccc2)cc1",
                "CC(C)(C)C(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "COc1ccc(C2C(C(=O)c3ccc(F)cc3)=C(O)C(=O)N2c2ccc(Cl)cc2)cc1OC",
                "Cc1ccc(S(=O)(=O)N2CCN(CC(=O)Nc3ccc4c(c3)OCO4)CC2)cc1",
                "COc1cc(C=NNC(=O)c2cc(C)n(-c3ccc(Cl)cc3)c2C)ccc1O",
                "O=C(Nc1ccc(N2CCOCC2)cc1)c1cc2ccccc2n1Cc1cccs1",
                "CC(C)(C)OC(=O)N1CCN(c2ccc(NC(=O)c3ccc(C#N)cc3)cc2)CC1",
                "Cc1cc(C(=O)CSc2nnc(-c3ccco3)n2C)c(C)n1Cc1ccco1",
                "CC1(C)CC(NC(=O)c2cccs2)CC(C)(CN2CCOCC2)C1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)C(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "O=C(NCc1ccccc1)c1ccc(CN2CCN(c3ncccn3)CC2)cc1",
                "COc1ccc(C2C(C(=O)c3ccc(F)cc3)=C(O)C(=O)N2c2ccc(Cl)cc2)cc1OC",
                "CC1(C)CC(NC(=O)c2cccs2)CC(C)(CN2CCOCC2)C1",
                "Cc1cc(C(=O)CSc2nnc(-c3ccco3)n2C)c(C)n1Cc1ccco1",
                "O=C(Cn1cnc2c(N3CCCC3)ncnc21)Nc1ccc(Oc2ccccc2)cc1",
                "COc1cc(C=NNC(=O)c2cc(C)n(-c3ccc(Cl)cc3)c2C)ccc1O",
                "CC(C)(C)OC(=O)N1CCN(c2ccc(NC(=O)c3ccc(C#N)cc3)cc2)CC1",
                "Cc1ccc(S(=O)(=O)N2CCN(CC(=O)Nc3ccc4c(c3)OCO4)CC2)cc1",
                "O=C(Nc1ccc(N2CCOCC2)cc1)c1cc2ccccc2n1Cc1cccs1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.014115333557128906,
            "chemical_diversity": 0.8267368594224047,
            "average_molecular_weight": 398.26230000000015,
            "api_call_time": 18.739525079727173
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1nc2c(C)cccn2c1CO', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nc2c(C)ccc(C)n2c1CO",
                "Cc1nc2c(C)cccn2c1C=O",
                "Cc1nc2c(C)cccn2c1CS",
                "Cc1nc2c(C)cccn2c1CO",
                "Cc1nc2c(C)cccn2c1CN",
                "Cc1nc2c(C)ccnn2c1CO",
                "CCc1nc2c(C)cccn2c1CO",
                "CCc1c(C)nc2c(C)cccn12"
            ],
            "total_raw_response_smiles": [
                "Cc1nc2c(C)cccn2c1CO",
                "Cc1nc2c(C)cccn2c1CS",
                "Cc1nc2c(C)cccn2c1CC",
                "Cc1nc2c(C)cccn2c1CN",
                "Cc1nc2c(C)ccon2c1CO",
                "Cc1nc2c(C)ccnn2c1CO",
                "Cc1nc2c(C)cccn2n1CO",
                "Cc1nc2c(C)ccc(C)n2c1CO",
                "CCc1nc2c(C)cccn2c1CO",
                "Cc1nc2c(C)cccn2c1C=O"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.006798267364501953,
            "chemical_diversity": 0.4817959601955307,
            "average_molecular_weight": 181.23624999999998,
            "api_call_time": 6.175852537155151
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1nc2c(C)cccn2c1CO', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 5,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nc2c(C)ccc(C)n2c1CO",
                "Cc1nc2c(C)cccn2c1C=O",
                "Cc1nc2c(C)cccn2c1CS",
                "Cc1nc2c(C)ccc(O)n2c1CO",
                "Cc1nc2c(C)ccnn2c1CO"
            ],
            "total_raw_response_smiles": [
                "Cc1nc2c(C)ccon2c1CO",
                "Cc1nc2c(C)ccnn2c1CO",
                "Cc1nc2c(C)ccco2c1CO",
                "Cc1oc2c(C)cccn2c1CO",
                "Cc1nc2c(C)ccc(C)n2c1CO",
                "Cc1nc2c(C)ccs(=O)n2c1CO",
                "Cc1nc2c(C)ccc(=O)n2c1CO",
                "Cc1nc2c(C)ccc(O)n2c1CO",
                "Cc1nc2c(C)cccn2c1CS",
                "Cc1nc2c(C)cccn2c1C=O"
            ],
            "validity_ratio": 0.5,
            "post_processing_time": 0.005314350128173828,
            "chemical_diversity": 0.5545529266912934,
            "average_molecular_weight": 185.23219999999995,
            "api_call_time": 8.160674810409546
        }
    ],
    "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC[C@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](CC)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](CC)C(=O)O",
                "CCC[C@@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](CC)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N(C)[C@H](C)[C@H](C)C(=O)O"
            ],
            "total_raw_response_smiles": [
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@@H](C)C(=O)O",
                "CC[C@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](CC)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](CC)C(=O)O",
                "CCC[C@H](CC)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N(C)[C@H](C)[C@H](C)C(=O)O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004845619201660156,
            "chemical_diversity": 0.35095966233671894,
            "average_molecular_weight": 192.89379999999997,
            "api_call_time": 11.152791023254395
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ncc(Cn2cnc3ccccc32)cn1",
                "Cc1ccc(C(=O)Nc2nnc(-c3ccccc3)s2)cc1",
                "O=C1C=CC(=O)N1Cc1cccc2ccccc12",
                "Cc1nnc(Nc2ccc(C#N)cc2)s1",
                "Cc1cc(=O)[nH]c2cc(S(=O)(=O)N3CCCC3)ccc12",
                "NC(=O)c1ccccc1Nc1ccc(Cl)cc1",
                "O=c1[nH]cnc2cnc(Nc3ccccc3)nc12",
                "COc1cc2c(cc1OC)C(=O)N(CCCO)C2=O",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccco2)CC1",
                "O=C(Nc1ccccc1)c1ccc(O)c(=O)o1"
            ],
            "total_raw_response_smiles": [
                "NC(=O)C1=CC=CC=C1NC1=CC=C(Cl)C=C1",
                "CC1=CC(=O)NC2=C1C=CC(=C2)S(=O)(=O)N1CCCC1",
                "CC1=NN=C(NC2=CC=C(C=C2)C#N)S1",
                "O=C(NC1=CC=CC=C1)C1=CC=C(O)C(=O)O1",
                "COC1=C(OC)C=C2C(=O)N(CCCO)C(=O)C2=C1",
                "CC1=NC=C(CN2C=NC3=C2C=CC=C3)C=N1",
                "CC(C)(C)OC(=O)N1CCC(CC1)NC(=O)C1=CC=CO1",
                "O=C1NC=NC2=C1N=C(NC1=CC=CC=C1)N=C2",
                "CC1=CC=C(C=C1)C(=O)NC1=NN=C(S1)C1=CC=CC=C1",
                "O=C1C=CC(=O)N1CC1=CC=CC2=CC=CC=C12"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00986337661743164,
            "chemical_diversity": 0.8698915616555465,
            "average_molecular_weight": 254.22790000000003,
            "api_call_time": 15.80125641822815
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)S",
                "CCC[C@H](C)N[C@H](C)[C@H](C)CN",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C#N",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(N)=O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)CO",
                "CCC[C@H](C)N[C@H](C)[C@H](C)CF",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=N)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)CS"
            ],
            "total_raw_response_smiles": [
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)N",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=N)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)S",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C#N",
                "CCC[C@H](C)N[C@H](C)[C@H](C)CO",
                "CCC[C@H](C)N[C@H](C)[C@H](C)CS",
                "CCC[C@H](C)N[C@H](C)[C@H](C)CN",
                "CCC[C@H](C)N[C@H](C)[C@H](C)CF"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004608631134033203,
            "chemical_diversity": 0.45660735447211165,
            "average_molecular_weight": 183.10899999999998,
            "api_call_time": 9.850978374481201
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(O)C1CCCCC1",
                "NC(=O)c1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)Nc1ccccc1",
                "O=C1NC(=O)c2ccccc21",
                "CCOC(=O)C(C)Oc1ccccc1",
                "O=C(C1CCCCC1)N1CCNCC1",
                "CC(C)C[C@H](N)C(=O)O",
                "CC(=O)SCc1ccccc1",
                "COc1ccc(C=O)cc1",
                "CC12CCC(CC1=O)C2(C)C"
            ],
            "total_raw_response_smiles": [
                "NC(=O)c1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)Nc1ccccc1",
                "O=C(O)C1CCCCC1",
                "COc1ccc(C=O)cc1",
                "CC(=O)SCc1ccccc1",
                "C1CCC(CC1)C(=O)N1CCNCC1",
                "CC(C)C[C@@H](C(=O)O)N",
                "O=C1NC(=O)c2ccccc21",
                "CCOC(=O)C(C)Oc1ccccc1",
                "CC1(C)C2CCC1(C)C(=O)C2"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006438016891479492,
            "chemical_diversity": 0.8704775794038595,
            "average_molecular_weight": 160.0465,
            "api_call_time": 8.296675443649292
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)NC",
                "CC[C@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)OCC",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(N)=O",
                "CCC[C@H](C)N[C@H](CC)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](CC)C(=O)O",
                "CCC[C@H](CC)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)OC"
            ],
            "total_raw_response_smiles": [
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CC[C@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](CC)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](CC)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](CC)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)OC",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)NC",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)OCC",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)N"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.005849599838256836,
            "chemical_diversity": 0.43018431228840237,
            "average_molecular_weight": 196.90509999999998,
            "api_call_time": 11.53477931022644
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(Cn1cnc2c(N3CCNCC3)ncnc21)N1CCOCC1",
                "CC1(C)OC(=O)c2ccc(N3CCOCC3)cc21",
                "O=C1NC(=O)C(c2ccccc2)=C1Nc1ccc(Cl)cc1",
                "Cc1cc(NC(=O)c2cc(=O)c3ccccc3o2)no1",
                "COc1cc(C=NNC(=O)c2cccs2)cc(OC)c1OC",
                "Cc1nnc(SCC(=O)Nc2ccc(C(F)(F)F)cc2)o1",
                "O=C(CSc1nnc(-c2ccco2)n1Cc1ccccc1)NCc1ccco1",
                "CC(C)Cn1c(=O)c(-c2cccs2)nc2cnc(N)nc21",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1Nc1ccc(Cl)cc1",
                "CC1(C)OC(=O)C2=C1C=C(N1CCOCC1)C=C2",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "COc1cc(C=NNC(=O)c2cccs2)cc(OC)c1OC",
                "Cc1nnc(SCC(=O)Nc2ccc(C(F)(F)F)cc2)o1",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "O=C(CSc1nnc(-c2ccco2)n1Cc1ccccc1)NCc1ccco1",
                "Cc1cc(NC(=O)C2=CC(=O)c3ccccc3O2)no1",
                "O=C(Cn1cnc2c(N3CCNCC3)ncnc21)N1CCOCC1",
                "CC(C)Cn1c(=O)c(-c2cccs2)nc2cnc(N)nc21"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012127399444580078,
            "chemical_diversity": 0.8565451966412065,
            "average_molecular_weight": 312.08750000000003,
            "api_call_time": 16.857616186141968
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC[C@H](C)O[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)S",
                "CCC[C@H](C)S[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(N)=O",
                "CCC[C@@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N(C)[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=N)O"
            ],
            "total_raw_response_smiles": [
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@@H](C)N[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)N",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=N)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)S",
                "CCC[C@H](C)O[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)S[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N(C)[C@H](C)[C@H](C)C(=O)O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0047283172607421875,
            "chemical_diversity": 0.42713359575428556,
            "average_molecular_weight": 191.8993,
            "api_call_time": 10.341544389724731
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)O', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)F",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(N)=S",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)Cl",
                "CCC[C@H](C)S[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](Br)[C@H](C)C(=O)O",
                "CC[C@H](C)N[C@H](C)[C@H](C)C#N",
                "CCCC(C)=NC(C)C(C)C(=O)S",
                "CCC[C@H](C)P[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(O)O",
                "CCC[C@@H](C)N=C(C)[C@@H](C)C(=N)O"
            ],
            "total_raw_response_smiles": [
                "CCCC(C)=NC(C)C(C)C(=O)S",
                "CCC[C@@H](C)N=C(C)[C@@H](C)C(=N)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=S)N",
                "CC[C@H](C)N[C@H](C)[C@H](C)C#N",
                "CCC[C@H](C)P[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)F",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(O)O",
                "CCC[C@H](C)N[C@H](C)[C@H](C)C(=O)Cl",
                "CCC[C@H](C)S[C@H](C)[C@H](C)C(=O)O",
                "CCC[C@H](C)N[C@H](Br)[C@H](C)C(=O)O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004714488983154297,
            "chemical_diversity": 0.6844688955767517,
            "average_molecular_weight": 198.72809999999998,
            "api_call_time": 11.365978479385376
        }
    ],
    "CCN(C)C(=O)CNC1(C2CC2)CC1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCN(C)C(=O)CNC1(C2CC2)CC1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCCN(C)C(=O)CNC1(C2CC2)CC1",
                "CCN(C)C(=O)CNC1(C2CC2)CCC1",
                "CCN(C)C(=O)CNC1(C2CCC2)CC1",
                "CCN(C)C(=O)CNC1(C2CC2)CCCCC1",
                "CCCN(C)C(=O)CNC1(C2CC2)CC1",
                "CCN(C)C(=O)CNC1(C2CCCCC2)CC1",
                "CCN(C)C(=O)CNC1(C2CC2)CC1",
                "CCN(CC)C(=O)CNC1(C2CC2)CC1",
                "CCN(C)C(=O)CNC1(C2CCCC2)CC1",
                "CCN(C)C(=O)CNC1(C2CC2)CCCC1"
            ],
            "total_raw_response_smiles": [
                "CCN(C)C(=O)CNC1(C2CC2)CC1",
                "CCN(C)C(=O)CNC1(C2CCC2)CC1",
                "CCN(C)C(=O)CNC1(C2CCCC2)CC1",
                "CCN(C)C(=O)CNC1(C2CCCCC2)CC1",
                "CCN(C)C(=O)CNC1(C2CC2)CCC1",
                "CCN(C)C(=O)CNC1(C2CC2)CCCC1",
                "CCN(C)C(=O)CNC1(C2CC2)CCCCC1",
                "CCCN(C)C(=O)CNC1(C2CC2)CC1",
                "CCCCN(C)C(=O)CNC1(C2CC2)CC1",
                "CCN(CC)C(=O)CNC1(C2CC2)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006696462631225586,
            "chemical_diversity": 0.23277041201177218,
            "average_molecular_weight": 218.73719999999994,
            "api_call_time": 9.643247365951538
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCN(C)C(=O)CNC1(C2CC2)CC1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(CNC1CCOCC1)Nc1cccs1",
                "O=C(NCC1CCCCC1)c1ccncc1",
                "O=C(NCC1CCCC1)c1ccco1",
                "O=C(CNC1CCCC1)Nc1ccccc1",
                "O=C(NCC1CCC1)C1CCCO1",
                "O=C1NC(=O)C2(CCCCC2)N1",
                "O=C(CN1CCCC1)NC1CCCCC1",
                "O=C1CC2(CCCCC2)C(=O)N1CCO",
                "O=C(CN1CCOCC1)NC1CCCCC1",
                "O=C(CNC1CCCC1)NC1CCCO1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C2(CCCCC2)N1",
                "C1CCC2(CC1)CC(=O)N(CCO)C2=O",
                "O=C(CN1CCCC1)NC1CCCCC1",
                "C1CC(CNC(=O)C2CCCO2)C1",
                "O=C(CNC1CCCC1)Nc1ccccc1",
                "C1CCC(CC1)CNC(=O)c1ccncc1",
                "O=C(CNC1CCOCC1)Nc1cccs1",
                "C1COCCN1CC(=O)NC1CCCCC1",
                "O=C(CNC1CCCC1)NC1CCCO1",
                "C1CC(CNC(=O)c2ccco2)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0026874542236328125,
            "chemical_diversity": 0.7703795867357277,
            "average_molecular_weight": 208.18159999999997,
            "api_call_time": 11.679363489151001
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCN(C)C(=O)CNC1(C2CC2)CC1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCN(CC)C(=O)CNC1(C2CC2)CC1",
                "CCN(C)C(=O)CNC1(C2CC2)CCC1",
                "CCN(C)C(=O)CNC1(C2CCC2)CC1",
                "CCN(C)C(=O)CNC1(C2CC2)CCCCC1",
                "CCN(C)C(=O)CNC1(C2CCCCC2)CC1",
                "CCN(C)C(=O)CNC1(C2CC2)CC1",
                "CCCCN(CC)C(=O)CNC1(C2CC2)CC1",
                "CCN(CC)C(=O)CNC1(C2CC2)CC1",
                "CCN(C)C(=O)CNC1(C2CCCC2)CC1",
                "CCN(C)C(=O)CNC1(C2CC2)CCCC1"
            ],
            "total_raw_response_smiles": [
                "CCN(C)C(=O)CNC1(C2CC2)CC1",
                "CCN(C)C(=O)CNC1(C2CCC2)CC1",
                "CCN(C)C(=O)CNC1(C2CCCC2)CC1",
                "CCN(C)C(=O)CNC1(C2CCCCC2)CC1",
                "CCN(C)C(=O)CNC1(C2CC2)CCC1",
                "CCN(C)C(=O)CNC1(C2CC2)CCCC1",
                "CCN(C)C(=O)CNC1(C2CC2)CCCCC1",
                "CCN(CC)C(=O)CNC1(C2CC2)CC1",
                "CCN(CCC)C(=O)CNC1(C2CC2)CC1",
                "CCN(CCCC)C(=O)CNC1(C2CC2)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0071337223052978516,
            "chemical_diversity": 0.2548637488773271,
            "average_molecular_weight": 221.54259999999994,
            "api_call_time": 8.395593166351318
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCN(C)C(=O)CNC1(C2CC2)CC1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ccc(C(=O)Nc2ccc(O)cc2)cc1",
                "CC(C)(C)OC(=O)NCCCCNC(=O)c1ccccc1",
                "O=C(NCCc1cccs1)c1ccc(Cl)c(O)c1",
                "CCOC(=O)c1ccccc1NC(=O)c1ccco1",
                "CC(C)N=C(N)N=C(N)Nc1cc(F)ccn1",
                "O=C1NC(=O)C(=O)N1",
                "COc1ccc2c(c1)C(=O)C(NC(=O)NC1CCCC1)=CC2=O",
                "CN1CCN(c2nc3ccccc3s2)CC1",
                "CC(C)CC(NC(=O)C1CCCN1C)C(=O)NC1CCCCC1",
                "CCOC(=O)c1ccc(OC)c(NC(=O)C2CC2)c1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)N1",
                "CC1=CC=C(C=C1)C(=O)NC2=CC=C(O)C=C2",
                "CCOC(=O)C1=CC=CC=C1NC(=O)C2=CC=CO2",
                "CC(C)(C)OC(=O)NCCCCNC(=O)C3=CC=CC=C3",
                "CN1CCN(CC1)C2=NC3=CC=CC=C3S2",
                "OC4=C(C=CC(=C4)C(=O)NCCC5=CC=CS5)Cl",
                "CC(C)CC(C(=O)NC6CCCCC6)NC(=O)C7CCCN7C",
                "COC8=CC9=C(C=C8)C(=O)C=C(C9=O)NC(=O)NC%10CCCC%10",
                "CC(C)N=C(N)N=C(N)NC%11=NC=CC(=C%11)F",
                "CCOC(=O)C%12=CC(=C(C=C%12)OC)NC(=O)C%13CC%13"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009580612182617188,
            "chemical_diversity": 0.8708935302758486,
            "average_molecular_weight": 254.7452,
            "api_call_time": 15.004666566848755
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCN(C)C(=O)CNC1(C2CC2)CC1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCN(CC)C(=O)CNC1(C2CC2)CC1",
                "CCCCN(C)C(=O)CNC1(C2CC2)CC1",
                "CCCN(C)C(=O)CNC1(C2CC2)CC1",
                "CCN(C)C(=O)CNC1(C2CCC2)CC1",
                "CCN(C)C(=O)CNC1(C2CCCCC2)CC1",
                "CCN(CC)C(=O)CNC1(C2CC2)CC1",
                "CCN(C)C(=O)CNC1(C2CCCC2)CC1",
                "CCCCN(CCC)C(=O)CNC1(C2CC2)CC1",
                "CCN(C)C(=O)CNC1(C2CCCCCC2)CC1",
                "CN(C)C(=O)CNC1(C2CC2)CC1"
            ],
            "total_raw_response_smiles": [
                "CCN(C)C(=O)CNC1(C2CCC2)CC1",
                "CCN(C)C(=O)CNC1(C2CCCC2)CC1",
                "CCN(C)C(=O)CNC1(C2CCCCC2)CC1",
                "CCN(C)C(=O)CNC1(C2CCCCCC2)CC1",
                "CCCN(CC)C(=O)CNC1(C2CC2)CC1",
                "CCCCN(CCC)C(=O)CNC1(C2CC2)CC1",
                "CN(C)C(=O)CNC1(C2CC2)CC1",
                "CCCN(C)C(=O)CNC1(C2CC2)CC1",
                "CCCCN(C)C(=O)CNC1(C2CC2)CC1",
                "CCN(CC)C(=O)CNC1(C2CC2)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007212162017822266,
            "chemical_diversity": 0.31140727522901124,
            "average_molecular_weight": 222.94529999999992,
            "api_call_time": 9.824392080307007
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCN(C)C(=O)CNC1(C2CC2)CC1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCc1ccccc1)C1CCN(Cc2nc3ccccc3s2)CC1",
                "CN(C)c1ccc2c(c1)C(c1ccccc1Cl)C1=C(CC(C)(C)CC1=O)N2",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(S(=O)(=O)N3CCOCC3)cc2)CC1",
                "Cc1cc(NC(=O)C2CCCN(S(=O)(=O)c3ccc(Br)cc3)C2)no1",
                "COc1ccc(C2C(C(=O)Nc3ccccc3F)=C(C)Nc3nc(C)nn32)cc1OC",
                "CC(C)C1NC(=O)c2cc(Oc3ccc(C#N)cc3)ccc2N1",
                "COc1cc(C=NNC(=O)c2cc(OC)c(OC)c(OC)c2)ccc1O",
                "Cc1nnc(SCC(=O)Nc2ccc(C(=O)N3CCOCC3)cc2)n1C",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(F)cc1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)C1CCN(Cc2ccc(F)cc2)CC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(F)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(S(=O)(=O)N3CCOCC3)cc2)CC1",
                "COc1cc(C=NNC(=O)c2cc(OC)c(OC)c(OC)c2)ccc1O",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(N(C)C)cc1C2c1ccccc1Cl",
                "O=C(NCc1ccccc1)C1CCN(Cc2nc3ccccc3s2)CC1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(=O)N3CCOCC3)cc2)n1C",
                "CC(C)C1NC(=O)c2cc(Oc3ccc(C#N)cc3)ccc2N1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)C1CCN(Cc2ccc(F)cc2)CC1",
                "Cc1cc(NC(=O)C2CCCN(S(=O)(=O)c3ccc(Br)cc3)C2)no1",
                "COc1ccc(C2C(C(=O)Nc3ccccc3F)=C(C)Nc3nc(C)nn32)cc1OC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012396574020385742,
            "chemical_diversity": 0.8532494508426177,
            "average_molecular_weight": 387.3189000000001,
            "api_call_time": 19.779919147491455
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCN(C)C(=O)CNC1(C2CC2)CC1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCN(C)C(=O)CNC1(C2CCC2)CC1",
                "CCN(C)C(=O)CNC1(C2CS2)CC1",
                "CCN(C)C(=O)CNC1(C2CC2)CC1",
                "CCN(C)C(=O)CNC1(C2CO2)CC1",
                "CCN(C)C(=O)CNC1(C2CN2)CC1",
                "CCN(C)C(=O)CNC1(C2CC2)CO1",
                "CCN(C)C(=O)CNC1(C2CCO2)CC1",
                "CCN(C)C(=O)CNC1(C2CC2)CN1",
                "CCN(C)C(=O)CNC1(C2CCN2)CC1",
                "CCN(C)C(=O)CNC1(C2CCS2)CC1"
            ],
            "total_raw_response_smiles": [
                "CCN(C)C(=O)CNC1(C2CC2)CC1",
                "CCN(C)C(=O)CNC1(C2CCC2)CC1",
                "CCN(C)C(=O)CNC1(C2CN2)CC1",
                "CCN(C)C(=O)CNC1(C2CO2)CC1",
                "CCN(C)C(=O)CNC1(C2CS2)CC1",
                "CCN(C)C(=O)CNC1(C2CCN2)CC1",
                "CCN(C)C(=O)CNC1(C2CCO2)CC1",
                "CCN(C)C(=O)CNC1(C2CCS2)CC1",
                "CCN(C)C(=O)CNC1(C2CC2)CN1",
                "CCN(C)C(=O)CNC1(C2CC2)CO1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006800174713134766,
            "chemical_diversity": 0.37714566075454115,
            "average_molecular_weight": 206.40079999999995,
            "api_call_time": 8.307058811187744
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCN(C)C(=O)CNC1(C2CC2)CC1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)OC(=O)N1CCC(NC(=O)C2CCCO2)CC1",
                "O=C(CN1CCCC1)Nc1ccc(C(=O)N2CCCC2)cc1",
                "COc1ccc(CNC(=O)C23CC4CC(CC(C4)C2)C3)cc1OC",
                "CC1(C)CC(NC(=O)c2cncs2)CC(C)(CN2CCCC2)O1",
                "Cc1noc(C)c1CN1C(=O)C2(CCCC2)CC1C(=O)N1CCCC1",
                "CN1CCN(C(=O)C2CCCN2C(=O)c2cccs2)CC1",
                "O=C1CC2(CC2)C(=O)NC(=O)N1",
                "O=C(NC1CCCC1)C(c1ccccc1)N1CCN(C(=O)C2CC2)CC1",
                "O=C(NCc1ccccc1)C1CCCN1C1CCCCC1",
                "FC1CC(CN2CCOCC2)CC(F)(F)C1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C2(CC2)CC(=O)N1",
                "FC1CC(F)(F)CC(CN2CCOCC2)C1",
                "O=C(NCc1ccccc1)C1CCCN1C1CCCCC1",
                "CC(C)(C)OC(=O)N1CCC(CC1)NC(=O)C1CCCO1",
                "CN1CCN(CC1)C(=O)C1CCCN1C(=O)c1cccs1",
                "O=C(CN1CCCC1)Nc1ccc(C(=O)N2CCCC2)cc1",
                "CC1(C)CC(NC(=O)c2cncs2)CC(C)(CN2CCCC2)O1",
                "Cc1noc(C)c1CN1C(=O)C2(CCCC2)CC1C(=O)N1CCCC1",
                "O=C(NC1CCCC1)C(c1ccccc1)N1CCN(C(=O)C2CC2)CC1",
                "COc1ccc(CNC(=O)C23CC4CC(CC(C4)C2)C3)cc1OC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.01062631607055664,
            "chemical_diversity": 0.8511078101251394,
            "average_molecular_weight": 296.6882000000001,
            "api_call_time": 15.863954782485962
        }
    ],
    "CC[C@@H](CCO)NCC1(O)CCC1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC[C@@H](CCO)NCC1(O)CCC1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC[C@@H](CO)NCC1(O)CCC1",
                "CC[C@H](CCO)NCC1(O)CCC1",
                "CC[C@@H](CCO)NC(C)(O)C1CCC1",
                "CC[C@@H](CCCO)NCC1(O)CCC1",
                "CC[C@@H](CCO)NCC1(O)CCC1",
                "CC[C@@H](CCO)NCC1(O)CC1",
                "CC[C@@H](CCO)NCC1(O)CCCC1",
                "CCC(CCO)NCC1(O)CCC1",
                "CC[C@@H](CCO)NCC1(O)CCOC1"
            ],
            "total_raw_response_smiles": [
                "CC[C@@H](CCO)NCC1(O)CCC1",
                "CC[C@H](CCO)NCC1(O)CCC1",
                "CCC(CCO)NCC1(O)CCC1",
                "CC[C@@H](CCO)NCC1(O)CCCC1",
                "CC[C@@H](CCO)NCC1(O)CCOC1",
                "CC[C@@H](CCO)NC(C)(O)C1CCC1",
                "CC[C@@H](CCO)NCC1(O)CC1",
                "CC[C@@H](CO)NCC1(O)CCC1",
                "CC[C@@H](CCCO)NCC1(O)CCC1",
                "CC[C@@H](CCO)NCC1(O)CCCC1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.006019115447998047,
            "chemical_diversity": 0.3192805393301471,
            "average_molecular_weight": 190.61922222222216,
            "api_call_time": 7.620501279830933
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC[C@@H](CCO)NCC1(O)CCC1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CN1CCN(C(=O)c2cc(-c3ccc(F)cc3)on2)CC1",
                "COc1ccc(-c2cc(=O)c3c(O)cc(O)cc3o2)cc1",
                "CCN1C(=O)C(CC(=O)Nc2cccc(C)c2)SC1=S",
                "O=C(CSc1nnc(-c2ccccc2)o1)Nc1ccc(F)cc1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "Cc1ccc(-n2c(=O)c3c(ncn3C)n(C)c2=O)cc1",
                "CC1(C)OC(=O)N(Cc2ccccc2)C1=O",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3sc4c(c23)CCCC4)CC1",
                "Cc1nc2ccccc2n1CC(=O)N1CCOCC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccc(Cl)cc1",
                "CC1(C)OC(=O)N(Cc2ccccc2)C1=O",
                "Cc1nc2ccccc2n1CC(=O)N1CCOCC1",
                "O=C(CSc1nnc(-c2ccccc2)o1)Nc1ccc(F)cc1",
                "COc1ccc(-c2cc(=O)c3c(O)cc(O)cc3o2)cc1",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3sc4c(c23)CCCC4)CC1",
                "Cc1ccc(-n2c(=O)c3c(ncn3C)n(C)c2=O)cc1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "CCN1C(=O)C(CC(=O)Nc2cccc(C)c2)SC1=S",
                "CN1CCN(C(=O)c2cc(-c3ccc(F)cc3)on2)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011390924453735352,
            "chemical_diversity": 0.8571341385080763,
            "average_molecular_weight": 295.47950000000003,
            "api_call_time": 14.899449586868286
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC[C@@H](CCO)NCC1(O)CCC1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC[C@@H](CCOC(C)=O)NCC1(O)CCC1",
                "CC[C@@H](CCO)NCC1(O)CCCCC1",
                "CC[C@@H](CCO)NCC1(O)CCSC1",
                "CC[C@@H](CCO)NCC1(O)CCC1",
                "CC[C@@H](CCO)NCC1(O)CCOCC1",
                "CC[C@@H](CCOS(=O)(=O)O)NCC1(O)CCC1",
                "CC[C@@H](CCO)NCC1(O)CC1",
                "CC[C@@H](CCO)NCC1(O)CCCC1",
                "CC[C@@H](CCO)NCC1(O)CCOC1"
            ],
            "total_raw_response_smiles": [
                "CC[C@@H](CCO)NCC1(O)CCC1",
                "CC[C@@H](CCO)NCC1(O)CCCC1",
                "CC[C@@H](CCO)NCC1(O)CCCCC1",
                "CC[C@@H](CCO)NCC1(O)CC1",
                "CC[C@@H](CCO)NCC1(O)CCOCC1",
                "CC[C@@H](CCO)NCC1(O)CCSC1",
                "CC[C@@H](CCO)NCC1(O)CCOC1",
                "CC[C@@H](CCOH)NCC1(O)CCC1",
                "CC[C@@H](CCOS(=O)(=O)O)NCC1(O)CCC1",
                "CC[C@@H](CCOC(=O)C)NCC1(O)CCC1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.00608372688293457,
            "chemical_diversity": 0.34825956045239514,
            "average_molecular_weight": 212.64377777777773,
            "api_call_time": 9.960805416107178
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC[C@@H](CCO)NCC1(O)CCC1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1ccc(C=O)cc1OC",
                "CC1(C)OC(=O)NC1=O",
                "CC(C)(C)OC(=O)Nc1ccc(Cl)cc1",
                "CN1CCN(C(=O)c2ccc(F)cc2)CC1",
                "O=C(C1CCCCC1)N1CCNCC1",
                "O=C(O)c1ccccc1C(=O)Oc1ccccc1",
                "O=C1CCCN1c1ccc(Br)cc1",
                "Cc1ncc(C(=O)O)c(N)n1",
                "O=C1C=CC(=O)C(=O)N1",
                "CC(=O)NC1CCCCC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)C=C1",
                "C1CCC(CC1)C(=O)N1CCNCC1",
                "CC(C)(C)OC(=O)Nc1ccc(Cl)cc1",
                "O=C(O)c1ccccc1C(=O)Oc1ccccc1",
                "CN1CCN(CC1)C(=O)c1ccc(F)cc1",
                "CC1(C)OC(=O)NC1=O",
                "O=C1CCCN1c1ccc(Br)cc1",
                "COc1ccc(C=O)cc1OC",
                "CC(=O)NC1CCCCC1",
                "Cc1ncc(C(=O)O)c(N)n1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0072383880615234375,
            "chemical_diversity": 0.8907036693427621,
            "average_molecular_weight": 184.33069999999998,
            "api_call_time": 10.010908842086792
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC[C@@H](CCO)NCC1(O)CCC1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC[C@@H](CO)NCC1(O)CCC1",
                "CC[C@@H](CCO)NCC1(O)CCCCC1",
                "CC[C@@H](CCCO)NCC1(O)CCC1",
                "CC[C@@H](CCO)NCC1(O)CCC1",
                "CCC[C@@H](CCO)NCC1(O)CCC1",
                "CC[C@@H](CCO)NCC1(O)CCOCC1",
                "CC[C@@H](CCO)NCC1(OC)CCC1",
                "CC[C@@H](CCO)NC(C)C1(O)CCC1",
                "CC[C@@H](CCO)NCC1(O)CC1",
                "CC[C@@H](CCO)NCC1(O)CCCC1"
            ],
            "total_raw_response_smiles": [
                "CC[C@@H](CCO)NCC1(O)CCC1",
                "CC[C@@H](CCO)NCC1(O)CCCC1",
                "CC[C@@H](CCO)NCC1(O)CCCCC1",
                "CCC[C@@H](CCO)NCC1(O)CCC1",
                "CC[C@@H](CCCO)NCC1(O)CCC1",
                "CC[C@@H](CO)NCC1(O)CCC1",
                "CC[C@@H](CCO)NC(C)C1(O)CCC1",
                "CC[C@@H](CCO)NCC1(O)CC1",
                "CC[C@@H](CCO)NCC1(O)CCOCC1",
                "CC[C@@H](CCO)NCC1(OC)CCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0064089298248291016,
            "chemical_diversity": 0.34664847247470487,
            "average_molecular_weight": 197.29909999999992,
            "api_call_time": 8.022521257400513
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC[C@@H](CCO)NCC1(O)CCC1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1cc(C=O)ccc1O",
                "O=C1NC(=O)C(c2ccccc2)=C1Nc1ccc(Cl)cc1",
                "Cc1nnc(SCC(=O)Nc2cccc(Cl)c2)n1C",
                "CCN(CC)CCNC(=O)c1cc(Cl)c(N)cc1OC",
                "N#Cc1ccc(C(=O)Nc2ccccc2)cc1",
                "O=C1CCc2ccc(Oc3ccc(Br)cc3)cc2N1",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "CC1=NN(c2ccc(S(=O)(=O)N(C)C)cc2)C(=O)C1",
                "CC(C)(C)OC(=O)N1CCC(N2C(=O)c3ccccc3C2=O)CC1",
                "O=C(O)c1ccc(NC(=O)c2cccs2)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1Nc1ccc(Cl)cc1",
                "C1CC(=O)NC2=C1C=CC(=C2)Oc1ccc(Br)cc1",
                "CC(C)(C)OC(=O)N1CCC(CC1)N1C(=O)c2ccccc2C1=O",
                "O=C(Nc1ccccc1)c1ccc(C#N)cc1",
                "COc1cc(C=O)ccc1O",
                "CC1=NN(C(=O)C1)c1ccc(S(=O)(=O)N(C)C)cc1",
                "Cc1nnc(SCC(=O)Nc2cccc(Cl)c2)n1C",
                "O=C(O)c1ccc(NC(=O)c2cccs2)cc1",
                "CCN(CC)CCNC(=O)c1cc(Cl)c(N)cc1OC",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010584831237792969,
            "chemical_diversity": 0.8794371930820944,
            "average_molecular_weight": 268.31510000000003,
            "api_call_time": 16.118115663528442
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC[C@@H](CCO)NCC1(O)CCC1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC[C@@H](CCS)NCC1(O)CCC1",
                "CC[C@@H](CCO)NCC1(O)CCSC1",
                "CC[C@@H](CCO)NCC1(O)CCO1",
                "CC[C@@H](CCO)NCC1(O)CCS1",
                "CC[C@@H](CCO)NCC1(O)CCC1",
                "CC[C@@H](CCO)NCC1(O)CCOC1",
                "CC[C@@H](CCO)NCC1(O)CCNC1",
                "CC[C@@H](CCO)NCC1(O)CCCC1",
                "CC[C@@H](CCO)NCC1(S)CCC1",
                "CC[C@@H](CCO)NCC1(O)CCN1"
            ],
            "total_raw_response_smiles": [
                "CC[C@@H](CCO)NCC1(O)CCC1",
                "CC[C@@H](CCO)NCC1(O)CCN1",
                "CC[C@@H](CCO)NCC1(O)CCO1",
                "CC[C@@H](CCO)NCC1(O)CCS1",
                "CC[C@@H](CCO)NCC1(O)CCCC1",
                "CC[C@@H](CCO)NCC1(O)CCNC1",
                "CC[C@@H](CCO)NCC1(O)CCOC1",
                "CC[C@@H](CCO)NCC1(O)CCSC1",
                "CC[C@@H](CCO)NCC1(S)CCC1",
                "CC[C@@H](CCS)NCC1(O)CCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006527900695800781,
            "chemical_diversity": 0.4171686995172228,
            "average_molecular_weight": 200.30739999999994,
            "api_call_time": 7.040715217590332
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC[C@@H](CCO)NCC1(O)CCC1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(CN1CCCC1)NC1CCN(C(=O)c2cccs2)CC1",
                "CCOC(=O)c1ccc(CN2CCOCC2)cc1",
                "CC(C)CC(NC(=O)c1ccco1)C(=O)N1CCSCC1",
                "CC(C)C(=O)N1CCC(CNc2nccs2)(C(=O)N2CCOCC2)CC1",
                "CCOC(=O)C1CCCN(C(=O)Nc2cccc(C#N)c2)C1",
                "O=C(NCc1ccncc1)C1CCCN(C(=O)c2ccccc2)C1",
                "CC(C)(C)OC(=O)N1CCC(O)(CN2CCOCC2)CC1",
                "CC1(C)CC(=O)N(Cc2ccc(F)cc2)C(=O)C1",
                "COc1ccc(CNC(=O)C2CCN(C(=O)C3CCCO3)CC2)cc1",
                "O=C(Nc1ccc(Cl)cc1)N1CCC(CNS(=O)(=O)c2ccccc2)CC1"
            ],
            "total_raw_response_smiles": [
                "CCOC(=O)c1ccc(CN2CCOCC2)cc1",
                "CC(C)(C)OC(=O)N1CCC(O)(CN2CCOCC2)CC1",
                "O=C(NCc1ccncc1)C1CCCN(C(=O)c2ccccc2)C1",
                "CC(C)C(=O)N1CCC(CNc2nccs2)(C(=O)N2CCOCC2)CC1",
                "O=C(CN1CCCC1)NC1CCN(C(=O)c2cccs2)CC1",
                "CC1(C)CC(=O)N(Cc2ccc(F)cc2)C(=O)C1",
                "COc1ccc(CNC(=O)C2CCN(C(=O)C3CCCO3)CC2)cc1",
                "CC(C)CC(NC(=O)c1ccco1)C(=O)N1CCSCC1",
                "O=C(Nc1ccc(Cl)cc1)N1CCC(CNS(=O)(=O)c2ccccc2)CC1",
                "CCOC(=O)C1CCCN(C(=O)Nc2cccc(C#N)c2)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012855052947998047,
            "chemical_diversity": 0.803130645679239,
            "average_molecular_weight": 319.0465000000001,
            "api_call_time": 16.412724494934082
        }
    ],
    "C[C@H](CNC(=O)[C@@H]1C[C@@H]1F)C(=O)O": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](CNC(=O)[C@@H]1C[C@@H]1F)C(=O)O', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1O)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@H]1F)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1I)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1C)C(=O)O",
                "C[C@H](CNC(=O)C1CC1)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1Cl)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1Br)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1N)C(=O)O",
                "C[C@@H](CNC(=O)[C@@H]1C[C@@H]1F)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1CF)C(=O)O"
            ],
            "total_raw_response_smiles": [
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1Cl)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1Br)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1I)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1O)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1N)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1C)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1CF)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1[H])C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@H]1F)C(=O)O",
                "C[C@@H](CNC(=O)[C@@H]1C[C@@H]1F)C(=O)O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00607752799987793,
            "chemical_diversity": 0.31434387396752983,
            "average_molecular_weight": 206.42349999999996,
            "api_call_time": 11.740616083145142
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](CNC(=O)[C@@H]1C[C@@H]1F)C(=O)O', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ccc(F)cc1C(=O)Nc1ccccc1",
                "COc1ccc(CNC(=O)c2ccccn2)cc1",
                "O=C(Cc1ccccc1)Nc1ccc(Br)cc1",
                "O=C(Nc1ccccc1)c1csc(C(F)(F)F)n1",
                "CC1=NN(c2ccccc2)C(=O)C1NC(=O)c1ccco1",
                "NC(=O)c1ccn(Cc2ccccc2)c(=O)c1",
                "NC(=O)c1ccccc1Nc1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)Nc1ncc(C(=O)O)s1",
                "O=C(Nc1ccccc1)c1ccc(C(F)(F)F)cc1",
                "Cc1ccc(NC(=O)c2ccc(F)cc2)cc1"
            ],
            "total_raw_response_smiles": [
                "NC(=O)C1=CC=CC=C1NC1=CC=C(Cl)C=C1",
                "CC1=C(C(=O)NC2=CC=CC=C2)C=C(F)C=C1",
                "O=C(NC1=CC=CC=C1)C1=CC=C(C(F)(F)F)C=C1",
                "CC1=CC=C(NC(=O)C2=CC=C(F)C=C2)C=C1",
                "O=C(CC1=CC=CC=C1)NC1=CC=C(Br)C=C1",
                "COC1=CC=C(CNC(=O)C2=CC=CC=N2)C=C1",
                "NC(=O)C1=CC(=O)N(CC2=CC=CC=C2)C=C1",
                "CC(C)(C)OC(=O)NC1=NC=C(C(=O)O)S1",
                "O=C(NC1=CC=CC=C1)C1=CSC(=N1)C(F)(F)F",
                "CC1=NN(C2=CC=CC=C2)C(=O)C1NC(=O)C1=CC=CO1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009692668914794922,
            "chemical_diversity": 0.766039078291788,
            "average_molecular_weight": 253.09379999999996,
            "api_call_time": 15.197548151016235
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](CNC(=O)[C@@H]1C[C@@H]1F)C(=O)O', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1O)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1I)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1C)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1S)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1Cl)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1Br)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1N)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1C#N)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1[N+](=O)[O-])C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1P)C(=O)O"
            ],
            "total_raw_response_smiles": [
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1Cl)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1Br)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1I)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1O)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1N)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1C)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1C#N)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1S)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1P)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1[N+](=O)[O-])C(=O)O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006227731704711914,
            "chemical_diversity": 0.327746007018786,
            "average_molecular_weight": 213.02939999999995,
            "api_call_time": 11.66283392906189
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](CNC(=O)[C@@H]1C[C@@H]1F)C(=O)O', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1cc(C=CC(=O)CC(=O)Nc2ccc(F)cc2)ccc1O",
                "Cc1nc(NCc2ccccc2)nc2ccccc12",
                "CC(C)(C)c1ccc(C(=O)N2CCN(C(=O)c3ccc(Cl)cc3)CC2)cc1",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "CC[C@]12CC[C@@H]3c4ccc(O)cc4CC[C@H]3[C@@H]1CC[C@@H]2O",
                "CC(C)C[C@H](NC(=O)[C@@H](Cc1ccccc1)NC(=O)c1cnccn1)C(=O)N[C@@H](Cc1ccc(O)cc1)C(=O)N1CCCC1C(=O)O",
                "O=C1NC(=O)C(CCc2ccccc2)S1",
                "Cn1c(=O)c2c(ncn2CC(=O)N2CCC(C(=O)N3CCOCC3)CC2)n(C)c1=O",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(N)cc2)CC1",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)c1ccc(C(=O)N2CCN(CC2)C(=O)c3ccc(Cl)cc3)cc1",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "O=C(Cn1cnc2c1c(=O)n(C)c(=O)n2C)N3CCC(CC3)C(=O)N4CCOCC4",
                "COc1cc(C=CC(=O)CC(=O)Nc2ccc(F)cc2)ccc1O",
                "Cc1nc(NCc2ccccc2)nc3ccccc13",
                "CC(C)C[C@H](NC(=O)[C@@H](Cc1ccccc1)NC(=O)c2cnccn2)C(=O)N[C@@H](Cc3ccc(O)cc3)C(=O)N4CCCC4C(=O)O",
                "O=C1NC(=O)C(CCc2ccccc2)S1",
                "CC[C@]12CC[C@H]3[C@@H](CCc4cc(O)ccc34)[C@@H]1CC[C@@H]2O",
                "CC(C)(C)OC(=O)N1CCN(CC1)C(=O)c2ccc(N)cc2",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011505842208862305,
            "chemical_diversity": 0.8630471713812922,
            "average_molecular_weight": 336.04200000000003,
            "api_call_time": 17.09681224822998
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](CNC(=O)[C@@H]1C[C@@H]1F)C(=O)O', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1O)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1I)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1C)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1S)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1Cl)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1Br)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1N)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1P)C(=O)O"
            ],
            "total_raw_response_smiles": [
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1Cl)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1Br)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1I)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1C)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1O)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1N)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1S)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1P)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1[CH3])C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1[OH])C(=O)O"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.0060427188873291016,
            "chemical_diversity": 0.29208996648512786,
            "average_molecular_weight": 214.73687499999997,
            "api_call_time": 12.495719194412231
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](CNC(=O)[C@@H]1C[C@@H]1F)C(=O)O', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCc1ccncc1)C1CCCN1C(=O)c1ccco1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCCC2)cc1)C1CC1",
                "CC(C)C1CC(=O)N(Cc2ccc(F)cc2)C1CN",
                "CC1(C)CC(=O)NC(CN2CCOCC2)C1",
                "O=C(CN1CCCC1)Nc1ccc(C(=O)N2CCOCC2)cc1",
                "O=C(O)C1CCCN(C(=O)c2cccc(F)c2)C1",
                "O=C(NC1CC1C(=O)O)c1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2cccs2)CC1",
                "CC1CN(C(=O)c2ccc(Br)cc2)CC(N)C1O",
                "CC(C)CC(NC(=O)C1CCCO1)C(=O)N1CCCC1"
            ],
            "total_raw_response_smiles": [
                "O=C(O)C1CC1NC(=O)c1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2cccs2)CC1",
                "O=C(NCc1ccncc1)C1CCCN1C(=O)c1ccco1",
                "CC1(C)CC(=O)NC(CN2CCOCC2)C1",
                "O=C(CN1CCCC1)Nc1ccc(C(=O)N2CCOCC2)cc1",
                "CC(C)C1CC(=O)N(Cc2ccc(F)cc2)C1CN",
                "O=C(O)C1CCCN(C(=O)c2cccc(F)c2)C1",
                "CC1CN(C(=O)c2ccc(Br)cc2)CC(N)C1O",
                "O=C(Nc1ccc(S(=O)(=O)N2CCCC2)cc1)C1CC1",
                "CC(C)CC(NC(=O)C1CCCO1)C(=O)N1CCCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010310173034667969,
            "chemical_diversity": 0.8276053756502694,
            "average_molecular_weight": 279.8672,
            "api_call_time": 16.18034029006958
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](CNC(=O)[C@@H]1C[C@@H]1F)C(=O)O', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1O)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@H]1F)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1I)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1C)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1Cl)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1Br)C(=O)O",
                "C[C@H](CNC(=O)C1C[C@@H]1F)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1N)C(=O)O",
                "C[C@@H](CNC(=O)[C@@H]1C[C@@H]1F)C(=O)O",
                "C[C@H](CNC(=O)[C@H]1C[C@@H]1F)C(=O)O"
            ],
            "total_raw_response_smiles": [
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1Cl)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1Br)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1I)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1O)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1N)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@@H]1C)C(=O)O",
                "C[C@H](CNC(=O)[C@@H]1C[C@H]1F)C(=O)O",
                "C[C@H](CNC(=O)C1C[C@@H]1F)C(=O)O",
                "C[C@H](CNC(=O)[C@H]1C[C@@H]1F)C(=O)O",
                "C[C@@H](CNC(=O)[C@@H]1C[C@@H]1F)C(=O)O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0060193538665771484,
            "chemical_diversity": 0.2538829151732378,
            "average_molecular_weight": 206.8198,
            "api_call_time": 10.688371658325195
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](CNC(=O)[C@@H]1C[C@@H]1F)C(=O)O', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H](CNC(=O)C1CCC(Br)C1)C(=O)O",
                "C[C@H](CNC(=O)C1CC=CC1)C(=O)O",
                "C[C@H](CNC(=O)C1CCCNC1)C(=O)O",
                "C[C@H](CNC(=O)C1CCC(F)C1)C(=O)O",
                "C[C@H](CNC(=O)C1CCC(Cl)C1)C(=O)O",
                "C[C@H](CNC(=O)C1CCCC1)C(=O)O",
                "C[C@H](CNC(=O)c1ccccc1)C(=O)O",
                "C[C@H](CNC(=O)C1CCCO1)C(=O)O",
                "C[C@H](CNC(=O)C1CCCCC1)C(=O)O",
                "C[C@H](CNC(=O)C1CCCS1)C(=O)O"
            ],
            "total_raw_response_smiles": [
                "C[C@H](CNC(=O)C1CCCCC1)C(=O)O",
                "C[C@H](CNC(=O)c1ccccc1)C(=O)O",
                "C[C@H](CNC(=O)C1CCCC1)C(=O)O",
                "C[C@H](CNC(=O)C1CCCO1)C(=O)O",
                "C[C@H](CNC(=O)C1CCCS1)C(=O)O",
                "C[C@H](CNC(=O)C1CCCNC1)C(=O)O",
                "C[C@H](CNC(=O)C1CC=CC1)C(=O)O",
                "C[C@H](CNC(=O)C1CCC(F)C1)C(=O)O",
                "C[C@H](CNC(=O)C1CCC(Cl)C1)C(=O)O",
                "C[C@H](CNC(=O)C1CCC(Br)C1)C(=O)O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006957292556762695,
            "chemical_diversity": 0.44710379810675016,
            "average_molecular_weight": 217.88479999999998,
            "api_call_time": 9.990164518356323
        }
    ],
    "OC1[C@H]2CC[C@H]1CN(C1CC1)C2": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'OC1[C@H]2CC[C@H]1CN(C1CC1)C2', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "OC1[C@H]2CC[C@H]1CNC2",
                "OC1[C@H]2CC[C@H]1CN(C1CC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCC1)C2",
                "NC1[C@H]2CC[C@H]1CN(C1CC1)C2",
                "OC1[C@H]2CCC[C@H]1CN(C1CC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCCC1)C2",
                "OC1[C@@H]2CC[C@@H]1CN(C1CC1)C2",
                "OC1[C@H]2CCCC[C@H]1CN(C1CC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCCCC1)C2",
                "CN1C[C@@H]2CC[C@@H](C1)C2O"
            ],
            "total_raw_response_smiles": [
                "OC1[C@H]2CC[C@H]1CN(C1CC1)C2",
                "OC1[C@@H]2CC[C@@H]1CN(C1CC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCCCC1)C2",
                "OC1[C@H]2CCC[C@H]1CN(C1CC1)C2",
                "OC1[C@H]2CCCC[C@H]1CN(C1CC1)C2",
                "OC1[C@H]2CC[C@H]1CNC2",
                "OC1[C@H]2CC[C@H]1CN(C)C2",
                "NC1[C@H]2CC[C@H]1CN(C1CC1)C2"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008990764617919922,
            "chemical_diversity": 0.39615409514443345,
            "average_molecular_weight": 173.16759999999996,
            "api_call_time": 10.230990171432495
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'OC1[C@H]2CC[C@H]1CN(C1CC1)C2', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)Oc1ccc(CNC(=O)C2CC(=O)N(C)C2)cc1",
                "Cc1nc(SCC(=O)N2CCN(C(=O)C3CC3)CC2)c(C)s1",
                "O=C(NCCC1CCNCC1)c1ccc(Cl)cc1",
                "CC(C)C(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "Cn1cnc(C2=NNC(=O)C3(CCOCC3)N2)c1",
                "Cc1cc(C)n(CC(O)CNC2CCCCC2)n1",
                "COc1ccc(CC(=O)N2CCN(C)CC2)cc1OC",
                "O=C(CN1CCOCC1)Nc1cccc(C(F)(F)F)c1",
                "CCN(CC)CCNC(=O)c1ccc(N)c(Cl)c1",
                "CC(C)(C)NCC(O)c1ccccc1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)NCC(O)c1ccccc1",
                "O=C(NCCC1CCNCC1)c1ccc(Cl)cc1",
                "COc1ccc(CC(=O)N2CCN(C)CC2)cc1OC",
                "CC(C)C(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "Cc1nc(SCC(=O)N2CCN(C(=O)C3CC3)CC2)c(C)s1",
                "O=C(CN1CCOCC1)Nc1cccc(C(F)(F)F)c1",
                "Cn1cnc(C2=NNC(=O)C3(CCOCC3)N2)c1",
                "CC(C)Oc1ccc(CNC(=O)C2CC(=O)N(C)C2)cc1",
                "CCN(CC)CCNC(=O)c1ccc(N)c(Cl)c1",
                "Cc1cc(C)n(CC(O)CNC2CCCCC2)n1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010274648666381836,
            "chemical_diversity": 0.856470111160381,
            "average_molecular_weight": 273.93469999999996,
            "api_call_time": 17.915183544158936
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'OC1[C@H]2CC[C@H]1CN(C1CC1)C2', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "OC1[C@H]2CC[C@H]1CNC2",
                "OC1[C@H]2CC[C@H]1CN(C1CC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CC1CCCC1)C2",
                "NC1[C@H]2CC[C@H]1CN(C1CC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CC1CC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CC1CCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CC1CCCCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCCCC1)C2"
            ],
            "total_raw_response_smiles": [
                "OC1[C@H]2CC[C@H]1CN(C1CC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCCCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CC1CC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CC1CCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CC1CCCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CC1CCCCC1)C2",
                "OC1[C@H]2CC[C@H]1CNC2",
                "NC1[C@H]2CC[C@H]1CN(C1CC1)C2"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00826883316040039,
            "chemical_diversity": 0.49034325636259424,
            "average_molecular_weight": 185.59029999999993,
            "api_call_time": 9.157610416412354
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'OC1[C@H]2CC[C@H]1CN(C1CC1)C2', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)OC(=O)NCCNC1=NNC(=O)CC1",
                "O=C(O)c1ccc(N2C(=O)c3ccccc3C2=O)cc1",
                "COc1cc(C=C2C(=O)NC(=O)N(C)C2=O)ccc1O",
                "COc1ccc(C=NNC(=O)c2ccncc2)cc1O",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "CC(C)(C)NCC(O)COc1cccc2c1OC(C)(C)C2",
                "Cc1nnc(SCC(=O)N2CCN(C(=O)C3CC3)CC2)n1C",
                "CC1(C)CC(N2CCOCC2)CC(C)(CN)C1",
                "CCN(CC)CCNC(=O)c1ccc(Cl)c(Cl)c1",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "COc1ccc(C=NNC(=O)c2ccncc2)cc1O",
                "CC1(C)CC(N2CCOCC2)CC(C)(CN)C1",
                "O=C(O)c1ccc(N2C(=O)c3ccccc3C2=O)cc1",
                "CCN(CC)CCNC(=O)c1ccc(Cl)c(Cl)c1",
                "CC(C)(C)OC(=O)NCCNC1=NNC(=O)CC1",
                "Cc1nnc(SCC(=O)N2CCN(C(=O)C3CC3)CC2)n1C",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "COc1cc(C=C2C(=O)NC(=O)N(C)C2=O)ccc1O",
                "CC1(C)Cc2cccc(OCC(O)CNC(C)(C)C)c2O1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010719537734985352,
            "chemical_diversity": 0.8876706815146099,
            "average_molecular_weight": 275.41060000000004,
            "api_call_time": 14.986186265945435
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'OC1[C@H]2CC[C@H]1CN(C1CC1)C2', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "OC1[C@H]2CC[C@H]1CN(CCC1CCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CC1CCCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CCC1CC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CC1CC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CC1CCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CC1CCCCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCCCCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCCCC1)C2"
            ],
            "total_raw_response_smiles": [
                "OC1[C@H]2CC[C@H]1CN(C1CCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCCCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCCCCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CC1CC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CC1CCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CC1CCCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CC1CCCCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CCC1CC1)C2",
                "OC1[C@H]2CC[C@H]1CN(CCC1CCC1)C2"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008505105972290039,
            "chemical_diversity": 0.41168970761885704,
            "average_molecular_weight": 202.31949999999992,
            "api_call_time": 10.122810363769531
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'OC1[C@H]2CC[C@H]1CN(C1CC1)C2', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(SCC(=O)Nc2ccc(C(=O)O)cc2)s1",
                "O=C(CN1CCOCC1)Nc1ccc(N2C(=O)CSC2=O)cc1",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2cccs2)CC1",
                "Cc1ccc(S(=O)(=O)N2CCN(C(=O)C3CCCCC3)CC2)cc1",
                "CC1(C)CC(=O)c2c(nc(S)n(-c3ccccc3)c2=O)C1",
                "CC(=O)N1CCN(C(=O)c2ccc(Cl)cc2)CC1",
                "Cc1cc(C)n2nc(SC(C)(C)C(=O)Nc3ccccc3)nc2n1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "COc1ccc(C(=O)N2CCN(C(=O)C3CC3)CC2)cc1OC",
                "O=C(CSc1nccs1)Nc1ccc(N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)N1CCN(C(=O)c2ccc(Cl)cc2)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "COc1ccc(C(=O)N2CCN(C(=O)C3CC3)CC2)cc1OC",
                "CC1(C)CC(=O)C2=C(C1)N=C(S)N(c1ccccc1)C2=O",
                "Cc1nnc(SCC(=O)Nc2ccc(C(=O)O)cc2)s1",
                "O=C(CSc1nccs1)Nc1ccc(N2CCOCC2)cc1",
                "Cc1cc(C)n2nc(SC(C)(C)C(=O)Nc3ccccc3)nc2n1",
                "O=C(CN1CCOCC1)Nc1ccc(N2C(=O)CSC2=O)cc1",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2cccs2)CC1",
                "Cc1ccc(S(=O)(=O)N2CCN(C(=O)C3CCCCC3)CC2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011049985885620117,
            "chemical_diversity": 0.8011566257766582,
            "average_molecular_weight": 319.0380000000001,
            "api_call_time": 15.562117338180542
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'OC1[C@H]2CC[C@H]1CN(C1CC1)C2', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "OC1[C@H]2CC[C@H]1CN(C1COC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CS1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCN1)C2",
                "OC1[C@@H]2CC[C@H]1CN(C1CC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCO1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CNC1)C2",
                "OC1[C@H]2CC[C@H]1ON(C1CCC1)C2"
            ],
            "total_raw_response_smiles": [
                "OC1[C@H]2CC[C@H]1CN(C1CC1)C2",
                "OC1[C@@H]2CC[C@H]1CN(C1CC1)C2",
                "OC1[C@H]2CC[C@@H]1CN(C1CC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CNC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1COC1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CS1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCO1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCN1)C2",
                "OC1[C@H]2CC[C@H]1CN(C1CCC1)O2"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.008037090301513672,
            "chemical_diversity": 0.4662704485000865,
            "average_molecular_weight": 179.48466666666664,
            "api_call_time": 10.113689661026001
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'OC1[C@H]2CC[C@H]1CN(C1CC1)C2', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "OC1CCC(C2CCCN2)CC1",
                "C1CCC2(CC1)SCCS2",
                "C1CCC2(CC1)NCCS2",
                "OC1CCCC(C2CCCS2)C1",
                "O=C1NCCC2CCCCC12",
                "NC1CCCC(C2CCCS2)C1",
                "NC1CCCC(C2CCCO2)C1",
                "NC1CCC(C2CCCO2)CC1",
                "O=C1NC(=O)C2CCCCC2N1",
                "C1CCC2(CC1)OCCO2"
            ],
            "total_raw_response_smiles": [
                "NC1CCCC(C2CCCO2)C1",
                "O=C1NC2CCCCC2C(=O)N1",
                "C1CCC2(CC1)OCCO2",
                "C1CCC2(CC1)NCCS2",
                "OC1CCCC(C2CCCS2)C1",
                "NC1CCC(C2CCCO2)CC1",
                "OC1CCC(C2CCCN2)CC1",
                "O=C1NCCC2CCCCC12",
                "C1CCC2(CC1)SCCS2",
                "NC1CCCC(C2CCCS2)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006080150604248047,
            "chemical_diversity": 0.8349207481060381,
            "average_molecular_weight": 167.46949999999998,
            "api_call_time": 7.79805588722229
        }
    ],
    "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@H]1CO",
                "C#CC(=O)N[C@@H]1C(=O)NCCC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)N(C)CC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1Br",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1CC",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1F",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@H]1C",
                "C#CC(=O)N[C@H]1C(=O)NCC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1Cl"
            ],
            "total_raw_response_smiles": [
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@H]1C",
                "C#CC(=O)N[C@H]1C(=O)NCC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1CC",
                "C#CC(=O)N[C@@H]1C(=O)NC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCCC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)N(C)CC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@H]1CO",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1F",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1Cl",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1Br"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006489276885986328,
            "chemical_diversity": 0.3685026874679107,
            "average_molecular_weight": 193.53729999999996,
            "api_call_time": 11.374784708023071
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(Nc1ccccc1)c1ccc(C(=O)N2CCNCC2)cc1",
                "COc1ccc(C(c2ccc(Cl)cc2)n2ccnc2)cc1",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "Cc1c(Nc2ccc(F)cc2)c(=O)c2c(=O)n(C)c(=O)c=2c1=O",
                "COc1cc2c(N)nc(N)nc2cc1Cl",
                "Cc1cc(=O)[nH]c2cc(OCc3ccccc3)ccc12",
                "Nc1nc(=O)c2ncn(C3OC(CO)C(O)C3O)c2[nH]1",
                "CCOC(=O)c1ccc(NC(=O)c2ccc(Cl)c(Cl)c2)cc1",
                "Cc1nnc(SCc2ccccc2)n1-c1ccc(Cl)cc1",
                "Cc1ncsc1C(=O)Nc1ccc(C(N)=O)cc1"
            ],
            "total_raw_response_smiles": [
                "NC1=NC(=O)C2=C(N1)N(C=N2)C1OC(CO)C(O)C1O",
                "CC1=C(C(=O)C2=C(C1=O)C(=O)N(C2=O)C)NC1=CC=C(C=C1)F",
                "CCOC(=O)C1=CC=C(C=C1)NC(=O)C1=CC(=C(C=C1)Cl)Cl",
                "CC1=NN=C(N1C1=CC=C(C=C1)Cl)SCC1=CC=CC=C1",
                "O=C1NC(=O)C(N1)(C1=CC=CC=C1)C1=CC=CC=C1",
                "COC1=C(C=C2C(=C1)C(=NC(=N2)N)N)Cl",
                "CC1=CC(=O)NC2=C1C=CC(=C2)OCC1=CC=CC=C1",
                "O=C(NC1=CC=CC=C1)C1=CC=C(C=C1)C(=O)N1CCNCC1",
                "CC1=C(SC=N1)C(=O)NC1=CC=C(C=C1)C(=O)N",
                "COC1=CC=C(C=C1)C(C1=CC=C(C=C1)Cl)N1C=CN=C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010028600692749023,
            "chemical_diversity": 0.8700777595588283,
            "average_molecular_weight": 286.3219000000001,
            "api_call_time": 18.45732045173645
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1CF",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1I",
                "C#CC(=O)N[C@@H]1C(=O)NC(C)C[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)N(C)CC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1Br",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1CC",
                "C#CC(=O)N[C@@H]1C(=O)NCCC[C@@H]1CO",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1Cl",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1O"
            ],
            "total_raw_response_smiles": [
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)N(C)CC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCCC[C@@H]1CO",
                "C#CC(=O)N[C@@H]1C(=O)NC(C)C[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1CC",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1CF",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1Cl",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1Br",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1I",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0066640377044677734,
            "chemical_diversity": 0.4095945977575397,
            "average_molecular_weight": 209.12949999999995,
            "api_call_time": 10.452035665512085
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1NC(=O)c2cc(Cl)ccc21",
                "Cc1ccc(C(=O)Nc2ccccc2)cc1",
                "COc1ccc(CC(=O)NO)cc1",
                "CC1=NN(c2ccccc2)C(=O)C1",
                "CCCCOC(=O)C(C)NC(=O)OC(C)(C)C",
                "CCOC(=O)C(NC(=O)C(C)C)C(C)C",
                "CCOC(=O)c1ccc(N)cc1",
                "Cc1cc(=O)n(-c2ccc(F)cc2)[nH]1",
                "CC(C)(C)OC(=O)NCCCCCCN",
                "O=C(O)CCCCCCC(=O)NCO"
            ],
            "total_raw_response_smiles": [
                "CC1=CC=C(C=C1)C(=O)NC2=CC=CC=C2",
                "CCOC(=O)C1=CC=C(C=C1)N",
                "O=C1NC(=O)C2=C1C=CC(=C2)Cl",
                "CC(C)(C)OC(=O)NCCCCCCN",
                "COC1=CC=C(C=C1)CC(=O)NO",
                "CC1=NN(C(=O)C1)C2=CC=CC=C2",
                "CCCCOC(=O)C(C)NC(=O)OC(C)(C)C",
                "O=C(CCCCCCC(=O)O)NCO",
                "CC1=CC(=O)N(N1)C2=CC=C(C=C2)F",
                "CCOC(=O)C(C(C)C)NC(=O)C(C)C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00716400146484375,
            "chemical_diversity": 0.860702916213403,
            "average_molecular_weight": 198.57959999999997,
            "api_call_time": 12.544132232666016
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C#CC(=O)N[C@@H]1C(=O)NCCC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1CC",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1CCC",
                "C#CCC(=O)N[C@@H]1C(=O)NCC[C@@H]1C",
                "CCC#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C",
                "CC#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCCCC[C@@H]1C"
            ],
            "total_raw_response_smiles": [
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCCC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCCCC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1CC",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1CCC",
                "CC#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C",
                "CCC#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C",
                "C#CCC(=O)N[C@@H]1C(=O)NCC[C@@H]1C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0033626556396484375,
            "chemical_diversity": 0.3597220612335158,
            "average_molecular_weight": 192.83129999999997,
            "api_call_time": 11.54824161529541
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1NC(=O)N(c2ccccc2)C1Cc1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(F)cc2)CC1",
                "CC(C)Cn1cnc(C(=O)N2CCN(c3ccccc3)CC2)c1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(F)(F)F)cc2)o1",
                "COc1ccc(C2=NNC(=O)C3(CCOCC3)N2)cc1OC",
                "Cc1cc(C(=O)N2CCOC[C@H]2Cc2ccccc2)no1",
                "Cc1ccc(NC(=O)C2CCN(C(=O)c3cccs3)CC2)cc1",
                "CC1(C)CC(=O)NC(NC(=O)c2ccco2)C1",
                "N#Cc1ccc(C(=O)NCc2cccs2)cc1Cl",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)C1CCCO1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(Cc2ccc(Cl)cc2)N1c1ccccc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(F)cc2)CC1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(F)(F)F)cc2)o1",
                "O=C(NCc1cccs1)c1ccc(C#N)c(Cl)c1",
                "COc1ccc(C2=NNC(=O)C3(CCOCC3)N2)cc1OC",
                "CC1(C)CC(=O)NC(NC(=O)c2ccco2)C1",
                "Cc1cc(C(=O)N2CCOC[C@H]2Cc2ccccc2)no1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)C1CCCO1",
                "CC(C)Cn1cnc(C(=O)N2CCN(c3ccccc3)CC2)c1",
                "Cc1ccc(NC(=O)C2CCN(C(=O)c3cccs3)CC2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.01190638542175293,
            "chemical_diversity": 0.8387938638261747,
            "average_molecular_weight": 302.6356,
            "api_call_time": 16.848068475723267
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C#CC(=O)N[C@@H]1C(=O)NCCC1C",
                "CCC(=O)N[C@@H]1C(=O)NCC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1N",
                "C=CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1CC",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@H]1C",
                "C#CC(=O)N[C@H]1C(=O)NCC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=N)NCC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1O"
            ],
            "total_raw_response_smiles": [
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@H]1C",
                "C#CC(=O)N[C@H]1C(=O)NCC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=O)NCCC1C",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1CC",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1N",
                "C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1O",
                "C=CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C",
                "CCC(=O)N[C@@H]1C(=O)NCC[C@@H]1C",
                "C#CC(=O)N[C@@H]1C(=N)NCC[C@@H]1C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006549835205078125,
            "chemical_diversity": 0.3785385882084039,
            "average_molecular_weight": 181.00939999999997,
            "api_call_time": 10.889773845672607
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CC(=O)N[C@@H]1C(=O)NCC[C@@H]1C', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C#CC(=O)NC1CNCCN1",
                "C#CC(=O)NC1CCOC1",
                "C#CC(=O)NC1CCCCC1",
                "C#CC(=O)Nc1ccccc1",
                "C#CC(=O)N1CCOCC1",
                "C#CC(=O)NC1=NCCS1",
                "C#CC(=O)NC1CSCCN1",
                "C#CC(=O)NC1CCNCC1",
                "C#CC(=O)NC1COCCO1",
                "C#CC(=O)NC1CCSC1"
            ],
            "total_raw_response_smiles": [
                "C#CC(=O)N1CCOCC1",
                "C#CC(=O)Nc1ccccc1",
                "C#CC(=O)NC1CCCCC1",
                "C#CC(=O)NC1=NCCS1",
                "C#CC(=O)NC1CCNCC1",
                "C#CC(=O)NC1CCOC1",
                "C#CC(=O)NC1CCSC1",
                "C#CC(=O)NC1CNCCN1",
                "C#CC(=O)NC1COCCO1",
                "C#CC(=O)NC1CSCCN1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004866600036621094,
            "chemical_diversity": 0.6482430788895315,
            "average_molecular_weight": 151.48659999999995,
            "api_call_time": 7.225780725479126
        }
    ],
    "CC(=O)NOCc1cnn(C)n1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)NOCc1cnn(C)n1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 7,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(=O)NOCc1cnn(C)c1",
                "CC(=O)NOCc1ncn(C)n1",
                "CC(=O)NOCc1cnn(C)n1",
                "CCC(=O)NOCc1cnn(C)n1",
                "CC(=O)NOCc1ccn(C)n1",
                "CC(=O)NOCc1cnn(C(C)C)n1",
                "CCn1ncc(CONC(C)=O)n1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)NOCc1cnn(C)n1",
                "CC(=O)NOCc1cnn(CC)n1",
                "CC(=O)NOCc1cnn(C(C)C)n1",
                "CCC(=O)NOCc1cnn(C)n1",
                "CC(=O)NOCc1cnn(C)c1",
                "CC(=O)NOCc1ccn(C)n1",
                "CC(=O)NOCc1cnn(C)n1C",
                "CC(=O)NOCc1ncn(C)n1",
                "CC(=O)NOCc1cnn(C)n1CC",
                "CC(=O)NOcc1cnn(C)n1"
            ],
            "validity_ratio": 0.7,
            "post_processing_time": 0.005244731903076172,
            "chemical_diversity": 0.4638100511886928,
            "average_molecular_weight": 177.90514285714283,
            "api_call_time": 7.90786337852478
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)NOCc1cnn(C)n1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(SCC(=O)Nc2ccc(C(=O)O)cc2)s1",
                "O=C(O)c1cccnc1Nc1cccc(C(F)(F)F)c1",
                "COc1cc(OC)c(C(=O)NC2CCN(Cc3ccccc3)CC2)cc1OC",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(F)cc2)CC1",
                "COc1ccc(C2C(C#N)=C(N)OC3=C2C(=O)CC(C)(C)C3)cc1OC",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cncs1",
                "CC(C)Cn1cnc(C(=O)Nc2ccc(N3CCN(C)CC3)cc2)c1",
                "CC1(C)CC(=O)C2=C(C1)N=C(S)NC2c1ccc(Cl)cc1",
                "Cc1cc(C)n(-c2ccc(C(=O)NCCCN3CCOCC3)cc2)n1",
                "O=c1[nH]cc(-c2ccccc2)c(=O)[nH]1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=CN1",
                "COc1ccc(C2C(C#N)=C(N)OC3=C2C(=O)CC(C)(C)C3)cc1OC",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(F)cc2)CC1",
                "CC1(C)CC(=O)C2=C(C1)N=C(S)NC2c1ccc(Cl)cc1",
                "O=C(O)c1cccnc1Nc1cccc(C(F)(F)F)c1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(=O)O)cc2)s1",
                "COc1cc(OC)c(C(=O)NC2CCN(Cc3ccccc3)CC2)cc1OC",
                "Cc1cc(C)n(-c2ccc(C(=O)NCCCN3CCOCC3)cc2)n1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cncs1",
                "CC(C)Cn1cnc(C(=O)Nc2ccc(N3CCN(C)CC3)cc2)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012321949005126953,
            "chemical_diversity": 0.8567480608937174,
            "average_molecular_weight": 318.5186000000001,
            "api_call_time": 16.28690767288208
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)NOCc1cnn(C)n1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(=O)NOCc1cnn(CO)n1",
                "CC(=O)NOCc1cnn(C(C)O)n1",
                "CC(=O)NOCc1cnn(C)n1",
                "CC(=O)NOCc1cnn(CCO)n1",
                "CC(=O)NOCc1cnn(CCN)n1",
                "CCOC(=O)NOCc1cnn(C)n1",
                "CCC(=O)NOCc1cnn(C)n1",
                "CC(=O)NOCc1cnn(C(C)C)n1",
                "COC(=O)NOCc1cnn(C)n1",
                "CCn1ncc(CONC(C)=O)n1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)NOCc1cnn(C)n1",
                "CC(=O)NOCc1cnn(CC)n1",
                "CC(=O)NOCc1cnn(CO)n1",
                "CC(=O)NOCc1cnn(CCO)n1",
                "CC(=O)NOCc1cnn(CCN)n1",
                "CCC(=O)NOCc1cnn(C)n1",
                "COC(=O)NOCc1cnn(C)n1",
                "CCOC(=O)NOCc1cnn(C)n1",
                "CC(=O)NOCc1cnn(C(C)C)n1",
                "CC(=O)NOCc1cnn(C(C)O)n1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006816387176513672,
            "chemical_diversity": 0.37271974067065394,
            "average_molecular_weight": 190.89460000000003,
            "api_call_time": 6.717210531234741
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)NOCc1cnn(C)n1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)CC(=O)CC(=O)C1",
                "COc1ccc(C=NNC(=O)c2ccco2)cc1",
                "O=C(O)c1ccc(N2CCOCC2)cc1",
                "O=C1NC(=O)C(=O)N1",
                "CCN(CC)CCNC(=O)c1ccc(OC)cc1",
                "c1cc(N2CCOCC2)ccn1",
                "O=C(O)CCC(=O)c1ccc(F)cc1",
                "Nc1nc(N)c2nc[nH]c2n1",
                "Cc1nnc(SCC(=O)Nc2cccc(Cl)c2)o1",
                "CC(C)(C)C(=O)Nc1ccc(Cl)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)N1",
                "C1COCCN1c1ccncc1",
                "CC(C)(C)C(=O)Nc1ccc(Cl)cc1",
                "O=C(O)c1ccc(N2CCOCC2)cc1",
                "COc1ccc(C=NNC(=O)c2ccco2)cc1",
                "CC1(C)CC(=O)CC(=O)C1",
                "Nc1nc(N)c2nc[nH]c2n1",
                "Cc1nnc(SCC(=O)Nc2cccc(Cl)c2)o1",
                "O=C(O)CCC(=O)c1ccc(F)cc1",
                "CCN(CC)CCNC(=O)c1ccc(OC)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007873058319091797,
            "chemical_diversity": 0.8828380983810028,
            "average_molecular_weight": 196.2025,
            "api_call_time": 11.55772614479065
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)NOCc1cnn(C)n1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)C(=O)NOCc1cnn(C)n1",
                "CC(=O)NOCc1cnn(C)n1",
                "CC(=O)NOCc1cnn(CCO)n1",
                "CCCn1ncc(CONC(C)=O)n1",
                "CC(=O)NOCc1cnn(CCN)n1",
                "CCC(=O)NOCc1cnn(C)n1",
                "CC(=O)NOCc1cnn(CCS)n1",
                "CC(=O)NOCc1cnn(C(C)C)n1",
                "CC(=O)NOCc1cnn(C(C)(C)C)n1",
                "CCn1ncc(CONC(C)=O)n1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)NOCc1cnn(C)n1",
                "CCC(=O)NOCc1cnn(C)n1",
                "CC(=O)NOCc1cnn(CC)n1",
                "CC(=O)NOCc1cnn(CCC)n1",
                "CC(C)C(=O)NOCc1cnn(C)n1",
                "CC(=O)NOCc1cnn(C(C)C)n1",
                "CC(=O)NOCc1cnn(C(C)(C)C)n1",
                "CC(=O)NOCc1cnn(CCO)n1",
                "CC(=O)NOCc1cnn(CCN)n1",
                "CC(=O)NOCc1cnn(CCS)n1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007048130035400391,
            "chemical_diversity": 0.36372742995343144,
            "average_molecular_weight": 196.11790000000002,
            "api_call_time": 8.03496766090393
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)NOCc1cnn(C)n1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCc1ccco1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2=O",
                "CC1(C)OC(=O)c2c(Br)cc(N3CCOCC3)cc21",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccoc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc3ccccc3n2)CC1",
                "COc1ccc(-c2nnc(NC(=O)c3cccs3)s2)cc1OC",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(F)cc1",
                "COc1cc(NC(=O)C2=CC(=O)C(=NNc3ccccc3)S2)ccc1O",
                "Cc1cc(C(=O)NC2CCCNC2)nn1-c1ccc(Cl)cc1",
                "Cc1noc(C2=NNC(=O)Cc3ccccc32)n1",
                "CC1=C(C#N)C(=O)N(Cc2cccc(F)c2)C1c1cccs1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(F)cc1",
                "CC1(C)OC(=O)C2=C1C=C(N1CCOCC1)C=C2Br",
                "Cc1noc(C2=NNC(=O)Cc3ccccc32)n1",
                "O=C(NCc1ccco1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2=O",
                "COc1ccc(C2=NN=C(NC(=O)c3cccs3)S2)cc1OC",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc3ccccc3n2)CC1",
                "Cc1cc(C(=O)NC2CCCNC2)nn1-c1ccc(Cl)cc1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccoc1",
                "CC1=C(C#N)C(=O)N(Cc2cccc(F)c2)C1c1cccs1",
                "COc1cc(NC(=O)C2=CC(=O)C(=NNc3ccccc3)S2)ccc1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011451005935668945,
            "chemical_diversity": 0.8692609553356809,
            "average_molecular_weight": 328.5323,
            "api_call_time": 19.11397433280945
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)NOCc1cnn(C)n1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 7,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(=O)NOCc1cnn(C)c1",
                "CC(=O)NOCc1cncn1C",
                "CC(=O)NOCc1cnn(C)c1C",
                "CCC(=O)NOCc1cnn(C)n1",
                "CC(=O)NOCc1ccn(C)n1",
                "CC(=N)NOCc1cnn(C)n1",
                "CCn1ncc(CONC(C)=O)n1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)NOCc1cnn(C)c1",
                "CC(=O)NOCc1cnn(CC)n1",
                "CC(=O)NOCc1cnn(C)c1C",
                "CC(=O)NOCc1cncn1C",
                "CC(=O)NOCc1cnn(C)n1C",
                "CCC(=O)NOCc1cnn(C)n1",
                "CC(=O)NOcc1cnn(C)n1",
                "CC(=O)NOCc1ccn(C)n1",
                "CC(=N)NOCc1cnn(C)n1",
                "CC(=O)NOCc1cnn(C)s1"
            ],
            "validity_ratio": 0.7,
            "post_processing_time": 0.0056345462799072266,
            "chemical_diversity": 0.5287271846180563,
            "average_molecular_weight": 175.47842857142854,
            "api_call_time": 8.072934627532959
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)NOCc1cnn(C)n1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(=O)N1CCNCC1",
                "CC(=O)N1CCSC1",
                "CC(=O)N1CCNC1C",
                "CC(=O)N1CCOC1",
                "CC(=O)N1CCOCC1",
                "CC(=O)N1CCCCC1",
                "CC(=O)N1CCN(C)CC1",
                "CC(=O)N1CCNC1",
                "CC(=O)N1CCSCC1",
                "CC(=O)N1CCCC1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)N1CCN(C)CC1",
                "CC(=O)N1CCOCC1",
                "CC(=O)N1CCNCC1",
                "CC(=O)N1CCSCC1",
                "CC(=O)N1CCOC1",
                "CC(=O)N1CCCCC1",
                "CC(=O)N1CCSC1",
                "CC(=O)N1CCNC1",
                "CC(=O)N1CCCC1",
                "CC(=O)N1CCNC1C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004416942596435547,
            "chemical_diversity": 0.5283208543001523,
            "average_molecular_weight": 127.3765,
            "api_call_time": 5.927584886550903
        }
    ],
    "COc1cccc2c1CNCCO2": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'COc1cccc2c1CNCCO2', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1cccc2c1CNCNC2",
                "COc1cccc2c1CNCCC2",
                "COc1cccc2c1CCOCC2",
                "COc1cccc2c1CNCCN2",
                "COc1cccc2c1CCNCO2",
                "COc1cccc2c1CNCCS2",
                "COc1cccc2c1CNCNO2",
                "COc1cccc2c1CCCCO2"
            ],
            "total_raw_response_smiles": [
                "COc1cccc2c1CNCCS2",
                "COc1cccc2c1CNCCC2",
                "COc1cccc2c1CCCCO2",
                "COc1cccc2c1CCNCO2",
                "COc1cccc2c1CNCNO2",
                "COc1cccc2c1CNCCS2",
                "COc1cccc2c1CNCCF2",
                "COc1cccc2c1CNCNC2",
                "COc1cccc2c1CCOCC2",
                "COc1cccc2c1CNCCN2"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.006488323211669922,
            "chemical_diversity": 0.5391861330658354,
            "average_molecular_weight": 180.61149999999995,
            "api_call_time": 7.0627453327178955
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COc1cccc2c1CNCCO2', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3ccccc23)CC1",
                "COc1ccc(C2=NNC(=O)CS2)cc1OC",
                "CCN(CC)CCNC(=O)c1cc(Cl)c(N)cc1OC",
                "O=C(NCc1ccncc1)c1ccc2c(c1)OCO2",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Cl)cc1C2",
                "CC(C)(C)c1ccc(C(=O)N2CCOCC2)cc1",
                "Cc1cc(C)n2nc(NC(=O)c3ccco3)nc2n1",
                "COc1cc(NC(=O)Cn2cnc3ccccc32)cc(OC)c1OC",
                "O=C(Nc1ccc(F)cc1)C1CCN(Cc2ccccc2)CC1",
                "Cc1nc(SCC(=O)Nc2ccccc2)c(C#N)c(C)c1Cl"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)c1ccc(C(=O)N2CCOCC2)cc1",
                "O=C(NCc1ccncc1)c1ccc2c(c1)OCO2",
                "COc1ccc(C2=NNC(=O)CS2)cc1OC",
                "Cc1nc(SCC(=O)Nc2ccccc2)c(C#N)c(C)c1Cl",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Cl)cc1C2",
                "CCN(CC)CCNC(=O)c1cc(Cl)c(N)cc1OC",
                "Cc1cc(C)n2nc(NC(=O)c3ccco3)nc2n1",
                "O=C(Nc1ccc(F)cc1)C1CCN(Cc2ccccc2)CC1",
                "COc1cc(NC(=O)Cn2cnc3ccccc32)cc(OC)c1OC",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3ccccc23)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011529684066772461,
            "chemical_diversity": 0.8525062991518637,
            "average_molecular_weight": 288.87,
            "api_call_time": 13.666970014572144
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COc1cccc2c1CNCCO2', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1cccc2c1CNCNC2",
                "COc1cccc2c1CCSCC2",
                "COc1cccc2c1CCOCC2",
                "COc1cccc2c1CNCCN2",
                "COc1cccc2c1CCNCO2",
                "COc1cccc2c1CNNCO2",
                "COc1cccc2c1CNCCS2",
                "COc1cccc2c1CNCCO2",
                "COc1cccc2c1CCCCO2"
            ],
            "total_raw_response_smiles": [
                "COc1cccc2c1CNCCO2",
                "COc1cccc2c1CCCCO2",
                "COc1cccc2c1CCNCO2",
                "COc1cccc2c1CCOCC2",
                "COc1cccc2c1CCSCC2",
                "COc1cccc2c1CNNCO2",
                "COc1cccc2c1CNCCS2",
                "COc1cccc2c1CNCCN2",
                "COc1cccc2c1CNCNC2",
                "COc1cccc2c1CNCCF2"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.007077455520629883,
            "chemical_diversity": 0.5422701817634024,
            "average_molecular_weight": 182.3514444444444,
            "api_call_time": 6.214299201965332
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COc1cccc2c1CNCCO2', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(CSc1nccc(=O)[nH]1)Nc1ccc(F)cc1",
                "CCN(CC)CCNC(=O)c1cc(Br)cs1",
                "CC(C)NC(=O)Cn1cnc2c(N)ncnc21",
                "Cc1cc(C)n2nc(NC(=O)C3CCCO3)nc2n1",
                "CC1(C)CC(=O)C2=C(C1)Nc1[nH]ncc1C2c1ccccc1Cl",
                "Cc1noc(C)c1CN1CCCC1c1ccco1",
                "O=C(O)c1cccc(NC(=O)C2CC2)c1",
                "COc1ccc(Cn2cc(C(=O)N3CCCC3)nn2)cc1OC",
                "CC(C)(C)c1ccc(C(=O)N2CCOCC2)cc1",
                "O=C(Nc1ccc(Cl)cc1)c1ccc(N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)c1ccc(C(=O)N2CCOCC2)cc1",
                "O=C(Nc1ccc(Cl)cc1)c1ccc(N2CCOCC2)cc1",
                "Cc1noc(C)c1CN1CCCC1c1ccco1",
                "COc1ccc(Cn2cc(C(=O)N3CCCC3)nn2)cc1OC",
                "CC(C)NC(=O)Cn1cnc2c(N)ncnc21",
                "O=C(CSc1nccc(=O)[nH]1)Nc1ccc(F)cc1",
                "CCN(CC)CCNC(=O)c1cc(Br)cs1",
                "Cc1cc(C)n2nc(NC(=O)C3CCCO3)nc2n1",
                "CC1(C)CC(=O)C2=C(C1)Nc1[nH]ncc1C2c1ccccc1Cl",
                "O=C(O)c1cccc(NC(=O)C2CC2)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010688304901123047,
            "chemical_diversity": 0.8603820790929452,
            "average_molecular_weight": 273.991,
            "api_call_time": 13.098416566848755
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COc1cccc2c1CNCCO2', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1cccc2c1CNCNC2",
                "COc1cccc2c1COCCN2",
                "COc1cccc2c1CNCCN2",
                "COc1cccc2c1CNCCC2",
                "COc1cccc2c1CNCCOC2",
                "COc1cccc2c1CNCCS2",
                "COCc1cccc2c1CNCCO2",
                "CCOc1cccc2c1CNCCO2",
                "COc1cccc2c1CNCCO2"
            ],
            "total_raw_response_smiles": [
                "COc1cccc2c1CNCCO2",
                "CCOc1cccc2c1CNCCO2",
                "COCc1cccc2c1CNCCO2",
                "COc1cccc2c1CNCCOC2",
                "COc1cccc2c1COCCN2",
                "COc1cccc2c1CNCCF2",
                "COc1cccc2c1CNCCN2",
                "COc1cccc2c1CNCCS2",
                "COc1cccc2c1CNCCC2",
                "COc1cccc2c1CNCNC2"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.006439924240112305,
            "chemical_diversity": 0.5293984432216987,
            "average_molecular_weight": 185.24222222222218,
            "api_call_time": 7.54412055015564
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COc1cccc2c1CNCCO2', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1ccc(C2=NNC(=O)CS2)cc1Br",
                "COc1cc(C=NNC(N)=O)ccc1O",
                "CCN(CC)C(=O)CSc1nnc(C)s1",
                "O=C(Cn1cnc2ccccc21)N1CCOCC1",
                "O=C(NCc1ccccc1)c1ccc(F)cc1",
                "CC(=O)N1CCC(Oc2ccc(Cl)cc2)CC1",
                "CC1(C)CC(=O)NC(=S)N1",
                "Fc1ccc(-c2n[nH]c(=S)[nH]2)cc1",
                "CC(C)(C)OC(=O)N1CCN(c2nccs2)CC1",
                "Cc1noc(C)c1CN1CCOCC1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)N1CCC(Oc2ccc(Cl)cc2)CC1",
                "O=C(NCc1ccccc1)c1ccc(F)cc1",
                "COc1ccc(C2=NNC(=O)CS2)cc1Br",
                "Cc1noc(C)c1CN1CCOCC1",
                "CC(C)(C)OC(=O)N1CCN(c2nccs2)CC1",
                "O=C(Cn1cnc2ccccc21)N1CCOCC1",
                "Fc1ccc(C2=NNC(=S)N2)cc1",
                "CCN(CC)C(=O)CSc1nnc(C)s1",
                "COc1cc(C=NNC(N)=O)ccc1O",
                "CC1(C)CC(=O)NC(=S)N1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008128881454467773,
            "chemical_diversity": 0.8931536059560867,
            "average_molecular_weight": 230.3076,
            "api_call_time": 10.8790442943573
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COc1cccc2c1CNCCO2', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1cccc2c1CNCNC2",
                "COc1cccc2c1CNCCN2",
                "COc1cccc2c1CNCCC2",
                "COc1cccc2c1CNCCS2",
                "COc1cccc2c1COCCO2",
                "CCc1cccc2c1CNCCO2",
                "COc1ccnc2c1CNCCO2",
                "COc1cccc2c1CNCNN2",
                "COc1cccc2c1CCCCO2"
            ],
            "total_raw_response_smiles": [
                "COc1cccc2c1CNCCS2",
                "COc1cccc2c1CNCCC2",
                "COc1cccc2c1CCCCO2",
                "COc1cccc2c1COCCO2",
                "COc1cccc2c1CNCCN2",
                "COc1cccc2c1CNCNN2",
                "COc1cccc2c1CNCNC2",
                "CCc1cccc2c1CNCCO2",
                "COc1ccnc2c1CNCCO2",
                "COc1ccc(CNCCO)c1C"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.007146120071411133,
            "chemical_diversity": 0.596127813974026,
            "average_molecular_weight": 180.45722222222219,
            "api_call_time": 8.154097557067871
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COc1cccc2c1CNCCO2', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1Cc2ccccc2CN1",
                "O=C1NCc2ccccc2C1O",
                "O=S1(=O)CCNCc2ccccc21",
                "O=C1CNCc2ccccc2N1",
                "O=C1NCc2ccccc2N1",
                "c1ccc2c(c1)CNCCS2",
                "O=C1NCc2ccccc2C1S",
                "O=C1NCCc2ccccc21",
                "CCN1CCCC1c1ccccc1"
            ],
            "total_raw_response_smiles": [
                "CCN1CCCC1c1ccccc1",
                "O=C1NCCc2ccccc21",
                "c1ccc2c(c1)CCNC2=O",
                "c1ccc2c(c1)CNCCS2",
                "c1ccc2c(c1)CNCCS2(=O)=O",
                "c1ccc2c(c1)CNC(=O)C2",
                "c1ccc2c(c1)CNC(=O)C2O",
                "c1ccc2c(c1)CNC(=O)C2S",
                "c1ccc2c(c1)CNCC(=O)N2",
                "c1ccc2c(c1)CNC(=O)N2"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.007491350173950195,
            "chemical_diversity": 0.6914635197702412,
            "average_molecular_weight": 164.99177777777774,
            "api_call_time": 9.233351469039917
        }
    ],
    "C=C[C@H](O)C(=O)NCC(=O)O": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C[C@H](O)C(=O)NCC(=O)O', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C[C@@H](O)C(=O)NCC(=O)O",
                "C=C[C@H](O)C(=O)NCCO",
                "C=C[C@H](O)C(=O)NCC(=O)OC",
                "C=C[C@H](O)C(=O)NCC(=O)O",
                "C=C[C@H](O)C(=O)NCCF",
                "C=C[C@H](O)C(=O)NCC(=O)OCC",
                "C=C[C@H](O)C(=O)NCC#N",
                "C=C[C@H](O)C(=O)NCC(N)=O",
                "C=C[C@H](O)C(=O)NCc1ccccc1",
                "C=C[C@H](O)C(=O)NCC(=O)Oc1ccccc1"
            ],
            "total_raw_response_smiles": [
                "C=C[C@H](O)C(=O)NCC(=O)O",
                "C=C[C@@H](O)C(=O)NCC(=O)O",
                "C=C[C@H](O)C(=O)NCc1ccccc1",
                "C=C[C@H](O)C(=O)NCCO",
                "C=C[C@H](O)C(=O)NCCF",
                "C=C[C@H](O)C(=O)NCC#N",
                "C=C[C@H](O)C(=O)NCC(=O)N",
                "C=C[C@H](O)C(=O)NCC(=O)OC",
                "C=C[C@H](O)C(=O)NCC(=O)OCC",
                "C=C[C@H](O)C(=O)NCC(=O)Oc1ccccc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0048122406005859375,
            "chemical_diversity": 0.43570366014892725,
            "average_molecular_weight": 169.57199999999997,
            "api_call_time": 8.867088317871094
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C[C@H](O)C(=O)NCC(=O)O', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Nc1nc2c(ncn2-c2ccc(Cl)cc2)c(=O)[nH]1",
                "O=C(O)CNC(=O)C1=CC=C(O)C(=O)C1",
                "Cc1cc(=O)[nH]c(=S)n1Cc1ccc(O)cc1",
                "O=C(C=Cc1ccc(O)cc1)Nc1ccccn1",
                "O=c1[nH]cnc2c1ccc(=O)n2-c1ccccc1",
                "Cc1cc(=O)[nH]c2c(C(=O)Nc3ccccc3)c(O)ccc12",
                "CC1=NN(c2ccccc2)C(=O)C1=CNN",
                "O=C1C=CC=C(C(=O)Nc2ccccc2)C1=O",
                "COc1ccccc1NC(=O)C1=CC(=O)NC(=O)C1",
                "NC(=O)c1ccccc1Nc1ccc(Cl)cc1"
            ],
            "total_raw_response_smiles": [
                "NC(=O)C1=CC=CC=C1NC1=CC=C(Cl)C=C1",
                "CC1=CC(=O)NC2=C1C=CC(O)=C2C(=O)NC1=CC=CC=C1",
                "O=C(O)CNC(=O)C1=CC=C(O)C(=O)C1",
                "C1=CC=C(C(=O)NC2=CC=CC=C2)C(=O)C1=O",
                "NC1=NC2=C(N=CN2C2=CC=C(Cl)C=C2)C(=O)N1",
                "OC1=CC=C(C=CC(=O)NC2=CC=CC=N2)C=C1",
                "CC1=CC(=O)NC(=S)N1CC1=CC=C(O)C=C1",
                "O=C1NC=NC2=C1C=CC(=O)N2C1=CC=CC=C1",
                "COC1=CC=CC=C1NC(=O)C1=CC(=O)NC(=O)C1",
                "CC1=NN(C2=CC=CC=C2)C(=O)C1=CNN"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009666681289672852,
            "chemical_diversity": 0.8368836642376707,
            "average_molecular_weight": 244.53670000000002,
            "api_call_time": 13.586092472076416
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C[C@H](O)C(=O)NCC(=O)O', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C[C@H](O)C(=O)NC1CCCCC1",
                "C=C[C@H](O)C(=O)NCCN",
                "C=C[C@H](O)C(=O)NCC(F)(F)F",
                "C=C[C@H](O)C(=O)NCCO",
                "C=C[C@H](O)C(=O)NCC(=O)O",
                "C=C[C@H](O)C(=O)NCCF",
                "C=C[C@H](O)C(=O)NCCC(=O)O",
                "C=C[C@H](O)C(=O)NCC#N",
                "C=C[C@H](O)C(=O)NCC(N)=O",
                "C=C[C@H](O)C(=O)NCc1ccccc1"
            ],
            "total_raw_response_smiles": [
                "C=C[C@H](O)C(=O)NCC(=O)O",
                "C=C[C@H](O)C(=O)NCc1ccccc1",
                "C=C[C@H](O)C(=O)NCCC(=O)O",
                "C=C[C@H](O)C(=O)NCCO",
                "C=C[C@H](O)C(=O)NC1CCCCC1",
                "C=C[C@H](O)C(=O)NCCN",
                "C=C[C@H](O)C(=O)NCCF",
                "C=C[C@H](O)C(=O)NCC#N",
                "C=C[C@H](O)C(=O)NCC(F)(F)F",
                "C=C[C@H](O)C(=O)NCC(=O)N"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004901885986328125,
            "chemical_diversity": 0.4666673405314379,
            "average_molecular_weight": 162.4699,
            "api_call_time": 8.407103061676025
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C[C@H](O)C(=O)NCC(=O)O', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)NCC(O)c1ccc(O)c(O)c1",
                "CC(C)(C)C(=O)Oc1ccc(C#N)cc1",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "COc1ccc(C=NNC(=O)c2ccncc2)cc1OC",
                "CC(=O)N1CCN(C(=O)c2ccc(Cl)cc2)CC1",
                "O=C(O)C1CCCN1C(=O)c1ccccc1Cl",
                "CC1(C)SC2C(NC(=O)Cc3ccccc3)C(=O)N2C1C(=O)O",
                "Cc1ncc(CO)c(CN2CCOCC2)c1O",
                "CC1(C)OB(c2ccc(F)cc2)OC1(C)C",
                "C1CCC2(CC1)OCCO2"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)C(=O)Oc1ccc(C#N)cc1",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "CC(C)NCC(O)c1ccc(O)c(O)c1",
                "C1CCC2(CC1)OCCO2",
                "CC(=O)N1CCN(C(=O)c2ccc(Cl)cc2)CC1",
                "CC1(C)OB(c2ccc(F)cc2)OC1(C)C",
                "O=C(O)C1CCCN1C(=O)c1ccccc1Cl",
                "Cc1ncc(CO)c(CN2CCOCC2)c1O",
                "COc1ccc(C=NNC(=O)c2ccncc2)cc1OC",
                "CC1(C)SC2C(NC(=O)Cc3ccccc3)C(=O)N2C1C(=O)O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010200023651123047,
            "chemical_diversity": 0.9020871507217509,
            "average_molecular_weight": 240.9441,
            "api_call_time": 12.494128465652466
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C[C@H](O)C(=O)NCC(=O)O', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C[C@H](O)C(=O)NC(CC)C(=O)O",
                "C=C[C@H](O)C(=O)NC(CO)C(=O)O",
                "C=C[C@H](O)C(=O)NC(CS)C(=O)O",
                "C=C[C@H](O)C(=O)NC(CCO)C(=O)O",
                "C=C[C@H](O)C(=O)NC(C)C(=O)O",
                "C=C[C@H](O)C(=O)NCC(=O)O",
                "C=C[C@H](O)C(=O)NC(CCS)C(=O)O",
                "C=C[C@H](O)C(=O)NC(CF)C(=O)O",
                "C=C[C@H](O)C(=O)NCCC(=O)O",
                "C=C[C@H](O)C(=O)NCCCC(=O)O"
            ],
            "total_raw_response_smiles": [
                "C=C[C@H](O)C(=O)NCC(=O)O",
                "C=C[C@H](O)C(=O)NCCC(=O)O",
                "C=C[C@H](O)C(=O)NCCCC(=O)O",
                "C=C[C@H](O)C(=O)NC(C)C(=O)O",
                "C=C[C@H](O)C(=O)NC(CC)C(=O)O",
                "C=C[C@H](O)C(=O)NC(CO)C(=O)O",
                "C=C[C@H](O)C(=O)NC(CCO)C(=O)O",
                "C=C[C@H](O)C(=O)NC(CS)C(=O)O",
                "C=C[C@H](O)C(=O)NC(CCS)C(=O)O",
                "C=C[C@H](O)C(=O)NC(CF)C(=O)O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004616498947143555,
            "chemical_diversity": 0.4320993787388492,
            "average_molecular_weight": 188.78829999999996,
            "api_call_time": 9.66443681716919
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C[C@H](O)C(=O)NCC(=O)O', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)CC(=O)NC(=O)C1=NNc1ccc(C#N)cc1",
                "O=C(CN1CCN(c2cccc(Cl)c2)CC1)NCc1ccco1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(F)cc2)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cccs1",
                "Cc1cc(NC(=O)C2=CC(=O)CC(C)(C)C2)no1",
                "O=C(CSc1nccc(=O)[nH]1)Nc1ccc(Br)cc1",
                "COc1ccc(C(=O)N2CCN(C(=O)C3CC3)CC2)cc1OC",
                "O=c1[nH]c(=O)n(-c2ccc(Cl)cc2)cc1-c1ccccc1",
                "CC(C)Cn1cnc(C(=O)Nc2ccc(N3CCOCC3)cc2)c1",
                "Cc1nnc(SCC(=O)Nc2cccc(C(F)(F)F)c2)o1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=CN1c1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(F)cc2)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cccs1",
                "COc1ccc(C(=O)N2CCN(C(=O)C3CC3)CC2)cc1OC",
                "Cc1nnc(SCC(=O)Nc2cccc(C(F)(F)F)c2)o1",
                "CC1(C)CC(=O)NC(=O)C1=NNc1ccc(C#N)cc1",
                "O=C(CSc1nccc(=O)[nH]1)Nc1ccc(Br)cc1",
                "Cc1cc(NC(=O)C2=CC(=O)CC(C)(C)C2)no1",
                "CC(C)Cn1cnc(C(=O)Nc2ccc(N3CCOCC3)cc2)c1",
                "O=C(CN1CCN(c2cccc(Cl)c2)CC1)NCc1ccco1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012172937393188477,
            "chemical_diversity": 0.8476135850635684,
            "average_molecular_weight": 313.0222,
            "api_call_time": 15.51340913772583
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C[C@H](O)C(=O)NCC(=O)O', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C[C@H](OC)C(=O)NCC(=O)O",
                "C=C[C@@H](O)C(=O)NCC(=O)O",
                "C=C[C@H](O)C(=O)NCCO",
                "C=C[C@H](O)C(=O)NC(C)C(=O)O",
                "C=C[C@H](O)C(=O)NCC(=O)O",
                "CCC[C@H](O)C(=O)NCC(=O)O",
                "CC[C@H](O)C(=O)NCC(=O)O",
                "C=C[C@H](O)C(=N)NCC(=O)O",
                "C=C[C@H](O)C(=O)NCC#N",
                "C=C[C@H](O)C(=O)NCc1ccccc1"
            ],
            "total_raw_response_smiles": [
                "C=C[C@H](O)C(=O)NCC(=O)O",
                "C=C[C@@H](O)C(=O)NCC(=O)O",
                "C=C[C@H](O)C(=O)NC(C(=O)O)C",
                "C=C[C@H](O)C(=O)NCc1ccccc1",
                "C=C[C@H](O)C(=O)NCCO",
                "C=C[C@H](O)C(=O)NCC#N",
                "C=C[C@H](O)C(=N)NCC(=O)O",
                "C=C[C@H](OC)C(=O)NCC(=O)O",
                "CC[C@H](O)C(=O)NCC(=O)O",
                "CCC[C@H](O)C(=O)NCC(=O)O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0027861595153808594,
            "chemical_diversity": 0.5391381231215993,
            "average_molecular_weight": 163.56459999999998,
            "api_call_time": 8.192150115966797
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C=C[C@H](O)C(=O)NCC(=O)O', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C=C[C@H](S)C(=O)NNC(O)=S",
                "C#C[C@H](O)C(=N)NCC(=O)O",
                "N=C(NCC(O)=S)[C@@H](O)C=S",
                "C=C[C@@H](N)C(=O)NCC(=O)S",
                "C=C[C@H](O)C(=S)NCC(=N)O",
                "N=C[C@H](O)C(=O)NCC(=N)S",
                "C=N[C@H](O)C(=O)NCC(=O)F",
                "C=C[C@H](F)C(=O)NCC(=N)O"
            ],
            "total_raw_response_smiles": [
                "C=C[C@@H](N)C(=O)NCC(=O)S",
                "C#C[C@H](O)C(=N)NCC(=O)O",
                "C=C[C@H](O)C(=S)NCC(=N)O",
                "C=N[C@H](O)C(=O)NCC(=O)F",
                "C=C[C@H](S)C(=O)NNC(=S)O",
                "N=C[C@H](O)C(=O)NCC(=N)S",
                "C=C[N@H](O)C(=N)NCC(=O)N",
                "C#N[C@H](N)C(=S)NCC(=O)O",
                "C=C[C@H](F)C(=O)NCC(=N)O",
                "S=C[C@H](O)C(=N)NCC(=S)O"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.0036950111389160156,
            "chemical_diversity": 0.7283675114655228,
            "average_molecular_weight": 173.32525,
            "api_call_time": 9.232960939407349
        }
    ],
    "C[C@](O)(Cn1ccnc1)C(F)F": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@](O)(Cn1ccnc1)C(F)F', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@@](O)(Cn1ccnc1)C(F)F",
                "C[C@](O)(Cn1cccn1)C(F)F",
                "C[C@](O)(Cn1ccnc1)C(F)Br",
                "C[C@](O)(Cn1ccnn1)C(F)F",
                "CC[C@](O)(Cn1ccnc1)C(F)F",
                "C[C@](O)(Cn1ccnc1)C(F)F",
                "C[C@](O)(Cn1ccnc1)C(F)Cl",
                "C[C@](O)(Cn1ccnc1)C(F)(F)F"
            ],
            "total_raw_response_smiles": [
                "C[C@](O)(Cn1ccnc1)C(F)F",
                "C[C@@](O)(Cn1ccnc1)C(F)F",
                "C[C@](O)(Cn1cccn1)C(F)F",
                "C[C@](O)(Cn1ccnn1)C(F)F",
                "C[C@](O)(Cn1ccnc1)C(Cl)F",
                "C[C@](O)(Cn1ccnc1)C(Br)F",
                "C[C@](O)(Cn1ccnc1)C(F)Cl",
                "C[C@](O)(Cn1ccnc1)C(F)Br",
                "C[C@](O)(Cn1ccnc1)C(F)(F)F",
                "CC[C@](O)(Cn1ccnc1)C(F)F"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.006287336349487305,
            "chemical_diversity": 0.42214687889198554,
            "average_molecular_weight": 189.96174999999997,
            "api_call_time": 9.154033422470093
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@](O)(Cn1ccnc1)C(F)F', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1ccc(Cn2c(=O)c3c(ncn3C)n(C)c2=O)cc1OC",
                "NC(=O)c1ccc(Cl)cc1NC(=O)C1CC1",
                "O=C(NCc1cccs1)c1cnc(Nc2ccc(F)cc2)s1",
                "CC1(C)CC(=O)c2c(nc(S)n(-c3ccccc3)c2=O)C1",
                "O=C(O)c1ccc(NC(=O)c2cc(Br)cs2)cc1",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2Cc1ccccc1",
                "CC(C)(C)OC(=O)N1CCC(Oc2ccc(C(=O)N3CCOCC3)cc2)CC1",
                "Cc1nc(SCC(=O)Nc2cccc(Cl)c2)c2c(=O)n(C)c(=O)n(C)c2n1",
                "COc1cc(OC)c(C(=O)Nc2ccc(S(=O)(=O)N3CCCC3)cc2)cc1OC",
                "O=C(Nc1ccccc1)C1CCN(Cc2ccccc2)CC1"
            ],
            "total_raw_response_smiles": [
                "NC(=O)c1ccc(Cl)cc1NC(=O)C1CC1",
                "O=C(Nc1ccccc1)C1CCN(Cc2ccccc2)CC1",
                "COc1ccc(Cn2c(=O)c3c(ncn3C)n(C)c2=O)cc1OC",
                "CC(C)(C)OC(=O)N1CCC(Oc2ccc(C(=O)N3CCOCC3)cc2)CC1",
                "CC1(C)CC(=O)C2=C(C1)N=C(S)N(c1ccccc1)C2=O",
                "O=C(O)c1ccc(NC(=O)c2cc(Br)cs2)cc1",
                "Cc1nc(SCC(=O)Nc2cccc(Cl)c2)c2c(=O)n(C)c(=O)n(C)c2n1",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2Cc1ccccc1",
                "O=C(NCc1cccs1)c1cnc(Nc2ccc(F)cc2)s1",
                "COc1cc(OC)c(C(=O)Nc2ccc(S(=O)(=O)N3CCCC3)cc2)cc1OC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011895418167114258,
            "chemical_diversity": 0.8443082185152879,
            "average_molecular_weight": 335.2590000000001,
            "api_call_time": 17.500389575958252
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@](O)(Cn1ccnc1)C(F)F', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@](N)(Cn1ccnc1)C(F)F",
                "C[C@](O)(Cn1ccnc1)C(Cl)Cl",
                "C[C@](O)(Cn1cccn1)C(F)F",
                "C[C@](O)(Cn1cnnn1)C(F)F",
                "C[C@](O)(Cn1ccnn1)C(F)F",
                "C[C@](O)(Cn1ccnc1)C(Br)Br",
                "C[C@](O)(Cn1ccnc1)C(F)F",
                "C[C@](O)(Cn1ccnc1)C(I)I",
                "C[C@](S)(Cn1ccnc1)C(F)F",
                "C[C@](O)(Cn1cncn1)C(F)F"
            ],
            "total_raw_response_smiles": [
                "C[C@](O)(Cn1ccnc1)C(F)F",
                "C[C@](O)(Cn1cccn1)C(F)F",
                "C[C@](O)(Cn1cncn1)C(F)F",
                "C[C@](O)(Cn1ccnn1)C(F)F",
                "C[C@](O)(Cn1cnnn1)C(F)F",
                "C[C@](N)(Cn1ccnc1)C(F)F",
                "C[C@](S)(Cn1ccnc1)C(F)F",
                "C[C@](O)(Cn1ccnc1)C(Cl)Cl",
                "C[C@](O)(Cn1ccnc1)C(Br)Br",
                "C[C@](O)(Cn1ccnc1)C(I)I"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0065762996673583984,
            "chemical_diversity": 0.5236712328678449,
            "average_molecular_weight": 215.123,
            "api_call_time": 7.907266855239868
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@](O)(Cn1ccnc1)C(F)F', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)Cc1ccc(C(C)C(=O)O)cc1",
                "CC(C)(C)OC(=O)NCCC1=CN=CC1",
                "Cn1cc(C(=O)N2CCN(C(=O)C3CC3)CC2)cn1",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "COc1cc(C=CC(=O)O)ccc1O",
                "Cc1nc(N)nc(N)c1-c1ccc(Cl)cc1",
                "O=C(O)C1CCCN1C(=O)c1cc(Cl)cc(Cl)c1",
                "CC1(C)CC(=O)NC(=O)C1",
                "CCN(CC)CCNC(=O)c1ccc(N)cc1",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "COc1cc(C=CC(=O)O)ccc1O",
                "Cc1nc(N)nc(N)c1-c1ccc(Cl)cc1",
                "O=C(O)C1CCCN1C(=O)c1cc(Cl)cc(Cl)c1",
                "CC(C)(C)OC(=O)NCCC1=CN=CC1",
                "CCN(CC)CCNC(=O)c1ccc(N)cc1",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "CC1(C)CC(=O)NC(=O)C1",
                "Cn1cc(C(=O)N2CCN(C(=O)C3CC3)CC2)cn1",
                "CC(C)Cc1ccc(C(C)C(=O)O)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008615970611572266,
            "chemical_diversity": 0.8834556658838345,
            "average_molecular_weight": 230.8992,
            "api_call_time": 15.467924118041992
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@](O)(Cn1ccnc1)C(F)F', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)[C@@](C)(O)Cn1ccnc1",
                "C[C@](O)(Cn1ccnc1)C(Cl)Cl",
                "C[C@](O)(Cn1cccn1)C(F)F",
                "C[C@](O)(Cn1cnnn1)C(F)F",
                "C[C@](O)(Cn1ccnn1)C(F)F",
                "C[C@](O)(Cn1ccnc1)C(F)F",
                "C[C@](O)(Cn1ccnc1)C(I)I",
                "C[C@](O)(Cn1ccnc1)C(Br)Br",
                "C[C@](O)(Cn1cncn1)C(F)F"
            ],
            "total_raw_response_smiles": [
                "C[C@](O)(Cn1ccnc1)C(F)F",
                "C[C@](O)(Cn1cccn1)C(F)F",
                "C[C@](O)(Cn1cncn1)C(F)F",
                "C[C@](O)(Cn1ccnn1)C(F)F",
                "C[C@](O)(Cn1cnnn1)C(F)F",
                "C[C@](O)(Cn1nncc1)C(F)F",
                "C[C@](O)(Cn1ccnc1)C(Cl)Cl",
                "C[C@](O)(Cn1ccnc1)C(Br)Br",
                "C[C@](O)(Cn1ccnc1)C(I)I",
                "C[C@](O)(Cn1ccnc1)C(C)C"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.006564617156982422,
            "chemical_diversity": 0.5032894005791484,
            "average_molecular_weight": 216.8948888888889,
            "api_call_time": 7.8175742626190186
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@](O)(Cn1ccnc1)C(F)F', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1cnn(CCOc2ccccc2)c(=O)c1C",
                "O=C(NCCc1cccnc1)c1ccccc1O",
                "COc1ccc(C(=O)NCc2n[nH]nc2C(=O)O)cc1",
                "O=C(NCCC(=O)N1CCOCC1)c1ccc(Cl)cc1",
                "O=C(Nc1ccccc1)c1csc(-c2cccs2)n1",
                "O=C(c1cccs1)N1CCC(C(=O)N2CCCC2)CC1",
                "NC(=O)c1ccc(C(=O)c2ccccc2)cc1",
                "CC1=NN(CC(=O)Nc2cccc(F)c2)C(=O)C1",
                "Cc1cn(C)c(Nc2ccc(Br)cc2)nc1=O",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccco2)CC1"
            ],
            "total_raw_response_smiles": [
                "NC(=O)C1=CC=C(C=C1)C(=O)C1=CC=CC=C1",
                "C1=CC=C(C(=C1)C(=O)NCCC2=CN=CC=C2)O",
                "CC(C)(C)OC(=O)N1CCC(CC1)NC(=O)C1=CC=CO1",
                "C1=CC(=CC=C1C(=O)NCCC(=O)N2CCOCC2)Cl",
                "CC1=C(C(=O)N(N=C1)CCOC2=CC=CC=C2)C",
                "O=C(NC1=CC=CC=C1)C1=CSC(=N1)C1=CC=CS1",
                "COC1=CC=C(C=C1)C(=O)NCC1=NNN=C1C(=O)O",
                "CC1=NN(C(=O)C1)CC(=O)NC1=CC(=CC=C1)F",
                "O=C(C1=CC=CS1)N1CCC(CC1)C(=O)N1CCCC1",
                "CN1C=C(C(=O)N=C1NC2=CC=C(C=C2)Br)C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010125398635864258,
            "chemical_diversity": 0.8426895570381383,
            "average_molecular_weight": 270.1358,
            "api_call_time": 16.564547300338745
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@](O)(Cn1ccnc1)C(F)F', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 6,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@](O)(Cn1cnnc1)C(F)F",
                "C[C@](O)(Cn1ccnc1)C(F)Br",
                "C[C@](O)(Cn1ccnc1)C(F)I",
                "C[C@](O)(Cn1ccnc1)C(F)Cl",
                "C[C@](S)(Cn1ccnc1)C(F)F",
                "C[C@](N)(Cn1ccnc1)C(F)F"
            ],
            "total_raw_response_smiles": [
                "C[C@](O)(Cn1ccnc1)C(Cl)F",
                "C[C@](O)(Cn1ccnc1)C(Br)F",
                "C[C@](O)(Cn1ccnc1)C(I)F",
                "C[C@](O)(Cn1ccnc1)C(F)Cl",
                "C[C@](O)(Cn1ccnc1)C(F)Br",
                "C[C@](O)(Cn1ccnc1)C(F)I",
                "C[C@](O)(Cn1cnnc1)C(F)F",
                "C[C@](O)(Cn1cenc1)C(F)F",
                "C[C@](S)(Cn1ccnc1)C(F)F",
                "C[C@](N)(Cn1ccnc1)C(F)F"
            ],
            "validity_ratio": 0.6,
            "post_processing_time": 0.005320549011230469,
            "chemical_diversity": 0.43385444267797224,
            "average_molecular_weight": 209.7225,
            "api_call_time": 8.244723081588745
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@](O)(Cn1ccnc1)C(F)F', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@](S)(Cn1ncnn1)C(Cl)Cl",
                "C[C@](O)(Cn1cncn1)C(N)=O",
                "C[C@](O)(Cn1cnnc1)c1ccccc1",
                "C[C@](O)(Cn1cncn1)C(I)I",
                "C[C@](O)(Cn1ccnc1)C1CCCCC1",
                "C[C@@](O)(C#N)Cn1nccn1",
                "C[C@](O)(Cn1ccnn1)C1CC1",
                "C[C@](O)(Cn1cncn1)C(=O)O",
                "C[C@](N)(Cn1cnnc1)C(Br)Br",
                "C[C@@](O)(C=O)Cn1ccnn1"
            ],
            "total_raw_response_smiles": [
                "C[C@](S)(Cn1ncnn1)C(Cl)Cl",
                "C[C@](N)(Cn1cnnc1)C(Br)Br",
                "C[C@](O)(Cn1cncn1)C(I)I",
                "C[C@](O)(Cn1nccn1)C#N",
                "C[C@](O)(Cn1ccnn1)C=O",
                "C[C@](O)(Cn1nncc1)C1CC1",
                "C[C@](O)(Cn1cnnc1)C1=CC=CC=C1",
                "C[C@](O)(Cn1ccnc1)C1CCCCC1",
                "C[C@](O)(Cn1cncn1)C(=O)O",
                "C[C@](O)(Cn1ncnc1)C(N)=O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007135629653930664,
            "chemical_diversity": 0.7166983639204341,
            "average_molecular_weight": 214.54719999999998,
            "api_call_time": 10.940165519714355
        }
    ],
    "CCCCCNc1ncncc1C": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCCNc1ncncc1C', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 11,
            "number_of_valid_canonicalized_smiles": 11,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCCCNc1ncncc1N",
                "CCCCNc1ncncc1C",
                "CCCCCNc1ncncc1Cl",
                "CCCCCNc1ncncc1CC",
                "CCCCCNc1ncncc1C",
                "CCCCCCNc1ncncc1C",
                "CCCCCNc1cnccc1C",
                "CCCCCNc1ccncc1C",
                "CCCCCNc1ncncc1O",
                "CCCCCNc1ncncc1F",
                "CCCCCNc1ncnc(C)c1C"
            ],
            "total_raw_response_smiles": [
                "CCCCCNc1ncncc1C",
                "CCCCNc1ncncc1C",
                "CCCCCNc1ccncc1C",
                "CCCCCNc1cnccc1C",
                "CCCCCNc1ncncc1CC",
                "CCCCCNc1ncnc(C)c1C",
                "CCCCCNc1ncncc1F",
                "CCCCCNc1ncncc1Cl",
                "CCCCCNc1ncncc1N",
                "CCCCCNc1ncncc1O",
                "CCCCCCNc1ncncc1C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007081031799316406,
            "chemical_diversity": 0.4175757516792903,
            "average_molecular_weight": 184.12327272727273,
            "api_call_time": 7.362974405288696
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCCNc1ncncc1C', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1ccc(Cn2c(=O)c3c(ncn3C)n(C)c2=O)cc1OC",
                "Cc1ccc(NC(=O)C2CCN(C(=O)c3ccco3)CC2)cc1",
                "CCN(CC)CCNC(=O)c1cc(Br)c[nH]1",
                "Cc1[nH]c2ccccc2c1CCNCc1cccs1",
                "O=C(Cn1cnc2c1c(=O)n(C1CCCC1)c(=O)n2C1CCCC1)N1CCOCC1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "CC1(C)CC(NC(=O)c2cccs2)CC(C)(CN)C1",
                "O=C(NCc1cccs1)c1ccc(N2CCOCC2)cc1",
                "COc1cc(OC)c(C(=O)NCc2ccco2)c(OC)c1",
                "CC(C)(C)OC(=O)N1CCC(Oc2ccc3c(c2)CCC3)CC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccc(Cl)cc1",
                "COc1ccc(Cn2c(=O)c3c(ncn3C)n(C)c2=O)cc1OC",
                "CC(C)(C)OC(=O)N1CCC(Oc2ccc3c(c2)CCC3)CC1",
                "CCN(CC)CCNC(=O)c1cc(Br)c[nH]1",
                "O=C(NCc1cccs1)c1ccc(N2CCOCC2)cc1",
                "Cc1[nH]c2ccccc2c1CCNCc1cccs1",
                "COc1cc(OC)c(C(=O)NCc2ccco2)c(OC)c1",
                "O=C(Cn1cnc2c1c(=O)n(C1CCCC1)c(=O)n2C1CCCC1)N1CCOCC1",
                "CC1(C)CC(NC(=O)c2cccs2)CC(C)(CN)C1",
                "Cc1ccc(NC(=O)C2CCN(C(=O)c3ccco3)CC2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.01093292236328125,
            "chemical_diversity": 0.86656151187337,
            "average_molecular_weight": 309.20790000000005,
            "api_call_time": 16.081541776657104
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCCNc1ncncc1C', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCCCNc1ncncc1Cl",
                "CCCCCNc1ncncc1C",
                "CCCCCNc1ncncc1CC",
                "CCCCCNc1ncncc1S",
                "CCCCCNc1ncncc1CO",
                "CCCCCNc1ncncc1I",
                "CCCCCNc1ncncc1CN",
                "CCCCCNc1ncncc1CF",
                "CCCCCNc1ncncc1Br",
                "CCCCCNc1ncncc1O"
            ],
            "total_raw_response_smiles": [
                "CCCCCNc1ncncc1C",
                "CCCCCNc1ncncc1CO",
                "CCCCCNc1ncncc1CN",
                "CCCCCNc1ncncc1CC",
                "CCCCCNc1ncncc1CF",
                "CCCCCNc1ncncc1Cl",
                "CCCCCNc1ncncc1Br",
                "CCCCCNc1ncncc1I",
                "CCCCCNc1ncncc1O",
                "CCCCCNc1ncncc1S"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006680488586425781,
            "chemical_diversity": 0.33042072590060156,
            "average_molecular_weight": 207.28689999999997,
            "api_call_time": 6.293572664260864
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCCNc1ncncc1C', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Nc1ccc(C(=O)O)cc1",
                "CC(C)(C)OC(=O)NCCC(=O)O",
                "CCCSP(=O)(OCC)OCC",
                "O=C1NS(=O)(=O)c2ccccc21",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "CCOC(=O)c1ccccc1C(=O)OCC",
                "C=CC(=O)OCCC(C)C",
                "Cc1nnc(C(=O)Nc2ccccc2)o1",
                "O=Cc1ccccc1O",
                "C1CCC2(CC1)OCCO2"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "C1=CC=C(C(=C1)C=O)O",
                "CCOC(=O)C1=CC=CC=C1C(=O)OCC",
                "C1CCC2(CC1)OCCO2",
                "CC(C)(C)OC(=O)NCCC(=O)O",
                "C1=CC(=CC=C1C(=O)O)N",
                "CCCSP(=O)(OCC)OCC",
                "CC1=NN=C(O1)C(=O)NC2=CC=CC=C2",
                "CC(C)CCOC(=O)C=C",
                "C1=CC=C2C(=C1)C(=O)NS2(=O)=O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0066716670989990234,
            "chemical_diversity": 0.8923715155846746,
            "average_molecular_weight": 180.60209999999998,
            "api_call_time": 11.263448238372803
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCCNc1ncncc1C', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCCNc1ncncc1C",
                "CCCCCNc1ncncc1CCCCC",
                "CCNc1ncncc1C",
                "CCCCCNc1ncncc1C",
                "CCCNc1ncncc1C",
                "CNc1ncncc1C",
                "CCCCCCNc1ncncc1C",
                "CCCCCNc1ncncc1CC",
                "CCCCCNc1ncncc1CCCC",
                "CCCCCNc1ncncc1CCC"
            ],
            "total_raw_response_smiles": [
                "CCCCCNc1ncncc1C",
                "CCCCNc1ncncc1C",
                "CCCNc1ncncc1C",
                "CCNc1ncncc1C",
                "CNc1ncncc1C",
                "CCCCCCNc1ncncc1C",
                "CCCCCNc1ncncc1CC",
                "CCCCCNc1ncncc1CCC",
                "CCCCCNc1ncncc1CCCC",
                "CCCCCNc1ncncc1CCCCC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0074920654296875,
            "chemical_diversity": 0.37130193200051254,
            "average_molecular_weight": 180.66969999999998,
            "api_call_time": 6.194672107696533
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCCNc1ncncc1C', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(SCC(=O)Nc2cccc(C(F)(F)F)c2)s1",
                "O=C(NCc1ccccc1)c1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(-c3ccccc3)cc2)CC1",
                "Cc1cc(C)n2nc(NC(=O)C3=CCCCC3)nc2n1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cncs1",
                "COc1cc(C=C2C(=O)NC(=S)NC2=O)ccc1O",
                "CC(C)Cn1cnc2c(N)nc(NCCO)nc21",
                "O=C(O)C1=CN(Cc2cccc(F)c2)C=C(C(=O)O)C1c1ccccc1Cl",
                "COc1ccc(-c2n[nH]c(=O)c3ccc(Cl)cc23)cc1OC",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc3ccccc3nc1N2"
            ],
            "total_raw_response_smiles": [
                "O=C(NCc1ccccc1)c1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(-c3ccccc3)cc2)CC1",
                "COc1ccc(C2=NNC(=O)C3=C2C=C(Cl)C=C3)cc1OC",
                "CC1(C)CC(=O)C2=C(C1)Nc1nc3ccccc3nc1N2",
                "O=C(O)C1=CN(Cc2cccc(F)c2)C=C(C(=O)O)C1c1ccccc1Cl",
                "Cc1nnc(SCC(=O)Nc2cccc(C(F)(F)F)c2)s1",
                "COc1cc(C=C2C(=O)NC(=S)NC2=O)ccc1O",
                "CC(C)Cn1cnc2c(N)nc(NCCO)nc21",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cncs1",
                "Cc1cc(C)n2nc(NC(=O)C3=CCCCC3)nc2n1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011846065521240234,
            "chemical_diversity": 0.8712246766050296,
            "average_molecular_weight": 319.84690000000006,
            "api_call_time": 17.64668846130371
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCCNc1ncncc1C', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCCCNc1ncncc1N",
                "CCCCCNc1ncncc1Cl",
                "CCCCCNc1ncncc1C",
                "CCCCCNc1ncncc1P",
                "CCCCCNc1ncncc1S",
                "CCCCCNc1ncncc1I",
                "CCCCCNc1ncncc1CN",
                "CCCCCNc1ncncc1Br",
                "CCCCCNc1ncncc1O",
                "CCCCCNc1ncncc1F"
            ],
            "total_raw_response_smiles": [
                "CCCCCNc1ncncc1C",
                "CCCCCNc1ncncc1N",
                "CCCCCNc1ncncc1O",
                "CCCCCNc1ncncc1F",
                "CCCCCNc1ncncc1Cl",
                "CCCCCNc1ncncc1Br",
                "CCCCCNc1ncncc1I",
                "CCCCCNc1ncncc1S",
                "CCCCCNc1ncncc1P",
                "CCCCCNc1ncncc1CN"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0064771175384521484,
            "chemical_diversity": 0.33450360577295535,
            "average_molecular_weight": 204.77589999999998,
            "api_call_time": 5.349594354629517
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCCNc1ncncc1C', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCCCNc1ncncc1Cl",
                "CCCCOc1ncncc1C",
                "CCCCCNc1ncncc1CC",
                "CCCCCCNc1ncncc1C",
                "CCCCCNc1cnccc1C",
                "CCCCCNc1cc(C)ncn1",
                "CCCCCNc1ccncc1C",
                "CCCCCNc1ncncc1Br",
                "CCCCCNc1ncncc1O",
                "CCCCCNc1ncncc1F"
            ],
            "total_raw_response_smiles": [
                "CCCCCNc1ncncc1O",
                "CCCCCNc1ccncc1C",
                "CCCCCNc1cnccc1C",
                "CCCCCNc1ncnc(C)c1",
                "CCCCCNc1ncncc1CC",
                "CCCCCCNc1ncncc1C",
                "CCCCOc1ncncc1C",
                "CCCCCNc1ncncc1F",
                "CCCCCNc1ncncc1Cl",
                "CCCCCNc1ncncc1Br"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006708621978759766,
            "chemical_diversity": 0.5036371584959516,
            "average_molecular_weight": 189.6927,
            "api_call_time": 8.115782260894775
        }
    ],
    "CC(=O)NCC(=O)N1CCCC1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)NCC(=O)N1CCCC1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(=O)NCC(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCCC1C",
                "CC(=O)NCC(=O)N1CCNCC1",
                "CC(=O)NCC(=O)N1CCCOC1",
                "CC(=O)NCC(=O)N1CCOCC1",
                "CC(=O)NCC(=O)N1CCCCC1",
                "CC(=O)NCC(=O)N1CCSCC1",
                "CCC(=O)NCC(=O)N1CCCC1",
                "CC(=O)NC(C)C(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCC1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)NCC(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCCC1C",
                "CC(=O)NCC(=O)N1CCCCC1",
                "CCC(=O)NCC(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCC1",
                "CC(=O)NC(C)C(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCNCC1",
                "CC(=O)NCC(=O)N1CCOCC1",
                "CC(=O)NCC(=O)N1CCSCC1",
                "CC(=O)NCC(=O)N1CCCOC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.005643129348754883,
            "chemical_diversity": 0.4386422693602764,
            "average_molecular_weight": 182.32809999999995,
            "api_call_time": 8.303409814834595
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)NCC(=O)N1CCCC1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCC(=O)N1CCCC1)C1CCCCC1",
                "O=C(CN1CCCC1)NC1CCCC1",
                "CC(=O)NC1CCCN(C(=O)C2CCCO2)C1",
                "O=C1NC(=O)C2(CCCCC2)N1",
                "O=C(NCCC1CCNCC1)c1ccccc1",
                "CC(=O)N1CCC(NC(=O)c2cccs2)CC1",
                "O=C(CN1CCOCC1)NC1CCCCC1",
                "CC(NC(=O)C1CCCO1)C(=O)N1CCOCC1",
                "CC(=O)NC1CCN(C(=O)C2CCCO2)CC1",
                "O=C(CN1CCCC1)NCc1ccccc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C2(CCCCC2)N1",
                "O=C(CN1CCCC1)NCc1ccccc1",
                "O=C(NCCC1CCNCC1)c1ccccc1",
                "CC(NC(=O)C1CCCO1)C(=O)N1CCOCC1",
                "O=C(CN1CCOCC1)NC1CCCCC1",
                "CC(=O)N1CCC(NC(=O)c2cccs2)CC1",
                "O=C(CNC(=O)C1CCCCC1)N1CCCC1",
                "CC(=O)NC1CCN(C(=O)C2CCCO2)CC1",
                "O=C(CN1CCCC1)NC1CCCC1",
                "CC(=O)NC1CCCN(C(=O)C2CCCO2)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008123397827148438,
            "chemical_diversity": 0.7691981013130624,
            "average_molecular_weight": 226.90149999999994,
            "api_call_time": 13.39331340789795
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)NCC(=O)N1CCCC1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(=O)NCC(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCCCCC1",
                "CC(=O)NCC(O)N1CCCC1",
                "CC(O)NCC(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCNCC1",
                "CC(=O)NCC(=O)N1CCOCC1",
                "CC(=O)NCC(=O)N1CCCCC1",
                "CC(=O)NCC(=O)N1CCSCC1",
                "CCC(=O)NCC(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCC1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)NCC(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCCCC1",
                "CC(=O)NCC(=O)N1CCCCCC1",
                "CCC(=O)NCC(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCC1",
                "CC(=O)NCC(=O)N1CCOCC1",
                "CC(=O)NCC(=O)N1CCSCC1",
                "CC(O)NCC(=O)N1CCCC1",
                "CC(=O)NCC(O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCNCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.005854368209838867,
            "chemical_diversity": 0.395841180245055,
            "average_molecular_weight": 181.13139999999993,
            "api_call_time": 7.892902374267578
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)NCC(=O)N1CCCC1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(O)CN1C(=O)NC(=O)C12CCCCC2",
                "CC(C)(C)OC(=O)NC1CCNC(=O)C1=O",
                "O=C(NCC(=O)N1CCCC1=O)C1CCCO1",
                "CC(=O)NC1CCCN(C(=O)C2CC2)C1=O",
                "O=C1NC(=O)C2(CCCCC2)N1",
                "O=C(O)CNC(=O)C1CC(=O)N(C(=O)C2CC2)C1",
                "CC1(C)CC(=O)NC(=O)C1NC(=O)C1CC1",
                "CC1(C)CNC(=O)C(CC(=O)O)NC1=O",
                "O=C(O)CCNC(=O)C1CCCCN1C(=O)C(Cl)Cl",
                "O=C(O)CCNC(=O)C1CCCN1C(=O)C(F)(F)F"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C2(CCCCC2)N1",
                "C1CCC2(CC1)C(=O)NC(=O)N2CC(=O)O",
                "O=C(O)CCNC(=O)C1CCCN1C(=O)C(F)(F)F",
                "CC1(C)CC(=O)NC(=O)C1NC(=O)C1CC1",
                "O=C(NCCC(=O)O)C1CCCCN1C(=O)C(Cl)Cl",
                "CC(C)(C)OC(=O)NC1CCNC(=O)C1=O",
                "O=C1CCCN1C(=O)CNC(=O)C1CCCO1",
                "CC(=O)NC1CCCN(C(=O)C2CC2)C1=O",
                "O=C(O)CNC(=O)C1CC(=O)N(C(=O)C2CC2)C1",
                "CC1(C)CNC(=O)C(CC(=O)O)NC1=O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007411003112792969,
            "chemical_diversity": 0.801286695670024,
            "average_molecular_weight": 237.3301,
            "api_call_time": 16.504207372665405
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)NCC(=O)N1CCCC1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(=O)NCC(=O)N1CCC(O)CC1",
                "CC(C)C(=O)NCC(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCCCCC1",
                "CC(=O)NCC(=O)N1CCNCC1",
                "CC(=O)NCC(=O)N1CCOCC1",
                "CC(=O)NCC(=O)N1CCCCC1",
                "CC(=O)NCC(=O)N1CCSCC1",
                "CCC(=O)NCC(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCC(C)CC1",
                "CC(=O)NCC(=O)N1CCCC1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)NCC(=O)N1CCCC1",
                "CCC(=O)NCC(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCCCC1",
                "CC(=O)NCC(=O)N1CCCCCC1",
                "CC(=O)NCC(=O)N1CCOCC1",
                "CC(=O)NCC(=O)N1CCSCC1",
                "CC(=O)NCC(=O)N1CCNCC1",
                "CC(C)C(=O)NCC(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCC(C)CC1",
                "CC(=O)NCC(=O)N1CCC(O)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006078243255615234,
            "chemical_diversity": 0.3748860865305065,
            "average_molecular_weight": 190.74429999999995,
            "api_call_time": 8.285291194915771
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)NCC(=O)N1CCCC1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1NC(=O)C2(CCCCC2)N1c1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2cccs2)CC1",
                "CC1(C)CC(=O)NC(=O)C1(C)Oc1ccc(Br)cc1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(F)(F)F)cc2)o1",
                "O=C1CCCN1c1ccc(N2C(=O)CSC2c2ccccc2)cc1",
                "O=C(CSc1nnc(-c2ccncc2)o1)N1CCCCC1",
                "COc1ccc(C2=NNC(=O)C3(CC3)N2)cc1OC",
                "CC1(C)OB(c2ccc(F)cc2)OC1(C)C",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "Cc1cc(C(=O)NC2CCN(Cc3ccccc3)CC2)no1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C2(CCCCC2)N1c1ccc(Cl)cc1",
                "CC1(C)OB(c2ccc(F)cc2)OC1(C)C",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "COc1ccc(C2=NNC(=O)C3(CC3)N2)cc1OC",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2cccs2)CC1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(F)(F)F)cc2)o1",
                "O=C(CSc1nnc(-c2ccncc2)o1)N1CCCCC1",
                "Cc1cc(C(=O)NC2CCN(Cc3ccccc3)CC2)no1",
                "CC1(C)CC(=O)NC(=O)C1(C)Oc1ccc(Br)cc1",
                "O=C1CCCN1c1ccc(N2C(=O)CSC2c2ccccc2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010338306427001953,
            "chemical_diversity": 0.8703084090807766,
            "average_molecular_weight": 298.05120000000005,
            "api_call_time": 19.007671117782593
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)NCC(=O)N1CCCC1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(=O)NCC(=O)N1CCNC1",
                "CC(=O)NCC(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCCC1C",
                "CC(=O)NCC(=O)N1CCC1",
                "CC(=O)NCC(=O)N1CCOCC1",
                "CC(=O)NCC(=O)N1CCCCC1",
                "CNC(=O)NCC(=O)N1CCCC1",
                "CC(=N)NCC(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCSC1",
                "CC(=O)NCC(=O)N1CCOC1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)NCC(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCNC1",
                "CC(=O)NCC(=O)N1CCSC1",
                "CC(=O)NCC(=O)N1CCOC1",
                "CC(=O)NCC(=O)N1CCC1",
                "CC(=O)NCC(=O)N1CCCCC1",
                "CC(=O)NCC(=O)N1CCOCC1",
                "CNC(=O)NCC(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCCC1C",
                "CC(=N)NCC(=O)N1CCCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.005793094635009766,
            "chemical_diversity": 0.42635261892956744,
            "average_molecular_weight": 176.71769999999998,
            "api_call_time": 7.513488292694092
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)NCC(=O)N1CCCC1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(=O)NCC(=O)NC1CCCC1",
                "CC(=O)NC1CCNCC1",
                "CC(=O)N1CCOCC1",
                "CC(=O)NCC(=O)N1CCNCC1",
                "CC(=O)NCCC(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCOCC1",
                "CC(=O)NCC(=O)N1CCCCC1",
                "CC(=O)NCC(=O)N1CCSCC1",
                "CC(=O)NCC(=O)NC1CCCCC1",
                "CC(=O)NC1CCCCC1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)N1CCOCC1",
                "CC(=O)NC1CCNCC1",
                "CC(=O)NC1CCCCC1",
                "CC(=O)NCCC(=O)N1CCCC1",
                "CC(=O)NCC(=O)N1CCOCC1",
                "CC(=O)NCC(=O)N1CCSCC1",
                "CC(=O)NCC(=O)N1CCCCC1",
                "CC(=O)NCC(=O)N1CCNCC1",
                "CC(=O)NCC(=O)NC1CCCC1",
                "CC(=O)NCC(=O)NC1CCCCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.005639553070068359,
            "chemical_diversity": 0.6079666595959168,
            "average_molecular_weight": 173.7275,
            "api_call_time": 7.625520944595337
        }
    ],
    "CCCC(=O)NC[C@](C)(O)COC": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCC(=O)NC[C@](C)(O)COC', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCC(=O)NC[C@@](O)(CC)COC",
                "CCCC(=O)N[C@@H](C)[C@](C)(O)COC",
                "CCCC(=O)NC[C@@](C)(COC)OC",
                "CCC(=O)NC[C@](C)(O)COC",
                "CCCC(=O)NC[C@](C)(O)COCC",
                "CCCC(=O)NC[C@](C)(O)CCOC",
                "CCCC(=O)NC[C@](C)(O)COC(C)C",
                "CCCC(=O)NC[C@](C)(O)CSC",
                "CCCC(=O)NC[C@@](C)(O)COC"
            ],
            "total_raw_response_smiles": [
                "CCCC(=O)NC[C@@](C)(O)COC",
                "CCCC(=O)NC[C@](C)(O)COC(C)C",
                "CCCC(=O)NC[C@](C)(O)CSC",
                "CCCC(=O)NC[C@](C)(OC)COC",
                "CCC(=O)NC[C@](C)(O)COC",
                "CCCC(=O)N[C@@H](C)[C@](C)(O)COC",
                "CCCC(=O)NC[C@](CC)(O)COC",
                "CCCC(=O)NC[C@](C)(O)COCC",
                "CCCC(=O)NC[C@](C)(O)CCOC",
                "CCCC(=O)NC[C@](C)(O)COC(C)"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.004772663116455078,
            "chemical_diversity": 0.44337350682120935,
            "average_molecular_weight": 200.39166666666662,
            "api_call_time": 9.075790405273438
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCC(=O)NC[C@](C)(O)COC', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COC(=O)C(NC(=O)C1CC1)C1CCOC1",
                "O=C(CC1CCCC1)NCc1cn(C2CCCO2)nn1",
                "O=C(NCc1ccco1)c1ccc(Cl)cc1",
                "O=C(NCCC1CCCO1)c1cccs1",
                "COc1ccc(CC(=O)N2CCCC2CO)cc1OC",
                "O=C1NC(CO)Cc2ccccc21",
                "CC1(C)OC(=O)N(CC(O)COc2ccccc2)C1=O",
                "CC(O)CNC(=O)C1Cc2ccccc2O1",
                "CC(C)(CO)NC(=O)c1ccc2c(c1)OCO2",
                "CC(C)(C)OC(=O)C1CCCN1Cc1ccccc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(CO)Cc2ccccc21",
                "CC(C)(C)OC(=O)C1CCCN1Cc1ccccc1",
                "O=C(NCc1ccco1)c1ccc(Cl)cc1",
                "COc1ccc(CC(=O)N2CCCC2CO)cc1OC",
                "CC1(C)OC(=O)N(CC(O)COc2ccccc2)C1=O",
                "O=C(NCCC1CCCO1)c1cccs1",
                "CC(C)(CO)NC(=O)c1ccc2c(c1)OCO2",
                "O=C(CC1CCCC1)NCc1cn(C2CCCO2)nn1",
                "COC(=O)C(NC(=O)C1CC1)C1CCOC1",
                "CC(O)CNC(=O)C1Cc2ccccc2O1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009538888931274414,
            "chemical_diversity": 0.8330964592942588,
            "average_molecular_weight": 242.23059999999995,
            "api_call_time": 12.083428144454956
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCC(=O)NC[C@](C)(O)COC', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCC(=O)NC[C@](C)(O)COC",
                "CCCC(=O)NC[C@](C)(N)COC",
                "CCCC(=O)NC[C@](C)(O)CNC",
                "CCCC(=O)N[C@@H](C)[C@](C)(O)COC",
                "CCCC(=O)NC[C@](C)(S)COC",
                "CCCC(=N)NC[C@](C)(O)COC",
                "CCC(=O)NC[C@](C)(O)COC",
                "CCCCC(=O)NC[C@](C)(O)COC",
                "CCCC(=O)NC[C@](C)(O)CSC",
                "CCCC(=O)NC[C@@](C)(O)COC"
            ],
            "total_raw_response_smiles": [
                "CCCC(=O)NC[C@](C)(O)COC",
                "CCCC(=O)NC[C@@](C)(O)COC",
                "CCCC(=O)NC[C@](C)(O)CSC",
                "CCCC(=O)NC[C@](C)(O)CNC",
                "CCCC(=O)NC[C@](C)(N)COC",
                "CCCC(=O)NC[C@](C)(S)COC",
                "CCCC(=O)N[C@@H](C)[C@](C)(O)COC",
                "CCC(=O)NC[C@](C)(O)COC",
                "CCCCC(=O)NC[C@](C)(O)COC",
                "CCCC(=N)NC[C@](C)(O)COC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0048694610595703125,
            "chemical_diversity": 0.4272684632971162,
            "average_molecular_weight": 193.57609999999997,
            "api_call_time": 9.0203537940979
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCC(=O)NC[C@](C)(O)COC', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)CC(=O)C=C(C(C)(C)C)C1",
                "CC1(C)OC(=O)NC1=O",
                "COc1cc(C=O)ccc1O",
                "Cc1nnc(SCC(=O)N2CCOCC2)n1C",
                "CC(=O)Oc1ccc(C#N)cc1",
                "C=CCN1C(=O)C=CC1=O",
                "CC(C)(C)OC(=O)NCCC1=CCCCC1",
                "O=C1NC(=O)c2ccccc21",
                "OCCN1CCOCC1",
                "O=C(O)C1CCCN1C(=O)c1ccco1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)c2ccccc21",
                "CC(C)(C)C1=CC(=O)CC(C)(C)C1",
                "C1COCCN1CCO",
                "CC(=O)Oc1ccc(C#N)cc1",
                "O=C(O)C1CCCN1C(=O)c1ccco1",
                "COc1cc(C=O)ccc1O",
                "CC1(C)OC(=O)NC1=O",
                "Cc1nnc(SCC(=O)N2CCOCC2)n1C",
                "C=CCN1C(=O)C=CC1=O",
                "CC(C)(C)OC(=O)NCCC1=CCCCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006738424301147461,
            "chemical_diversity": 0.8988037775166206,
            "average_molecular_weight": 172.90249999999997,
            "api_call_time": 11.438632249832153
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCC(=O)NC[C@](C)(O)COC', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCC(=O)NC[C@](C)(O)COC",
                "CCCC(=O)NC[C@@](O)(CC)COC",
                "CCCC(=O)NC[C@](C)(O)COCC(C)C",
                "CCCC(=O)NC[C@@](C)(COC)OC",
                "CCC(=O)NC[C@](C)(O)COC",
                "CCCC(=O)NC[C@](C)(O)COCC",
                "CCCC(=O)NC[C@](C)(O)CCOC",
                "CCCCC(=O)NC[C@](C)(O)COC",
                "CCCC(=O)NC[C@](C)(O)COC(C)C",
                "CCCC(=O)NC[C@](C)(O)COC(C)(C)C"
            ],
            "total_raw_response_smiles": [
                "CCCC(=O)NC[C@](C)(O)COC",
                "CCC(=O)NC[C@](C)(O)COC",
                "CCCCC(=O)NC[C@](C)(O)COC",
                "CCCC(=O)NC[C@](CC)(O)COC",
                "CCCC(=O)NC[C@](C)(O)COCC",
                "CCCC(=O)NC[C@](C)(OC)COC",
                "CCCC(=O)NC[C@](C)(O)CCOC",
                "CCCC(=O)NC[C@](C)(O)COC(C)C",
                "CCCC(=O)NC[C@](C)(O)COCC(C)C",
                "CCCC(=O)NC[C@](C)(O)COC(C)(C)C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.005708456039428711,
            "chemical_diversity": 0.3878397390276682,
            "average_molecular_weight": 206.08739999999995,
            "api_call_time": 7.625901460647583
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCC(=O)NC[C@](C)(O)COC', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(SCC(=O)Nc2cccc(Br)c2)o1",
                "O=c1[nH]c(=O)c2ccc(Cl)cc2[nH]1",
                "COc1ccc(C2=NNC(=O)CS2)cc1OC",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3ccccc23)CC1",
                "O=C(CSc1nnnn1C1CCCCC1)Nc1ccc(F)cc1",
                "Cc1cc(C)n2nc(NC(=O)c3ccc(S(=O)(=O)N4CCCC4)cc3)nc2n1",
                "COc1cc(OC)c(NC(=O)CSc2nnc(-c3ccco3)n2C)cc1Cl",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cn(C2CCCC2)nn1",
                "CC1(C)OB(c2ccc(C#N)cc2)OC1(C)C",
                "C[C@H]1CC[C@@H](C(=O)Nc2ccccc2)CC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)c2ccc(Cl)cc2N1",
                "C[C@@H]1CC[C@H](C(=O)Nc2ccccc2)CC1",
                "Cc1nnc(SCC(=O)Nc2cccc(Br)c2)o1",
                "O=C(CSc1nnnn1C1CCCCC1)Nc1ccc(F)cc1",
                "COc1ccc(C2=NNC(=O)CS2)cc1OC",
                "CC1(C)OB(c2ccc(C#N)cc2)OC1(C)C",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3ccccc23)CC1",
                "Cc1cc(C)n2nc(NC(=O)c3ccc(S(=O)(=O)N4CCCC4)cc3)nc2n1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cn(C2CCCC2)nn1",
                "COc1cc(OC)c(NC(=O)CSc2nnc(-c3ccco3)n2C)cc1Cl"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012495994567871094,
            "chemical_diversity": 0.8554022122821947,
            "average_molecular_weight": 310.2114,
            "api_call_time": 15.540089845657349
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCC(=O)NC[C@](C)(O)COC', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCC(=O)NC[C@](C)(O)CNC",
                "CCCC(=O)NC[C@](C)(N)COC",
                "CCCC(=O)NC[C@](C)(O)COF",
                "CCCC(=O)NC[C@@](O)(CC)COC",
                "CCCC(=O)NC[C@](C)(S)COC",
                "CCC(=O)NC[C@](C)(O)COC",
                "CCCC(=O)NC[C@](C)(O)COBr",
                "CCCC(=O)NC[C@](C)(O)COCl",
                "CCCC(=O)NC[C@](C)(O)CSC",
                "CCCC(=O)NC[C@@](C)(O)COC"
            ],
            "total_raw_response_smiles": [
                "CCCC(=O)NC[C@@](C)(O)COC",
                "CCCC(=O)NC[C@](C)(O)CSC",
                "CCCC(=O)NC[C@](C)(O)COF",
                "CCCC(=O)NC[C@](C)(O)COCl",
                "CCCC(=O)NC[C@](C)(O)COBr",
                "CCCC(=O)NC[C@](C)(S)COC",
                "CCCC(=O)NC[C@](C)(N)COC",
                "CCCC(=O)NC[C@](C)(O)CNC",
                "CCCC(=O)NC[C@](CC)(O)COC",
                "CCC(=O)NC[C@](C)(O)COC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004629850387573242,
            "chemical_diversity": 0.4104931640591115,
            "average_molecular_weight": 201.19679999999997,
            "api_call_time": 8.146991491317749
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCC(=O)NC[C@](C)(O)COC', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCNC(=O)C[C@@](C)(O)CSC",
                "CCSC(=O)NC[C@](C)(F)COC",
                "CCC(=O)NCC(C)(O)C#N",
                "CCCC(=O)N1COC[C@@](C)(O)C1",
                "COC[C@H](C)NC(=O)C(C)C",
                "CCC[C@H](O)NCC(C)(O)COC",
                "CCCC(=O)CC[C@](C)(Cl)COC",
                "CCCC#CNC[C@@](C)(O)COC",
                "CCOC(=O)CC[C@@](C)(N)COC",
                "CCCC(=S)N[C@H](C)CCOC"
            ],
            "total_raw_response_smiles": [
                "CCCNC(=O)C[C@@](C)(O)CSC",
                "CCOC(=O)CC[C@@](C)(N)COC",
                "CCC(=O)NCC(C)(O)C#N",
                "CCSC(=O)NC[C@](C)(F)COC",
                "CC(C)C(=O)N[C@@H](C)COC",
                "CCCC(=S)N[C@H](C)CCOC",
                "CCC[C@H](O)NCC(C)(O)COC",
                "CCCC(=O)CC[C@](C)(Cl)COC",
                "CCCC(=O)N1C[C@](C)(O)COC1",
                "CCCC#CNC[C@@](C)(O)COC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004825592041015625,
            "chemical_diversity": 0.7778016821317161,
            "average_molecular_weight": 187.9092,
            "api_call_time": 9.571668863296509
        }
    ],
    "Cc1noc(C(=O)NCCCO)n1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1noc(C(=O)NCCCO)n1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1noc(C(=O)NCCCCO)n1",
                "Cc1noc(C(=O)NCCCS)n1",
                "CNCCNC(=O)c1nc(C)no1",
                "Cc1noc(C(=O)NCCCN)n1",
                "CCc1noc(C(=O)NCCCO)n1",
                "Cc1noc(C(=O)NCCCO)n1",
                "COCCNC(=O)c1nc(C)no1",
                "CCCCNC(=O)c1nc(C)no1",
                "Cc1noc(C(=O)NCCO)n1"
            ],
            "total_raw_response_smiles": [
                "Cc1noc(C(=O)NCCCO)n1",
                "Cc1noc(C(=O)NCCCCO)n1",
                "Cc1noc(C(=O)NCCO)n1",
                "Cc1noc(C(=O)NCCCS)n1",
                "Cc1noc(C(=O)NCCCC)n1",
                "Cc1noc(C(=O)NCCCN)n1",
                "CCc1noc(C(=O)NCCCO)n1",
                "Cc1noc(C(=O)NCCCOH)n1",
                "Cc1noc(C(=O)NCCNC)n1",
                "Cc1noc(C(=O)NCCOC)n1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.006837606430053711,
            "chemical_diversity": 0.3171316062240189,
            "average_molecular_weight": 188.08911111111112,
            "api_call_time": 8.38259220123291
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1noc(C(=O)NCCCO)n1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCCCO)C1CCCO1",
                "O=C(NCCCO)C1CCCCC1",
                "O=C(NCCCO)C1CCCC1",
                "O=C(NCCCO)c1ccoc1",
                "O=C(NCCCO)C1CCSC1",
                "O=C(NCCCO)c1cccs1",
                "O=C(NCCCO)C1CCOCC1",
                "O=C(NCCCO)C1CCNC1",
                "O=C(NCCCO)c1ccc(F)cc1",
                "O=C(NCCCO)c1ccncc1"
            ],
            "total_raw_response_smiles": [
                "O=C(NCCCO)c1ccc(F)cc1",
                "O=C(NCCCO)C1CCCCC1",
                "O=C(NCCCO)c1cccs1",
                "O=C(NCCCO)C1CCCO1",
                "O=C(NCCCO)C1CCNC1",
                "O=C(NCCCO)C1CCSC1",
                "O=C(NCCCO)c1ccoc1",
                "O=C(NCCCO)C1CCCC1",
                "O=C(NCCCO)c1ccncc1",
                "O=C(NCCCO)C1CCOCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.005879640579223633,
            "chemical_diversity": 0.5613394028226053,
            "average_molecular_weight": 181.031,
            "api_call_time": 9.196813821792603
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1noc(C(=O)NCCCO)n1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1noc(C(=O)NCCCS)n1",
                "Cc1noc(C(=O)NCCCC(=O)O)n1",
                "Cc1noc(C(=O)NCCCC(N)=O)n1",
                "CNCCCNC(=O)c1nc(C)no1",
                "Cc1noc(C(=O)NCCCO)n1",
                "Cc1noc(C(=O)NCCCC(F)(F)F)n1",
                "Cc1noc(C(=O)NCCCF)n1",
                "Cc1noc(C(=O)NCCCC#N)n1",
                "COCCCNC(=O)c1nc(C)no1",
                "Cc1noc(C(=O)NCCCCN)n1"
            ],
            "total_raw_response_smiles": [
                "Cc1noc(C(=O)NCCCO)n1",
                "Cc1noc(C(=O)NCCCF)n1",
                "Cc1noc(C(=O)NCCCS)n1",
                "Cc1noc(C(=O)NCCCC#N)n1",
                "Cc1noc(C(=O)NCCCOC)n1",
                "Cc1noc(C(=O)NCCCC(=O)O)n1",
                "Cc1noc(C(=O)NCCCCN)n1",
                "Cc1noc(C(=O)NCCCC(F)(F)F)n1",
                "Cc1noc(C(=O)NCCCNC)n1",
                "Cc1noc(C(=O)NCCCC(=O)N)n1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007170438766479492,
            "chemical_diversity": 0.29790500535417963,
            "average_molecular_weight": 202.60469999999998,
            "api_call_time": 9.773593187332153
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1noc(C(=O)NCCCO)n1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)Cc1ccc(C(=O)N2CCNCC2)cc1",
                "CC(C)(C)OC(=O)c1ccc(Cl)cc1",
                "CCOC(=O)c1cnc(NC(=O)c2cccs2)s1",
                "COc1ccc(CC(=O)N2CCOCC2)cc1OC",
                "CCN(CC)C(=O)CSc1nnc(C)s1",
                "O=C(NCc1ccccc1)c1ccc(F)cc1F",
                "Cc1cc(Br)ccc1NC(=O)C1CCCO1",
                "CC1(C)CC(=O)CC(=NNc2ccccc2)C1",
                "Fc1ccc(CN2CCN(Cc3ccncc3)CC2)cc1",
                "O=C(Cn1cnc2ccccc21)N1CCSCC1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)OC(=O)c1ccc(Cl)cc1",
                "O=C(NCc1ccccc1)c1ccc(F)cc1F",
                "COc1ccc(CC(=O)N2CCOCC2)cc1OC",
                "CC(C)Cc1ccc(C(=O)N2CCNCC2)cc1",
                "Cc1cc(Br)ccc1NC(=O)C1CCCO1",
                "O=C(Cn1cnc2ccccc21)N1CCSCC1",
                "CCN(CC)C(=O)CSc1nnc(C)s1",
                "Fc1ccc(CN2CCN(Cc3ccncc3)CC2)cc1",
                "CC1(C)CC(=O)CC(=NNc2ccccc2)C1",
                "CCOC(=O)c1cnc(NC(=O)c2cccs2)s1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009570121765136719,
            "chemical_diversity": 0.8579757236166103,
            "average_molecular_weight": 256.0482,
            "api_call_time": 12.836197137832642
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1noc(C(=O)NCCCO)n1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1noc(C(=O)NCCCS)n1",
                "Cc1noc(C(=O)NCCCCO)n1",
                "Cc1noc(C(=O)NCC(C)CO)n1",
                "Cc1noc(C(=O)NCC(C)(C)O)n1",
                "Cc1noc(C(=O)NCC(O)CF)n1",
                "Cc1noc(C(=O)NCCCCCO)n1",
                "Cc1noc(C(=O)NCC(O)CO)n1",
                "CCCCNC(=O)c1nc(C)no1",
                "Cc1noc(C(=O)NCCO)n1"
            ],
            "total_raw_response_smiles": [
                "Cc1noc(C(=O)NCCO)n1",
                "Cc1noc(C(=O)NCCCS)n1",
                "Cc1noc(C(=O)NCCCC)n1",
                "Cc1noc(C(=O)NCCCCCO)n1",
                "Cc1noc(C(=O)NCCCCO)n1",
                "Cc1noc(C(=O)NCC(O)CO)n1",
                "Cc1noc(C(=O)NCC(C)CO)n1",
                "Cc1noc(C(=O)NCCCOH)n1",
                "Cc1noc(C(=O)NCC(C)(C)O)n1",
                "Cc1noc(C(=O)NCC(O)CF)n1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.007005214691162109,
            "chemical_diversity": 0.3610096075785205,
            "average_molecular_weight": 196.76000000000002,
            "api_call_time": 11.852911710739136
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1noc(C(=O)NCCCO)n1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CN1CCN(C(=O)c2ccc3c(c2)C(=O)N(Cc2ccccc2)C3=O)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cccs1",
                "Cc1cc(C(=O)NCc2ccco2)no1",
                "COc1cccc(C(=O)Nc2nnc(C(C)(C)C)s2)c1",
                "O=C(NCc1ccccc1)c1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(-c3ccccc3)cc2)CC1",
                "O=C(NCc1ccncc1)c1cc(Br)cs1",
                "Cc1cc(NC(=O)c2cccc(N3CCOCC3)c2)ccc1Cl",
                "CC(=O)Nc1ccc(NC(=O)c2cccc(C(F)(F)F)c2)cc1",
                "COc1ccc(C2C(=O)N(Cc3ccccc3)CC(=O)N2c2ccc(F)cc2)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C(NCc1ccccc1)c1ccc(Cl)cc1",
                "COc1ccc(C2C(=O)N(Cc3ccccc3)CC(=O)N2c2ccc(F)cc2)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(-c3ccccc3)cc2)CC1",
                "Cc1cc(C(=O)NCc2ccco2)no1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cccs1",
                "CN1CCN(C(=O)c2ccc3c(c2)C(=O)N(Cc2ccccc2)C3=O)CC1",
                "CC(=O)Nc1ccc(NC(=O)c2cccc(C(F)(F)F)c2)cc1",
                "O=C(NCc1ccncc1)c1cc(Br)cs1",
                "Cc1cc(NC(=O)c2cccc(N3CCOCC3)c2)ccc1Cl",
                "COc1cccc(C(=O)Nc2nnc(C(C)(C)C)s2)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010807514190673828,
            "chemical_diversity": 0.8072841773257173,
            "average_molecular_weight": 319.4347000000001,
            "api_call_time": 14.263808488845825
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1noc(C(=O)NCCCO)n1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1noc(C(=O)NCCCS)n1",
                "CNCCNC(=O)c1nc(C)no1",
                "Cc1noc(C(=N)NCCCO)n1",
                "Cc1noc(C(=O)NCCCO)n1",
                "Cc1noc(C(=O)NCCPO)n1",
                "COCCNC(=O)c1nc(C)no1",
                "Cc1noc(C(=O)NCCSO)n1",
                "CCCCNC(=O)c1nc(C)no1",
                "Cc1noc(C(=S)NCCCO)n1",
                "Cc1nsc(C(=O)NCCCO)n1"
            ],
            "total_raw_response_smiles": [
                "Cc1noc(C(=O)NCCCO)n1",
                "Cc1noc(C(=O)NCCCS)n1",
                "Cc1noc(C(=O)NCCCC)n1",
                "Cc1noc(C(=O)NCCNC)n1",
                "Cc1noc(C(=O)NCCOC)n1",
                "Cc1noc(C(=O)NCCSO)n1",
                "Cc1noc(C(=O)NCCPO)n1",
                "Cc1noc(C(=N)NCCCO)n1",
                "Cc1noc(C(=S)NCCCO)n1",
                "Cc1nsc(C(=O)NCCCO)n1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006733894348144531,
            "chemical_diversity": 0.43940566901275413,
            "average_molecular_weight": 193.2089,
            "api_call_time": 7.230649471282959
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1noc(C(=O)NCCCO)n1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nc(C(=O)NCCCF)no1",
                "Cc1nnc(C(=O)NCCCS)o1",
                "Cc1cnc(C(=O)NCCCO)s1",
                "CNCCNC(=O)c1cc(C)on1",
                "Cc1nnc(C(=O)NCCOP)s1",
                "Cc1coc(C(=O)NCCCO)c1",
                "Cc1noc(C(=O)CCNCO)n1",
                "Cc1noc(C(=S)NCCCO)n1",
                "Cc1nsc(C(=O)NCCCO)n1"
            ],
            "total_raw_response_smiles": [
                "Cc1nnc(C(=O)NCCCS)o1",
                "Cc1nc(C(=O)NCCCF)no1",
                "Cc1onc(C(=O)NCCNC)c1",
                "Cc1cnc(C(=O)NCCCO)s1",
                "Cc1coc(C(=O)NCCCO)c1",
                "Cc1nsc(C(=O)NCCCO)n1",
                "Cc1nnc(C(=O)NCCOP)s1",
                "Cc1noc(C(=S)NCCCO)n1",
                "Cc1nnc(C(=O)NCCCN)n1",
                "Cc1noc(C(=O)CCNCO)n1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.006810426712036133,
            "chemical_diversity": 0.6830289599609258,
            "average_molecular_weight": 195.77744444444443,
            "api_call_time": 7.524089097976685
        }
    ],
    "O=Cc1nc2cccnc2[nH]1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=Cc1nc2cccnc2[nH]1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 5,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=Cc1nc2ncccc2[nH]1",
                "OC=Cc1nc2cccnc2[nH]1",
                "O=Cc1nc2cccnc2[nH]1",
                "O=Cc1nc2cnccc2[nH]1",
                "O=Cc1nc2ccncc2[nH]1"
            ],
            "total_raw_response_smiles": [
                "O=Cc1nc2cccnc2[nH]1",
                "O=Cc1nc2cccnc2n1",
                "O=Cc1nc2ccncc2[nH]1",
                "O=Cc1nc2ccncc2n1",
                "O=Cc1nc2cnccc2[nH]1",
                "O=Cc1nc2cnccc2n1",
                "O=Cc1[nH]c2cccnc2n1",
                "O=Cc1[nH]c2ccncc2n1",
                "O=Cc1[nH]c2cnccc2n1",
                "OC=Cc1nc2cccnc2[nH]1"
            ],
            "validity_ratio": 0.5,
            "post_processing_time": 0.005482196807861328,
            "chemical_diversity": 0.5052563647357001,
            "average_molecular_weight": 149.9424,
            "api_call_time": 6.281938314437866
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=Cc1nc2cccnc2[nH]1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1NC(=O)C(c2ccc(Cl)cc2)(c2ccc(Cl)cc2)N1",
                "COc1cc(C=C2C(=O)NC(=O)N(C)C2=O)ccc1O",
                "CC(C)(C)OC(=O)N1CCN(c2nc(-c3ccco3)nc3ccccc23)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cc(Cl)ccc1O",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccs1",
                "COc1ccc(C2C(C(=O)OC(C)C)=C(C)NC3=C2C(=O)CCC3)cc1",
                "CC1(C)OC(=O)C2=C(C1=O)C1(Cl)C(Cl)=C(Cl)C2(Cl)C1(Cl)Cl",
                "O=C(NN1C(=O)CSC1c1ccccc1)c1ccco1",
                "Cc1nnc(SCC(=O)Nc2ccc(N3CCOCC3)cc2)s1",
                "NC(=O)c1ccc2c(c1)C(=O)N(CCN1CCOCC1)C2"
            ],
            "total_raw_response_smiles": [
                "NC(=O)c1ccc2c(c1)C(=O)N(CCN1CCOCC1)C2",
                "COc1ccc(C2C(C(=O)OC(C)C)=C(C)NC3=C2C(=O)CCC3)cc1",
                "CC1(C)OC(=O)C2=C(C1=O)C1(Cl)C(Cl)=C(Cl)C2(Cl)C1(Cl)Cl",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)(c2ccc(Cl)cc2)N1",
                "CC(C)(C)OC(=O)N1CCN(c2nc(-c3ccco3)nc3ccccc23)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cc(Cl)ccc1O",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccs1",
                "Cc1nnc(SCC(=O)Nc2ccc(N3CCOCC3)cc2)s1",
                "COc1cc(C=C2C(=O)NC(=O)N(C)C2=O)ccc1O",
                "O=C1CSC(c2ccccc2)N1NC(=O)c1ccco1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011266946792602539,
            "chemical_diversity": 0.8714568635298047,
            "average_molecular_weight": 333.7513,
            "api_call_time": 17.50615096092224
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=Cc1nc2cccnc2[nH]1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cn1c(C=O)nc2cccnc21",
                "O=Cc1nc2ccc(F)nc2[nH]1",
                "O=Cc1nc2ccc(O)nc2[nH]1",
                "Cc1ccc2nc(C=O)[nH]c2n1",
                "O=Cc1nc2ccc(Cl)nc2[nH]1",
                "O=Cc1nc2ccc(S)nc2[nH]1",
                "O=Cc1nc2cccnc2[nH]1",
                "O=Cc1nc2ccc(Br)nc2[nH]1",
                "Nc1ccc2nc(C=O)[nH]c2n1",
                "CCn1c(C=O)nc2cccnc21"
            ],
            "total_raw_response_smiles": [
                "O=Cc1nc2cccnc2[nH]1",
                "O=Cc1nc2cccnc2n1C",
                "O=Cc1nc2cccnc2n1CC",
                "O=Cc1nc2ccc(F)nc2[nH]1",
                "O=Cc1nc2ccc(Cl)nc2[nH]1",
                "O=Cc1nc2ccc(Br)nc2[nH]1",
                "O=Cc1nc2ccc(C)nc2[nH]1",
                "O=Cc1nc2ccc(O)nc2[nH]1",
                "O=Cc1nc2ccc(N)nc2[nH]1",
                "O=Cc1nc2ccc(S)nc2[nH]1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0074901580810546875,
            "chemical_diversity": 0.5130182566033862,
            "average_molecular_weight": 172.189,
            "api_call_time": 7.306634187698364
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=Cc1nc2cccnc2[nH]1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Nc1ccc(C(=O)O)cc1",
                "Cc1cc(=O)n(-c2ccccc2Cl)[nH]1",
                "O=C1C=CC(c2ccncc2)C=C1",
                "O=C1NC(=O)c2ccccc21",
                "CC(C)(C)OC(=O)Nc1ccccn1",
                "COc1cc(Cl)ccc1C(N)=O",
                "CCOC(=O)c1ccc(N)cc1",
                "Cc1nnc(C(=O)Nc2ccccc2)o1",
                "O=C(Nc1ccco1)c1ccncc1",
                "CC(=O)Nc1ccc(C(=O)O)cn1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)NC1=NC=C(C=C1)C(=O)O",
                "C1=CC(=CC=C1C(=O)O)N",
                "CCOC(=O)C1=CC=C(C=C1)N",
                "C1=CC=C2C(=C1)C(=O)NC2=O",
                "CC1=NN=C(O1)C(=O)NC2=CC=CC=C2",
                "C1=CC(=O)C=CC1C2=CC=NC=C2",
                "CC(C)(C)OC(=O)NC1=CC=CC=N1",
                "C1=CN=CC=C1C(=O)NC2=CC=CO2",
                "CC1=CC(=O)N(N1)C2=CC=CC=C2Cl",
                "COC1=C(C=CC(=C1)Cl)C(=O)N"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007590532302856445,
            "chemical_diversity": 0.8207709736357174,
            "average_molecular_weight": 178.0704,
            "api_call_time": 15.22111439704895
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=Cc1nc2cccnc2[nH]1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(=O)c1nc2cccnc2[nH]1",
                "O=C(CO)c1nc2cccnc2[nH]1",
                "O=C(CCO)c1nc2cccnc2[nH]1",
                "O=CCc1nc2cccnc2[nH]1",
                "CCCC(=O)c1nc2cccnc2[nH]1",
                "O=C(c1nc2cccnc2[nH]1)C1CC1",
                "O=Cc1nc2cccnc2[nH]1",
                "CC(C)(C)C(=O)c1nc2cccnc2[nH]1",
                "CC(C)C(=O)c1nc2cccnc2[nH]1",
                "CCC(=O)c1nc2cccnc2[nH]1"
            ],
            "total_raw_response_smiles": [
                "O=Cc1nc2cccnc2[nH]1",
                "O=CCc1nc2cccnc2[nH]1",
                "O=C(C)c1nc2cccnc2[nH]1",
                "O=C(CC)c1nc2cccnc2[nH]1",
                "O=C(CCC)c1nc2cccnc2[nH]1",
                "O=C(CO)c1nc2cccnc2[nH]1",
                "O=C(CCO)c1nc2cccnc2[nH]1",
                "O=C(C(C)C)c1nc2cccnc2[nH]1",
                "O=C(C(C)(C)C)c1nc2cccnc2[nH]1",
                "O=C(C1CC1)c1nc2cccnc2[nH]1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008168220520019531,
            "chemical_diversity": 0.41062888393241337,
            "average_molecular_weight": 178.18920000000003,
            "api_call_time": 8.971457242965698
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=Cc1nc2cccnc2[nH]1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(SCC(=O)Nc2ccc(C(=O)O)cc2)s1",
                "CC1(C)OB(c2ccc(S(=O)(=O)N3CCOCC3)cc2)OC1(C)C",
                "COC(=O)C1C(C)NC(=O)C(C)C1c1ccc(OC)cc1",
                "CC(C)Cn1c(=O)c2c(nc(N3CCOCC3)n2C)n(C)c1=O",
                "O=C(Cn1cnc2c(N3CCOCC3)nccc21)N1CCCCC1",
                "CC(=O)N1CCN(C(=O)c2ccc(Cl)cc2)CC1",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Cl)cc1C2",
                "COc1cc(C=NNC(=O)c2ccco2)ccc1O",
                "O=C(NCc1ccncc1)c1ccc(N2CCOCC2)cc1",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3sc(C(=O)N4CCOCC4)cc23)CC1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)N1CCN(C(=O)c2ccc(Cl)cc2)CC1",
                "COc1ccc(C2C(C(=O)OC)C(C)NC(=O)C2C)cc1",
                "CC1(C)OB(c2ccc(S(=O)(=O)N3CCOCC3)cc2)OC1(C)C",
                "O=C(NCc1ccncc1)c1ccc(N2CCOCC2)cc1",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3sc(C(=O)N4CCOCC4)cc23)CC1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(=O)O)cc2)s1",
                "O=C(Cn1cnc2c(N3CCOCC3)nccc21)N1CCCCC1",
                "COc1cc(C=NNC(=O)c2ccco2)ccc1O",
                "CC(C)Cn1c(=O)c2c(nc(N3CCOCC3)n2C)n(C)c1=O",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Cl)cc1C2"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.01240992546081543,
            "chemical_diversity": 0.8580325923253798,
            "average_molecular_weight": 313.84010000000006,
            "api_call_time": 17.20539879798889
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=Cc1nc2cccnc2[nH]1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 6,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=Cc1nc2cccnc2[nH]1",
                "O=Cc1nc2cnccc2[nH]1",
                "OCc1nc2cccnc2[nH]1",
                "O=Cc1nc2ccncc2[nH]1",
                "O=Cc1nc2ccccn2n1",
                "O=Cc1nc2ccccc2[nH]1"
            ],
            "total_raw_response_smiles": [
                "O=Cc1nc2cccnc2[nH]1",
                "O=Cc1nc2ccccc2[nH]1",
                "O=Cc1nc2ccncc2[nH]1",
                "O=Cc1nc2cnccc2[nH]1",
                "O=Cc1nc2ccccn2n1",
                "O=Cc1nc2cccnc2n1",
                "OCC1=NC2=CC=CN=C2N1",
                "O=CC1=NC2=CC=CN=C2[NH]1",
                "O=CC1=NC2=CC=NC=C2N1",
                "O=Cc1[nH]c2ncccc2n1"
            ],
            "validity_ratio": 0.6,
            "post_processing_time": 0.006075859069824219,
            "chemical_diversity": 0.6022099222334865,
            "average_molecular_weight": 147.3083333333333,
            "api_call_time": 7.608571290969849
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'O=Cc1nc2cccnc2[nH]1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1CCc2cncnc2C1",
                "O=C1CCc2nc[nH]c2C1",
                "O=C1CCc2cn[nH]c2C1",
                "O=C1CCc2ccnnc2C1",
                "O=c1[nH]ccc2ccccc12",
                "O=C1NC(=O)c2ccccc21",
                "O=C1NCCc2ccncc21",
                "O=C1CCCc2[nH]cnc21",
                "O=C1CCc2nccnc2C1",
                "O=C1CCc2ncncc2C1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)c2ccccc21",
                "O=C1CCc2nc[nH]c2C1",
                "O=C1NC=Cc2ccccc21",
                "O=C1NCCc2ccncc21",
                "O=C1CCCc2[nH]cnc21",
                "O=C1CCc2cncnc2C1",
                "O=C1CCc2nccnc2C1",
                "O=C1CCc2ccnnc2C1",
                "O=C1CCc2cn[nH]c2C1",
                "O=C1CCc2ncncc2C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007094383239746094,
            "chemical_diversity": 0.7327751201381302,
            "average_molecular_weight": 144.1581,
            "api_call_time": 9.104228734970093
        }
    ],
    "C[C@H]1C[C@@H](Nc2ccc(F)cn2)CO1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1C[C@@H](Nc2ccc(F)cn2)CO1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H]1C[C@@H](Nc2ncc(F)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(F)nc2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(Br)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(F)cc2)CO1",
                "COc1ccc(N[C@H]2CO[C@@H](C)C2)nc1",
                "C[C@H]1C[C@@H](Nc2ccc(C#N)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(C(F)(F)F)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(Cl)cn2)CO1",
                "CSc1ccc(N[C@H]2CO[C@@H](C)C2)nc1",
                "C[C@H]1C[C@@H](Nc2ccc(I)cn2)CO1"
            ],
            "total_raw_response_smiles": [
                "C[C@H]1C[C@@H](Nc2ccc(Cl)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(Br)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(I)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(C#N)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(C(F)(F)F)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(OC)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(SC)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(F)cc2)CO1",
                "C[C@H]1C[C@@H](Nc2ncc(F)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(F)nc2)CO1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008400917053222656,
            "chemical_diversity": 0.4179497956121251,
            "average_molecular_weight": 224.46839999999997,
            "api_call_time": 9.742274761199951
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1C[C@@H](Nc2ccc(F)cn2)CO1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)Oc1cccc(C(=O)NC2CCN(Cc3ccccc3)CC2)c1",
                "COc1cc(OC)c(C(=O)Nc2ccc(N3CCOCC3)cc2)cc1OC",
                "Cn1ncc2c(NC3CCN(C(=O)OC(C)(C)C)CC3)ncnc21",
                "O=C(NCc1ccccc1)c1ccc(Cl)cc1",
                "COc1ccc(C=NNC(=O)c2ccncc2)cc1OC",
                "CCOc1ccc(NC(=O)c2ccc(OC)c(OC)c2)cc1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(C)(C)C)cc2)s1",
                "CCN1C(=O)c2ccccc2C1=O",
                "Cc1cc(C)n2nc(SC(C)(C)C(=O)Nc3ccccc3)nc2n1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1"
            ],
            "total_raw_response_smiles": [
                "CCN1C(=O)c2ccccc2C1=O",
                "O=C(NCc1ccccc1)c1ccc(Cl)cc1",
                "COc1ccc(C=NNC(=O)c2ccncc2)cc1OC",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3c2cnn3C)CC1",
                "CCOc1ccc(NC(=O)c2ccc(OC)c(OC)c2)cc1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(C)(C)C)cc2)s1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "COc1cc(OC)c(C(=O)Nc2ccc(N3CCOCC3)cc2)cc1OC",
                "Cc1cc(C)n2nc(SC(C)(C)C(=O)Nc3ccccc3)nc2n1",
                "CC(C)Oc1cccc(C(=O)NC2CCN(Cc3ccccc3)CC2)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010469198226928711,
            "chemical_diversity": 0.8179539236502869,
            "average_molecular_weight": 306.4128,
            "api_call_time": 14.84607720375061
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1C[C@@H](Nc2ccc(F)cn2)CO1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H]1C[C@@H](Nc2ccc(N)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(Br)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(S(C)(=O)=O)cn2)CO1",
                "Cc1ccc(N[C@H]2CO[C@@H](C)C2)nc1",
                "COc1ccc(N[C@H]2CO[C@@H](C)C2)nc1",
                "C[C@H]1C[C@@H](Nc2ccc(C#N)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(C(F)(F)F)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(Cl)cn2)CO1",
                "CSc1ccc(N[C@H]2CO[C@@H](C)C2)nc1",
                "C[C@H]1C[C@@H](Nc2ccc(I)cn2)CO1"
            ],
            "total_raw_response_smiles": [
                "C[C@H]1C[C@@H](Nc2ccc(Cl)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(Br)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(I)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(C#N)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(C(F)(F)F)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(OC)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(SC)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(N)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(C)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(S(=O)(=O)C)cn2)CO1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008447408676147461,
            "chemical_diversity": 0.33021832340142776,
            "average_molecular_weight": 229.78479999999996,
            "api_call_time": 12.011647939682007
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1C[C@@H](Nc2ccc(F)cn2)CO1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1cc(C(=O)N2CCCC(C(=O)O)C2)no1",
                "O=C(O)c1ccc(NC(=O)C2CC2)c(F)c1",
                "COc1ccc(C(=O)N2CCN(Cc3ccccc3)CC2)cc1OC",
                "Cc1noc(C)c1CN1C(=O)C(=O)c2ccccc21",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Cl)cc1C2",
                "O=C(Cn1cnc2c(N3CCOCC3)ncnc21)N1CCCCC1",
                "COc1cc(C=NNC(=O)c2ccco2)ccc1O",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "CCCn1c(=O)c2c(ncn2C)n(C)c1=O",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "COc1ccc(C(=O)N2CCN(Cc3ccccc3)CC2)cc1OC",
                "Cc1noc(C)c1CN1C(=O)C(=O)c2ccccc21",
                "O=C(Cn1cnc2c(N3CCOCC3)ncnc21)N1CCCCC1",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "CCCn1c(=O)c2c(ncn2C)n(C)c1=O",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Cl)cc1C2",
                "Cc1cc(C(=O)N2CCCC(C(=O)O)C2)no1",
                "O=C(O)c1ccc(NC(=O)C2CC2)c(F)c1",
                "COc1cc(C=NNC(=O)c2ccco2)ccc1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010694265365600586,
            "chemical_diversity": 0.8620002430027122,
            "average_molecular_weight": 272.04740000000004,
            "api_call_time": 14.96671438217163
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1C[C@@H](Nc2ccc(F)cn2)CO1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H]1C[C@@H](Nc2ccc(Br)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(CBr)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(S)cn2)CO1",
                "Cc1ccc(N[C@H]2CO[C@@H](C)C2)nc1",
                "C[C@H]1C[C@@H](Nc2ccc(CCl)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(N)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(O)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(Cl)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(CF)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(I)cn2)CO1"
            ],
            "total_raw_response_smiles": [
                "C[C@H]1C[C@@H](Nc2ccc(Cl)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(Br)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(I)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(C)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(O)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(N)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(S)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(CF)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(CCl)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(CBr)cn2)CO1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008568048477172852,
            "chemical_diversity": 0.30638641526482213,
            "average_molecular_weight": 227.21069999999995,
            "api_call_time": 10.779117107391357
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1C[C@@H](Nc2ccc(F)cn2)CO1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCc1ccco1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2=O",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(Br)s2)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cccs1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(F)(F)F)cc2)o1",
                "Cc1cc(C)n2nc(NC(=O)C3=CCCCC3)nc2n1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccc(F)cc1",
                "CC(=O)N1CCN(c2ccc([N+](=O)[O-])cc2Cl)CC1",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccs1",
                "CC1(C)OB(c2ccc(C#N)cc2)OC1(C)C",
                "COc1ccc(-c2n[nH]c(=O)c3ccccc23)cc1OC"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccc(F)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(Br)s2)CC1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(F)(F)F)cc2)o1",
                "O=C(NCc1ccco1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2=O",
                "COc1ccc(C2=NNC(=O)C3=C2C=CC=C3)cc1OC",
                "CC1(C)OB(c2ccc(C#N)cc2)OC1(C)C",
                "CC(=O)N1CCN(c2ccc([N+](=O)[O-])cc2Cl)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cccs1",
                "Cc1cc(C)n2nc(NC(=O)C3=CCCCC3)nc2n1",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccs1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011350393295288086,
            "chemical_diversity": 0.8841197089275895,
            "average_molecular_weight": 305.5884,
            "api_call_time": 14.732200622558594
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1C[C@@H](Nc2ccc(F)cn2)CO1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H]1C[C@@H](Nc2ncc(F)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(Br)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(F)nn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(S)cn2)CO1",
                "Cc1ccc(N[C@H]2CO[C@@H](C)C2)nc1",
                "C[C@H]1C[C@@H](Nc2ccc(F)cc2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(N)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(O)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(Cl)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(I)cn2)CO1"
            ],
            "total_raw_response_smiles": [
                "C[C@H]1C[C@@H](Nc2ccc(Cl)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(Br)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(I)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(C)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(O)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(N)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(S)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(F)cc2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(F)nn2)CO1",
                "C[C@H]1C[C@@H](Nc2ncc(F)cn2)CO1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008336544036865234,
            "chemical_diversity": 0.38719623113240453,
            "average_molecular_weight": 215.3653,
            "api_call_time": 10.39334487915039
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H]1C[C@@H](Nc2ccc(F)cn2)CO1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H]1C[C@@H](Nc2ccc(I)cn2)CP1",
                "C[C@H]1C[C@@H](Nc2ccc(N)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(Br)nc2)CN1",
                "C[C@H]1C[C@@H](Nc2ccc(Cl)cn2)CS1",
                "C[C@H]1C[C@@H](Nc2ccc(S(C)(=O)=O)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(C(=O)O)cn2)CO1",
                "Cc1cnc(N[C@H]2CC[C@@H](C)C2)cn1",
                "COc1ccc(N[C@H]2CO[C@@H](C)C2)nc1",
                "C[C@H]1C[C@@H](Nc2ccc(C(F)(F)F)cn2)CO1"
            ],
            "total_raw_response_smiles": [
                "C[C@H]1C[C@@H](Nc2ncc(Cl)cc2)CS1",
                "C[C@H]1C[C@@H](Nc2ccc(Br)nc2)CN1",
                "C[C@H]1C[C@@H](Nc2cnc(C)cn2)CC1",
                "C[C@H]1C[C@@H](Nc2ccc(I)cn2)CP1",
                "C[C@H]1C[C@@H](Nc2ccc(C#N)cn2)CF1",
                "C[C@H]1C[C@@H](Nc2ccc(S(C)(=O)=O)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(C(F)(F)F)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(OC)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(C(=O)O)cn2)CO1",
                "C[C@H]1C[C@@H](Nc2ccc(N)cn2)CO1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.00823521614074707,
            "chemical_diversity": 0.5810110882984391,
            "average_molecular_weight": 235.84455555555553,
            "api_call_time": 10.424005031585693
        }
    ],
    "C[C@H](CCCO)CNCC(C)(C)C": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](CCCO)CNCC(C)(C)C', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(CCCO)CNCC(C)(C)C",
                "C[C@H](CCCO)CNCC(C)(C)C",
                "CCC[C@@H](C)CNCC(C)(C)C",
                "C[C@H](CCCO)CN(C)C(C)(C)C",
                "C[C@@H](CCCO)CNCC(C)(C)C",
                "C[C@H](CCCO)CN(C)CC(C)(C)C",
                "C[C@H](CCCN)CNCC(C)(C)C",
                "C[C@H](CCCS)CNCC(C)(C)C",
                "C[C@H](CCCO)CNC(C)(C)C"
            ],
            "total_raw_response_smiles": [
                "C[C@H](CCCO)CNCC(C)(C)C",
                "C[C@H](CCCO)CNC[C@@](C)(C)C",
                "C[C@H](CCCO)CN(C)CC(C)(C)C",
                "C[C@@H](CCCO)CNCC(C)(C)C",
                "C[C@H](CCC)CNCC(C)(C)C",
                "C[C@H](CCCN)CNCC(C)(C)C",
                "C[C@H](CCCS)CNCC(C)(C)C",
                "C[C@H](CCCO)CN(C)C(C)(C)C",
                "CC(CCCO)CNCC(C)(C)C",
                "C[C@H](CCCO)CNC(C)(C)C"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.004880666732788086,
            "chemical_diversity": 0.46226652121895084,
            "average_molecular_weight": 187.2253333333333,
            "api_call_time": 8.733665704727173
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](CCCO)CNCC(C)(C)C', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)NCC1CCCCC1O",
                "CC(C)(C)NCC1CCOC1",
                "C[C@@H]1CCCC(CNCC(C)(C)C)C1",
                "CC(C)(C)NCCC1CCOC1=O",
                "CC(C)(C)NCCC1CCC(O)CC1",
                "C[C@H]1CCCC(CNCC(C)(C)C)O1",
                "C[C@@H](CNCC(C)(C)C)C1CCCO1",
                "C[C@H]1CCC(CNCC(C)(C)C)CO1",
                "CC(C)(C)NCC1CCC(CO)O1",
                "C[C@@H](CNCC(C)(C)C)C1CCCS1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)NCC1CCCCC1O",
                "C[C@@H]1CCCC(CNCC(C)(C)C)C1",
                "CC(C)(C)NCCC1CCC(O)CC1",
                "C[C@H]1CCC(CNCC(C)(C)C)CO1",
                "CC(C)(C)NCC1CCOC1",
                "C[C@@H](CNCC(C)(C)C)C1CCCO1",
                "CC(C)(C)NCCC1CCOC1=O",
                "C[C@H]1CCCC(CNCC(C)(C)C)O1",
                "CC(C)(C)NCC1CCC(CO)O1",
                "C[C@@H](CNCC(C)(C)C)C1CCCS1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00660395622253418,
            "chemical_diversity": 0.7000852098430362,
            "average_molecular_weight": 192.52419999999995,
            "api_call_time": 9.298272371292114
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](CCCO)CNCC(C)(C)C', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 7,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H](CCCO)CNCC(C)(C)CF",
                "C[C@H](CCCO)CNCC(C)(C)C",
                "C[C@H](CCCF)CNCC(C)(C)C",
                "CC(NC[C@H](C)CCCO)C(C)(C)C",
                "C[C@H](CCCO)CN(C)CC(C)(C)C",
                "C[C@H](CCCS)CNCC(C)(C)C",
                "C[C@H](CCCO)CNC(C)(C)C"
            ],
            "total_raw_response_smiles": [
                "C[C@H](CCCO)CNCC(C)(C)C",
                "C[C@H](CCCS)CNCC(C)(C)C",
                "C[C@H](CCCF)CNCC(C)(C)C",
                "C[C@H](CCCO)CNC(C)(C)C",
                "C[C@H](CCCO)CNCC(C)(C)CF",
                "C[C@H](CCCO)CNCC(C)(CF)C",
                "C[C@H](CCCO)CNCC(CF)(C)C",
                "C[C@H](CCCO)CNC(C)C(C)(C)C",
                "C[C@H](CCCO)CN(C)CC(C)(C)C",
                "C[C@H](CCCO)CN(CC(C)(C)C)C"
            ],
            "validity_ratio": 0.7,
            "post_processing_time": 0.0044324398040771484,
            "chemical_diversity": 0.5158440853819004,
            "average_molecular_weight": 194.4807142857143,
            "api_call_time": 9.064560890197754
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](CCCO)CNCC(C)(C)C', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)OC(=O)NC1=O",
                "CCOC(=O)C(F)(F)C(=O)NCC1CCCO1",
                "O=C1CCCC(=O)N1CCc1ccc(Cl)cc1",
                "O=C(c1cccs1)N1CCOCC1",
                "O=C1NC(=O)C(=O)N1",
                "C#CC(O)(CC(C)C)C(=O)N1CCOCC1",
                "CC(C)(C)C1=CC(=O)C=C(O)C1=O",
                "CC(C)CC(NC(=O)C(F)(F)F)C(=O)N1CCCC1",
                "O=C(O)C1CCCN1C(=O)C1CC1",
                "COc1ccc(S(=O)(=O)N2CCN(C)CC2)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)N1",
                "C1COCCN1C(=O)c1cccs1",
                "CC(C)(C)C1=CC(=O)C=C(O)C1=O",
                "O=C(O)C1CCCN1C(=O)C1CC1",
                "C#CC(O)(CC(C)C)C(=O)N1CCOCC1",
                "CCOC(=O)C(F)(F)C(=O)NCC1CCCO1",
                "CC1(C)OC(=O)NC1=O",
                "O=C1CCCC(=O)N1CCc1ccc(Cl)cc1",
                "CC(C)CC(NC(=O)C(F)(F)F)C(=O)N1CCCC1",
                "COc1ccc(S(=O)(=O)N2CCN(C)CC2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0073893070220947266,
            "chemical_diversity": 0.8970826590435268,
            "average_molecular_weight": 208.27179999999993,
            "api_call_time": 12.448672771453857
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](CCCO)CNCC(C)(C)C', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCCC(CC)(CCCC)CNC[C@H](C)CCCO",
                "CCCCC(CCC)(CCCC)CNC[C@H](C)CCCO",
                "C[C@H](CCCO)CNCC(C)(C)C",
                "CCCC(C)(CCC)CNC[C@H](C)CCCO",
                "CCCCC(C)(CCCC)CNC[C@H](C)CCCO",
                "CCC(CC)(CC)CNC[C@H](C)CCCO",
                "CCC(C)(C)CNC[C@H](C)CCCO",
                "CCC(C)(CC)CNC[C@H](C)CCCO",
                "CCCC(CC)(CCC)CNC[C@H](C)CCCO",
                "CCCC(CCC)(CCC)CNC[C@H](C)CCCO"
            ],
            "total_raw_response_smiles": [
                "C[C@H](CCCO)CNCC(C)(C)C",
                "C[C@H](CCCO)CNCC(C)(C)CC",
                "C[C@H](CCCO)CNCC(C)(CC)CC",
                "C[C@H](CCCO)CNCC(CC)(CC)CC",
                "C[C@H](CCCO)CNCC(C)(CCC)CCC",
                "C[C@H](CCCO)CNCC(CC)(CCC)CCC",
                "C[C@H](CCCO)CNCC(CCC)(CCC)CCC",
                "C[C@H](CCCO)CNCC(C)(CCCC)CCCC",
                "C[C@H](CCCO)CNCC(CC)(CCCC)CCCC",
                "C[C@H](CCCO)CNCC(CCC)(CCCC)CCCC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006570100784301758,
            "chemical_diversity": 0.3045218969495327,
            "average_molecular_weight": 246.2404,
            "api_call_time": 9.000926733016968
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](CCCO)CNCC(C)(C)C', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(CSc1nnc(-c2ccco2)o1)Nc1ccc(Br)cc1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cccs1",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccc(O)c1",
                "CC(=O)N1CCN(C(=O)Cc2ccc(F)cc2)CC1",
                "Cc1ccc(NC(=O)c2cc(C(F)(F)F)nn2C)cc1Cl",
                "Cc1cc(C)n2nc(C(=O)Nc3ccc(F)cc3)nc2n1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "CC(C)(C)c1cc(=O)cc(-c2ccc(F)cc2)o1",
                "COc1cc(C=NNC(=O)c2ccncc2)ccc1O",
                "COc1ccc(-c2n[nH]c(=O)c3c2C=C(C)OC3)cc1OC"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccc(Cl)cc1",
                "CC(C)(C)C1=CC(=O)C=C(c2ccc(F)cc2)O1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cccs1",
                "COc1ccc(C2=NNC(=O)C3=C2C=C(C)OC3)cc1OC",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccc(O)c1",
                "Cc1cc(C)n2nc(C(=O)Nc3ccc(F)cc3)nc2n1",
                "O=C(CSc1nnc(-c2ccco2)o1)Nc1ccc(Br)cc1",
                "Cc1ccc(NC(=O)c2cc(C(F)(F)F)nn2C)cc1Cl",
                "COc1cc(C=NNC(=O)c2ccncc2)ccc1O",
                "CC(=O)N1CCN(C(=O)Cc2ccc(F)cc2)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011365413665771484,
            "chemical_diversity": 0.8486569722463156,
            "average_molecular_weight": 297.98359999999997,
            "api_call_time": 15.696260929107666
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](CCCO)CNCC(C)(C)C', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 6,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H](CCCO)CNCC(C)(C)O",
                "C[C@H](CCCO)CNCC(C)(C)C",
                "C[C@H](CCCO)CNCC(C)(C)F",
                "C[C@H](CCCO)CNCC(C)(C)N",
                "C[C@H](CCCS)CNCC(C)(C)C",
                "C[C@H](CCCO)CNC(C)(C)C"
            ],
            "total_raw_response_smiles": [
                "C[C@H](CCCO)CNCC(C)(C)C",
                "C[C@H](CCCS)CNCC(C)(C)C",
                "C[C@H](CCCO)CNCC(C)(C)O",
                "C[C@H](CCCO)CNCC(C)(C)N",
                "C[C@H](CCCO)CNCC(C)(C)F",
                "C[C@H](CCCO)CNCC(C)(F)C",
                "C[C@H](CCCO)CNCC(O)(C)C",
                "C[C@H](CCCO)CNCC(N)(C)C",
                "C[C@H](CCCO)CNCC(F)(C)C",
                "C[C@H](CCCO)CNC(C)(C)C"
            ],
            "validity_ratio": 0.6,
            "post_processing_time": 0.004142284393310547,
            "chemical_diversity": 0.39017925561029,
            "average_molecular_weight": 188.821,
            "api_call_time": 8.227257251739502
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](CCCO)CNCC(C)(C)C', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 6,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H](CCC[Si])CNCC(C)(C)C",
                "C[C@H](CCCO)CNCC(C)(C)C",
                "C[C@H](CCCO)CSCC(C)(C)C",
                "C[C@H](CCC#N)CNCC(C)(C)C",
                "C[C@H](CCC[Se])CNCC(C)(C)C",
                "C[C@H](CCCS)CNCC(C)(C)C"
            ],
            "total_raw_response_smiles": [
                "C[C@H](CCCS)CNCC(C)(C)C",
                "C[C@H](CCC=O)CNC=C(C)(C)C",
                "C[C@H](CCCO)CNC[C@H](C)(C)C",
                "C[C@H](CCC#N)CNCC(C)(C)C",
                "C[C@H](CCCO)CSCC(C)(C)C",
                "C[C@H](CCCO)CN[C@@H](C)(C)C",
                "C[C@H](CCC[Si])CNCC(C)(C)C",
                "C[C@H](CCCO)CNC1(C)(C)C1",
                "C[C@H](CCCO)CNC[C@](C)(C)C",
                "C[C@H](CCC[Se])CNCC(C)(C)C"
            ],
            "validity_ratio": 0.6,
            "post_processing_time": 0.0036530494689941406,
            "chemical_diversity": 0.47292401656728034,
            "average_molecular_weight": 204.183,
            "api_call_time": 11.326601028442383
        }
    ],
    "N#CCOC(=O)c1cc(F)c[nH]1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'N#CCOC(=O)c1cc(F)c[nH]1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "N#CCOC(=O)c1cc(Br)c[nH]1",
                "COc1c[nH]c(C(=O)OCC#N)c1",
                "N#CCOC(=O)c1cc(F)c[nH]c1=O",
                "N#CCOC(=O)c1cc(I)c[nH]1",
                "CSc1c[nH]c(C(=O)OCC#N)c1",
                "N#CCOC(=O)c1cc(C(F)(F)F)c[nH]1",
                "Cn1cc(F)cc1C(=O)OCC#N",
                "N#CCOC(=O)c1cc(Cl)c[nH]1",
                "N#CCOC(=O)c1cc(C#N)c[nH]1"
            ],
            "total_raw_response_smiles": [
                "N#CCOC(=O)c1cc(Cl)c[nH]1",
                "N#CCOC(=O)c1cc(Br)c[nH]1",
                "N#CCOC(=O)c1cc(I)c[nH]1",
                "N#CCOC(=O)c1cc(C#N)c[nH]1",
                "N#CCOC(=O)c1cc(C(F)(F)F)c[nH]1",
                "N#CCOC(=O)c1cc(OC)c[nH]1",
                "N#CCOC(=O)c1cc(SC)c[nH]1",
                "N#CCOC(=O)c1cc(F)c(C)n1",
                "N#CCOC(=O)c1cc(F)cn1C",
                "N#CCOC(=O)c1cc(F)c[nH]c1=O"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.006145954132080078,
            "chemical_diversity": 0.4402556259622229,
            "average_molecular_weight": 204.17933333333332,
            "api_call_time": 9.10639500617981
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'N#CCOC(=O)c1cc(F)c[nH]1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCc1ccc(F)cc1)c1ccco1",
                "O=C1CC(c2ccc(F)cc2)Oc2ccccc21",
                "O=C(Nc1ccc(F)cc1)c1ccoc1",
                "O=C(Nc1ccc(F)cc1)c1cncs1",
                "O=C(Nc1ccc(F)cc1)c1cccs1",
                "O=C(NCc1ccc(F)cc1)c1cccs1",
                "O=C(Nc1ccc(F)cc1)c1ccsc1",
                "O=C(Nc1ccc(F)cc1)c1ccc2c(c1)OCO2",
                "O=C1NC(=O)C(c2ccc(F)cc2)=C1c1ccccc1",
                "O=C(Nc1ccc(F)cc1)c1cccnc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccc(F)cc2)=C1c1ccccc1",
                "O=C(Nc1ccc(F)cc1)c1ccc2c(c1)OCO2",
                "O=C(NCc1ccc(F)cc1)c1ccco1",
                "O=C(Nc1ccc(F)cc1)c1cccs1",
                "O=C(Nc1ccc(F)cc1)c1cccnc1",
                "O=C(Nc1ccc(F)cc1)c1ccsc1",
                "O=C(NCc1ccc(F)cc1)c1cccs1",
                "O=C1CC(c2ccc(F)cc2)Oc2ccccc21",
                "O=C(Nc1ccc(F)cc1)c1ccoc1",
                "O=C(Nc1ccc(F)cc1)c1cncs1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010181427001953125,
            "chemical_diversity": 0.6648145355275329,
            "average_molecular_weight": 230.94009999999997,
            "api_call_time": 11.587231397628784
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'N#CCOC(=O)c1cc(F)c[nH]1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "N#CCOC(=O)c1cc(Br)c[nH]1",
                "COc1c[nH]c(C(=O)OCC#N)c1",
                "N#CCOC(=O)c1cc(I)c[nH]1",
                "Cc1c[nH]c(C(=O)OCC#N)c1",
                "CSc1c[nH]c(C(=O)OCC#N)c1",
                "N#CCOC(=O)c1cc(N)c[nH]1",
                "N#CCOC(=O)c1cc(Cl)c[nH]1",
                "N#CCOC(=O)c1cc(F)c[nH]1",
                "N#CCOC(=O)c1cc(C#N)c[nH]1"
            ],
            "total_raw_response_smiles": [
                "N#CCOC(=O)c1cc(F)c[nH]1",
                "N#CCOC(=O)c1cc(Cl)c[nH]1",
                "N#CCOC(=O)c1cc(Br)c[nH]1",
                "N#CCOC(=O)c1cc(I)c[nH]1",
                "N#CCOC(=O)c1cc(C#N)c[nH]1",
                "N#CCOC(=O)c1cc(OC)c[nH]1",
                "N#CCOC(=O)c1cc(SC)c[nH]1",
                "N#CCOC(=O)c1cc(N)c[nH]1",
                "N#CCOC(=O)c1cc(C)c[nH]1",
                "N#CCOC(=O)c1cc(CF3)c[nH]1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.00629734992980957,
            "chemical_diversity": 0.3333779376542534,
            "average_molecular_weight": 193.18133333333333,
            "api_call_time": 7.809591054916382
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'N#CCOC(=O)c1cc(F)c[nH]1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)O[C@@H]2[C@@H](CO[C@]3(COS(N)(=O)=O)OC(C)(C)O[C@@H]23)O1",
                "O=C(O[C@H]1CN2CCC1CC2)c1c[nH]c2ccccc12",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "CC(C)NCC(O)COc1ccccc1C#N",
                "CC(=O)SCc1ccccc1N=C=S",
                "CC(C)(C)OC(=O)NCCCCNC(=O)c1ccccc1",
                "O=C(O)C1(C(=O)O)CC1(Cl)Cl",
                "COc1ccc(C=NNC(=O)c2ccco2)cc1O",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "O=C(O)C1(C(=O)O)CC1(Cl)Cl",
                "COc1ccc(C=NNC(=O)c2ccco2)cc1O",
                "CC(C)(C)OC(=O)NCCCCNC(=O)c1ccccc1",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "CC1(C)O[C@@H]2CO[C@]3(COS(N)(=O)=O)OC(C)(C)O[C@H]3[C@@H]2O1",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "O=C(O[C@H]1CN2CCC1CC2)c1c[nH]c2ccccc12",
                "CC(C)NCC(O)COc1ccccc1C#N",
                "CC(=O)SCc1ccccc1N=C=S"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009886503219604492,
            "chemical_diversity": 0.8969502512986102,
            "average_molecular_weight": 259.1821,
            "api_call_time": 14.706270694732666
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'N#CCOC(=O)c1cc(F)c[nH]1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "N#CCOC(=O)c1cc(S)c[nH]1",
                "N#CCOC(=O)c1cc(Br)c[nH]1",
                "COc1c[nH]c(C(=O)OCC#N)c1",
                "N#CCOC(=O)c1cc(I)c[nH]1",
                "Cc1c[nH]c(C(=O)OCC#N)c1",
                "N#CCOC(=O)c1cc(O)c[nH]1",
                "N#CCOC(=O)c1cc(N)c[nH]1",
                "N#CCOC(=O)c1cc(Cl)c[nH]1",
                "N#CCOC(=O)c1cc(C#N)c[nH]1"
            ],
            "total_raw_response_smiles": [
                "N#CCOC(=O)c1cc(Cl)c[nH]1",
                "N#CCOC(=O)c1cc(Br)c[nH]1",
                "N#CCOC(=O)c1cc(I)c[nH]1",
                "N#CCOC(=O)c1cc(C#N)c[nH]1",
                "N#CCOC(=O)c1cc(OC)c[nH]1",
                "N#CCOC(=O)c1cc(C)c[nH]1",
                "N#CCOC(=O)c1cc(CF3)c[nH]1",
                "N#CCOC(=O)c1cc(N)c[nH]1",
                "N#CCOC(=O)c1cc(S)c[nH]1",
                "N#CCOC(=O)c1cc(O)c[nH]1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.005899906158447266,
            "chemical_diversity": 0.3183811703548546,
            "average_molecular_weight": 191.40155555555555,
            "api_call_time": 11.624452829360962
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'N#CCOC(=O)c1cc(F)c[nH]1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCc1ccco1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2=O",
                "COc1cc(C=NNC(=O)c2cc(C)on2)ccc1O",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(Br)s2)CC1",
                "O=C(Nc1ccc(C(F)(F)F)cc1)C1=CC=CN2C(=O)C=CC12",
                "Cc1cc(C(=O)CSc2nnc(-c3ccco3)o2)c[nH]1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(F)cc1",
                "CC(C)Cn1c(=O)c(-c2cccs2)nc2cnc(N)nc21",
                "CC1(C)CC(=O)c2c([nH]c3ccc(S(=O)(=O)N4CCOCC4)cc23)C1",
                "COc1ccc(-c2n[nH]c(=O)c3ccccc23)cc1OC",
                "Cc1nnc(SCC(=O)Nc2ccc(C#N)cc2)n1C"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(F)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(Br)s2)CC1",
                "Cc1nnc(SCC(=O)Nc2ccc(C#N)cc2)n1C",
                "O=C(NCc1ccco1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2=O",
                "COc1ccc(C2=NNC(=O)C3=C2C=CC=C3)cc1OC",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(S(=O)(=O)N3CCOCC3)cc12",
                "Cc1cc(C(=O)CSc2nnc(-c3ccco3)o2)c[nH]1",
                "O=C(Nc1ccc(C(F)(F)F)cc1)C1=CC=CN2C(=O)C=CC12",
                "CC(C)Cn1c(=O)c(-c2cccs2)nc2cnc(N)nc21",
                "COc1cc(C=NNC(=O)c2cc(C)on2)ccc1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012340784072875977,
            "chemical_diversity": 0.8795636087992799,
            "average_molecular_weight": 318.47260000000006,
            "api_call_time": 17.24475359916687
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'N#CCOC(=O)c1cc(F)c[nH]1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "N#CCOC(=O)c1cc(Br)c[nH]1",
                "N#CCOC(=O)c1cc(F)c(F)[nH]1",
                "Cc1[nH]c(C(=O)OCC#N)cc1F",
                "N#CCOC(=O)c1cc(I)c[nH]1",
                "Cc1c[nH]c(C(=O)OCC#N)c1",
                "N#CCOC(=O)c1cc(O)c[nH]1",
                "N#CCOC(=O)c1cc(Cl)c[nH]1",
                "N#CCSC(=O)c1cc(F)c[nH]1",
                "N#CCOC(=O)c1cc(C#N)c[nH]1"
            ],
            "total_raw_response_smiles": [
                "N#CCOC(=O)c1cc(Cl)c[nH]1",
                "N#CCOC(=O)c1cc(Br)c[nH]1",
                "N#CCOC(=O)c1cc(I)c[nH]1",
                "N#CCOC(=O)c1cc(C#N)c[nH]1",
                "N#CCOC(=O)c1cc(O)c[nH]1",
                "N#CCOC(=O)c1cc(C)c[nH]1",
                "N#CCOC(=O)c1cc(F)c(C)[nH]1",
                "N#CCOC(=O)c1cc(F)c(F)[nH]1",
                "N#CCOC(=O)c1cc(F)cn1",
                "N#CCSC(=O)c1cc(F)c[nH]1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.004671812057495117,
            "chemical_diversity": 0.45058039789439186,
            "average_molecular_weight": 194.1734444444444,
            "api_call_time": 8.31461501121521
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'N#CCOC(=O)c1cc(F)c[nH]1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "N#CCOC(=O)c1cc(Br)c[nH]1",
                "N#CCOC(=O)c1cc(C=O)c[nH]1",
                "N#CCOC(=O)c1cc(N)c[nH]1",
                "N#CCOC(=O)c1cc(I)c[nH]1",
                "Cc1c[nH]c(C(=O)OCC#N)c1",
                "N#CCOC(=O)c1cc(O)c[nH]1",
                "N#CCSC(=O)c1cc(Cl)c[nH]1",
                "N#CCOC(=O)c1cc(S)c[nH]1",
                "N#CCOC(=O)c1cc(C#N)c[nH]1"
            ],
            "total_raw_response_smiles": [
                "N#CCSC(=O)c1cc(Cl)c[nH]1",
                "N#CCOC(=O)c1cc(Br)c[nH]1",
                "N#CCOC(=O)c1cc(I)c[nH]1",
                "N#CCOC(=O)c1cc(C#N)c[nH]1",
                "N#CCOC(=O)c1cc(C=O)c[nH]1",
                "N#CCOC(=O)c1cc(O)c[nH]1",
                "N#CCOC(=O)c1cc(S)c[nH]1",
                "N#CCOC(=O)c1cc(N)c[nH]1",
                "N#CCOC(=O)c1cc(C)c[nH]1",
                "N#CCOC(=O)c1cc(CF3)c[nH]1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.002725362777709961,
            "chemical_diversity": 0.39279623186945833,
            "average_molecular_weight": 192.96288888888887,
            "api_call_time": 10.034024477005005
        }
    ],
    "CCC(C)(C)N(C)CC1CCNCC1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(C)(C)N(C)CC1CCNCC1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(C)(C)N(C)CC1CCCCNC1",
                "CCC(C)(C)NC1CCNCC1",
                "CCC(C)(C)N(C)CC1CCNCC1",
                "CCC(C)(C)N(C)CC1CCNC1",
                "CCC(C)(C)N(C)C1CCNCC1",
                "CCC(C)(C)N(C)CC1CCCCC1",
                "CCC(C)(C)N(C)CC1CCCNC1",
                "CN(CC1CCNCC1)C(C)(C)C",
                "CCC(C)(C)N1CCNCC1"
            ],
            "total_raw_response_smiles": [
                "CCC(C)(C)N(C)CC1CCNCC1",
                "CCC(C)(C)N(C)CC1CCNC1",
                "CCC(C)(C)N(C)CC1CCCCNC1",
                "CCC(C)(C)N(C)CC1CCCNC1",
                "CCC(C)(C)N(C)CC1CNCCC1",
                "CCC(C)(C)N(C)CC1CCCCC1",
                "CCC(C)(C)N(C)C1CCNCC1",
                "CCC(C)(C)NC1CCNCC1",
                "CC(C)(C)N(C)CC1CCNCC1",
                "CCC(C)(C)N1CCNCC1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.005810737609863281,
            "chemical_diversity": 0.5318722847395281,
            "average_molecular_weight": 187.3343333333333,
            "api_call_time": 7.297178745269775
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(C)(C)N(C)CC1CCNCC1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(SCC(=O)Nc2ccc(C(=O)O)cc2)s1",
                "CC(=O)Nc1ccc(NC(=O)c2ccc(CN3CCOCC3)cc2)cc1",
                "Cc1ccc(NC(=O)CSc2nnc(-c3ccncc3)o2)cc1",
                "CC1(C)CC(=O)c2c(nc(S)n(-c3ccccc3)c2=O)C1",
                "O=C(CN1CCOCC1)Nc1ccc(Nc2nc3ccccc3o2)cc1",
                "COc1ccc(C=NNC(=O)c2cc(OC)c(OC)c(OC)c2)cc1OC",
                "COc1cc(C=C2C(=O)NC(=S)NC2=O)ccc1O",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(F)cc2)CC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccc(Cl)cc1",
                "CC1(C)CC(=O)C2=C(C1)N=C(S)N(c1ccccc1)C2=O",
                "COc1ccc(C=NNC(=O)c2cc(OC)c(OC)c(OC)c2)cc1OC",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(F)cc2)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(=O)O)cc2)s1",
                "COc1cc(C=C2C(=O)NC(=S)NC2=O)ccc1O",
                "Cc1ccc(NC(=O)CSc2nnc(-c3ccncc3)o2)cc1",
                "O=C(CN1CCOCC1)Nc1ccc(Nc2nc3ccccc3o2)cc1",
                "CC(=O)Nc1ccc(NC(=O)c2ccc(CN3CCOCC3)cc2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.01129603385925293,
            "chemical_diversity": 0.8347532847623811,
            "average_molecular_weight": 322.3070000000001,
            "api_call_time": 16.362725734710693
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(C)(C)N(C)CC1CCNCC1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(C)(C)N(C)CC1CCNC(=O)C1",
                "CCC(C)(C)N(C)CC1CCNCC1",
                "CCC(C)(C)N(C)CC1CCNC(Br)C1",
                "CCC(C)(C)N(C)CC1CCNC(O)C1",
                "CCC(C)(C)N(C)CC1CCN(O)CC1",
                "CCC(C)(C)N(C)CC1CCN(C)CC1",
                "CCC(C)(C)N(C)CC1CCNC(N)C1",
                "CCC(C)(C)N(C)CC1CCNC(=S)C1",
                "CCC(C)(C)N(C)CC1CCNC(F)C1",
                "CCC(C)(C)N(C)CC1CCNC(Cl)C1"
            ],
            "total_raw_response_smiles": [
                "CCC(C)(C)N(C)CC1CCNCC1",
                "CCC(C)(C)N(C)CC1CCNC(=O)C1",
                "CCC(C)(C)N(C)CC1CCNC(=S)C1",
                "CCC(C)(C)N(C)CC1CCN(C)CC1",
                "CCC(C)(C)N(C)CC1CCN(O)CC1",
                "CCC(C)(C)N(C)CC1CCNC(O)C1",
                "CCC(C)(C)N(C)CC1CCNC(N)C1",
                "CCC(C)(C)N(C)CC1CCNC(F)C1",
                "CCC(C)(C)N(C)CC1CCNC(Cl)C1",
                "CCC(C)(C)N(C)CC1CCNC(Br)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00647282600402832,
            "chemical_diversity": 0.42471080403869854,
            "average_molecular_weight": 221.99449999999996,
            "api_call_time": 10.002946853637695
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(C)(C)N(C)CC1CCNCC1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCCCN1CCOCC1)c1ccc(C(=O)c2cccs2)s1",
                "CC1(C)Oc2ccc(C#N)cc2C(=O)[C@@]1(O)CN1CCOCC1",
                "C[C@H]1CC[C@H](C(=O)N[C@@H](Cc2ccccc2)C(=O)O)CC1",
                "O=C(O)COc1ccc(Cl)cc1C(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "CC1(C)CC(=O)c2c(nc(S)n(-c3ccccc3)c2=O)C1",
                "COc1ccc(C[C@H](N)C(=O)N[C@H]2C[C@H](O)CN2C(=O)[C@H](N)Cc2ccc(O)cc2)cc1",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "Cc1cc(C)c2c(c1)C(=O)C(=O)c1c-2ccc2c1CCCC2(C)C",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(-c3ccccc3)cc2)CC1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccc(Cl)cc1",
                "CC1(C)CC(=O)C2=C(C1)N=C(S)N(c1ccccc1)C2=O",
                "C[C@H]1CC[C@H](C(=O)N[C@@H](Cc2ccccc2)C(=O)O)CC1",
                "Cc1cc(C)c2c(c1)C(=O)C(=O)c1c-2ccc2c1CCCC2(C)C",
                "O=C(NCCCN1CCOCC1)c1ccc(C(=O)c2cccs2)s1",
                "COc1ccc(C[C@H](N)C(=O)N[C@H]2C[C@H](O)CN2C(=O)[C@H](N)Cc2ccc(O)cc2)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(-c3ccccc3)cc2)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1cc(Cl)ccc1OCC(=O)O",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "CC1(C)Oc2ccc(C#N)cc2C(=O)[C@@]1(O)CN1CCOCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012005090713500977,
            "chemical_diversity": 0.8673431491878681,
            "average_molecular_weight": 338.6904000000001,
            "api_call_time": 21.947603464126587
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(C)(C)N(C)CC1CCNCC1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(C)(C)N(C)CC1CCCCNCC1",
                "CCC(C)(C)N(C)CC1CCCCCCCCCNCC1",
                "CCC(C)(C)N(C)CC1CCNCC1",
                "CCC(C)(C)N(C)CC1CCCCCNCC1",
                "CCC(C)(C)N(C)CC1CCNC1",
                "CCC(C)(C)N(C)CC1CCCNCC1",
                "CCC(C)(C)N(C)CC1CCCCCCCNCC1",
                "CN(CC1CCNCC1)C(C)(C)C",
                "CCN(CC1CCNCC1)C(C)(C)CC",
                "CCCC(C)(C)N(C)CC1CCNCC1"
            ],
            "total_raw_response_smiles": [
                "CCC(C)(C)N(C)CC1CCNCC1",
                "CCCC(C)(C)N(C)CC1CCNCC1",
                "CC(C)(C)N(C)CC1CCNCC1",
                "CCC(C)(C)N(CC)CC1CCNCC1",
                "CCC(C)(C)N(C)CC1CCNC1",
                "CCC(C)(C)N(C)CC1CCNCCC1",
                "CCC(C)(C)N(C)CC1CCNCCCC1",
                "CCC(C)(C)N(C)CC1CCNCCCCC1",
                "CCC(C)(C)N(C)CC1CCNCCCCCCC1",
                "CCC(C)(C)N(C)CC1CCNCCCCCCCCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006778717041015625,
            "chemical_diversity": 0.282686210462921,
            "average_molecular_weight": 223.6026,
            "api_call_time": 7.9567482471466064
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(C)(C)N(C)CC1CCNCC1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(SCC2=C(C(=O)O)CCCC2)s1",
                "CC(C)(C)OC(=O)N1CCN(c2ncccn2)CC1",
                "CC(C)Cn1cnc(N)c1C#N",
                "O=C(O)C1=CN(Cc2ccncc2)C=C(C(=O)O)C1",
                "CC1=NN(c2cc(C(F)(F)F)cc(C(F)(F)F)c2)C(=O)C1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "O=C1CSC(c2cccc(C(F)(F)F)c2)=N1",
                "CC1(C)OB(c2ccc(F)cc2)OC1(C)C",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "COc1ccc(-c2n[nH]c(=O)c3ccccc23)cc1OC"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccc(Cl)cc1",
                "CC1(C)OB(c2ccc(F)cc2)OC1(C)C",
                "CC(C)(C)OC(=O)N1CCN(c2ncccn2)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "COc1ccc(C2=NNC(=O)C3=C2C=CC=C3)cc1OC",
                "CC1=NN(c2cc(C(F)(F)F)cc(C(F)(F)F)c2)C(=O)C1",
                "O=C(O)C1=CN(Cc2ccncc2)C=C(C(=O)O)C1",
                "Cc1nnc(SCC2=C(C(=O)O)CCCC2)s1",
                "O=C1CSC(c2cccc(C(F)(F)F)c2)=N1",
                "CC(C)Cn1cnc(N)c1C#N"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010039091110229492,
            "chemical_diversity": 0.8934794749218415,
            "average_molecular_weight": 263.9041,
            "api_call_time": 16.201674461364746
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(C)(C)N(C)CC1CCNCC1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(C)(C)N(C)CC1CCNCC1",
                "CCC(C)(C)N(C)CC1CCNCC1Br",
                "CCC(C)(C)N(C)CC1CCNCC1S",
                "CCC(C)(C)N(C)CC1CCNCC1N",
                "CCC(C)(C)N(C)CC1CCNCC1C",
                "CCC(C)(C)N(C)CC1CCNC1",
                "CCC(C)(C)N(C)CC1CCNCC1F",
                "CCC(C)(C)N(C)CC1CCNCC1I",
                "CCC(C)(C)N(C)CC1CCNCC1O",
                "CCC(C)(C)N(C)CC1CCNCC1Cl"
            ],
            "total_raw_response_smiles": [
                "CCC(C)(C)N(C)CC1CCNCC1",
                "CCC(C)(C)N(C)CC1CCNC1",
                "CCC(C)(C)N(C)CC1CCNCC1O",
                "CCC(C)(C)N(C)CC1CCNCC1F",
                "CCC(C)(C)N(C)CC1CCNCC1Cl",
                "CCC(C)(C)N(C)CC1CCNCC1Br",
                "CCC(C)(C)N(C)CC1CCNCC1I",
                "CCC(C)(C)N(C)CC1CCNCC1S",
                "CCC(C)(C)N(C)CC1CCNCC1N",
                "CCC(C)(C)N(C)CC1CCNCC1C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006722450256347656,
            "chemical_diversity": 0.33104011279449874,
            "average_molecular_weight": 230.38479999999996,
            "api_call_time": 8.02709174156189
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(C)(C)N(C)CC1CCNCC1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(C)(C)N(C)Cc1ccccc1",
                "CCC(C)(C)N(C)CC1CCNC(=O)C1",
                "CCC(C)(C)N(C)CC1CCSCC1",
                "CCC(C)(C)N(C)CC1CCNC1",
                "CCC(C)(C)N(C)CC1CCN(C)CC1",
                "CCC(C)(C)N(C)CC1CCOC1",
                "CCC(C)(C)N(C)CC1CCNC(=S)C1",
                "CCC(C)(C)N(C)CC1CCSC1",
                "CCC(C)(C)N(C)CC1CCOCC1",
                "CCC(C)(C)N(C)CC1CCCO1"
            ],
            "total_raw_response_smiles": [
                "CCC(C)(C)N(C)Cc1ccccc1",
                "CCC(C)(C)N(C)CC1CCOCC1",
                "CCC(C)(C)N(C)CC1CCSC1",
                "CCC(C)(C)N(C)CC1CCOC1",
                "CCC(C)(C)N(C)CC1CCSCC1",
                "CCC(C)(C)N(C)CC1CCNC1",
                "CCC(C)(C)N(C)CC1CCCO1",
                "CCC(C)(C)N(C)CC1CCNC(=O)C1",
                "CCC(C)(C)N(C)CC1CCNC(=S)C1",
                "CCC(C)(C)N(C)CC1CCN(C)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0061550140380859375,
            "chemical_diversity": 0.5151209557635505,
            "average_molecular_weight": 201.55129999999994,
            "api_call_time": 8.165382623672485
        }
    ],
    "CCNc1ncc2c(n1)CCCC2": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCNc1ncc2c(n1)CCCC2', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCNc1ncc2c(n1)CCCC2",
                "CCNc1ncc2c(n1)CCCC2C",
                "CCNc1ncc2c(n1)CCCC2N",
                "CCNc1ncc2c(n1)CCCC2S",
                "CCNc1ncc2c(n1)CCCC2O",
                "CCNc1ncc2c(n1)CCCC2P",
                "CCNc1ncc2c(n1)CCCC2Br",
                "CCNc1ncc2c(n1)CCCC2I",
                "CCNc1ncc2c(n1)CCCC2Cl",
                "CCNc1ncc2c(n1)CCCC2F"
            ],
            "total_raw_response_smiles": [
                "CCNc1ncc2c(n1)CCCC2",
                "CCNc1ncc2c(n1)CCCC2O",
                "CCNc1ncc2c(n1)CCCC2N",
                "CCNc1ncc2c(n1)CCCC2F",
                "CCNc1ncc2c(n1)CCCC2Cl",
                "CCNc1ncc2c(n1)CCCC2Br",
                "CCNc1ncc2c(n1)CCCC2I",
                "CCNc1ncc2c(n1)CCCC2C",
                "CCNc1ncc2c(n1)CCCC2S",
                "CCNc1ncc2c(n1)CCCC2P"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0076541900634765625,
            "chemical_diversity": 0.31407198943784287,
            "average_molecular_weight": 213.88269999999994,
            "api_call_time": 6.200222015380859
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCNc1ncc2c(n1)CCCC2', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CN1CCN(C(=O)c2ccc(OCc3nn(C)c4ccccc34)cc2)CC1",
                "COc1cc(OC)c(CN2C(=N)SC(CC(=O)N3CCCC3)C2=O)c(OC)c1",
                "Cc1nc2ccccc2n1Cc1ccc(C(=O)N2CCCCC2)o1",
                "COc1ccc(Cn2c(=O)c3ccccc3n(CC(=O)N3CCOCC3)c2=O)cc1",
                "CC(C)Cn1c(CN2CCCC2)nc2cc(N3CCOCC3)ccc21",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "O=C(Cn1cnc2c1c(=O)n(C1CCCC1)c(=O)n2C1CC1)N1CCOCC1",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "O=C(CSc1nnc(-c2ccco2)n1Cc1ccco1)N1CCCCC1",
                "CC1(C)CC(NC(=O)c2ccc(F)cc2)CC(C)(CN2CCOCC2)C1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccc(Cl)cc1",
                "COc1ccc(Cn2c(=O)c3ccccc3n(CC(=O)N3CCOCC3)c2=O)cc1",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "Cc1nc2ccccc2n1Cc1ccc(C(=O)N2CCCCC2)o1",
                "O=C(Cn1cnc2c1c(=O)n(C1CCCC1)c(=O)n2C1CC1)N1CCOCC1",
                "COc1cc(OC)c(CN2C(=O)C(CC(=O)N3CCCC3)SC2=N)c(OC)c1",
                "CC1(C)CC(NC(=O)c2ccc(F)cc2)CC(C)(CN2CCOCC2)C1",
                "O=C(CSc1nnc(-c2ccco2)n1Cc1ccco1)N1CCCCC1",
                "CC(C)Cn1c(CN2CCCC2)nc2cc(N3CCOCC3)ccc21",
                "CN1CCN(C(=O)c2ccc(OCc3nn(C)c4ccccc34)cc2)CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.014638185501098633,
            "chemical_diversity": 0.8259696711800102,
            "average_molecular_weight": 355.67250000000024,
            "api_call_time": 19.207841634750366
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCNc1ncc2c(n1)CCCC2', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCNc1ncc2c(n1)CCSC2",
                "CCNc1ncc2c(n1)CCCC2C",
                "CCNc1ncc2c(n1)CCCC2N",
                "CCNc1ncc2c(n1)CCCC2O",
                "CCCNc1ncc2c(n1)CCCC2",
                "CCOc1ncc2c(n1)CCCC2",
                "CCNc1ncc2c(n1)CCCCC2",
                "CCNc1ncc2c(n1)CCOC2",
                "CCNc1ncc2c(n1)CCCC2",
                "CCNc1ncc2c(n1)CCNC2"
            ],
            "total_raw_response_smiles": [
                "CCNc1ncc2c(n1)CCCC2",
                "CCCNc1ncc2c(n1)CCCC2",
                "CCOc1ncc2c(n1)CCCC2",
                "CCNc1ncc2c(n1)CCCCC2",
                "CCNc1ncc2c(n1)CCNC2",
                "CCNc1ncc2c(n1)CCOC2",
                "CCNc1ncc2c(n1)CCSC2",
                "CCNc1ncc2c(n1)CCCC2O",
                "CCNc1ncc2c(n1)CCCC2N",
                "CCNc1ncc2c(n1)CCCC2C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007502555847167969,
            "chemical_diversity": 0.467028412184851,
            "average_molecular_weight": 186.75889999999998,
            "api_call_time": 6.384524583816528
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCNc1ncc2c(n1)CCCC2', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)OC(=O)NC1=O",
                "COc1ccc(C2Oc3ccccc3C2=O)cc1",
                "Clc1nccc(N2CCOCC2)n1",
                "CC(C)CC(NC(=O)C(F)(F)F)C(=O)N1CCCC1C#N",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "Cc1nnc(SCC2=NC(=O)CS2)n1C",
                "CC(C)(C)C1=CC(=O)C=C(C(=O)O)C1=O",
                "CC1=NN(c2cc(Cl)ccc2O)C(=O)C1",
                "C#CC1(O)CCCCC1",
                "O=C(O)C1CCCN1C(=O)c1ccco1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "C#CC1(O)CCCCC1",
                "CC(C)(C)C1=CC(=O)C=C(C(=O)O)C1=O",
                "C1COCCN1c1ccnc(Cl)n1",
                "CC1=NN(c2cc(Cl)ccc2O)C(=O)C1",
                "O=C(O)C1CCCN1C(=O)c1ccco1",
                "CC(C)CC(NC(=O)C(F)(F)F)C(=O)N1CCCC1C#N",
                "COc1ccc(C2Oc3ccccc3C2=O)cc1",
                "CC1(C)OC(=O)NC1=O",
                "Cc1nnc(SCC2=NC(=O)CS2)n1C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008014678955078125,
            "chemical_diversity": 0.9105303782504822,
            "average_molecular_weight": 213.516,
            "api_call_time": 13.791200160980225
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCNc1ncc2c(n1)CCCC2', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCNc1ncc2c(n1)CCC2",
                "CCNc1ncc2c(n1)CCCCCCC2",
                "CCCCNc1ncc2c(n1)CCCC2",
                "CCNc1ncc2c(n1)CCCCCC2",
                "CNc1ncc2c(n1)CCCC2",
                "CCCNc1ncc2c(n1)CCCC2",
                "CCNc1ncc2c(n1)CCCCC2",
                "CCCCCNc1ncc2c(n1)CCCC2",
                "CCCNc1ncc2c(n1)CCC2",
                "CCNc1ncc2c(n1)CCCC2"
            ],
            "total_raw_response_smiles": [
                "CCNc1ncc2c(n1)CCCC2",
                "CCCNc1ncc2c(n1)CCCC2",
                "CCCCNc1ncc2c(n1)CCCC2",
                "CCCCCNc1ncc2c(n1)CCCC2",
                "CCNc1ncc2c(n1)CCCCC2",
                "CCNc1ncc2c(n1)CCCCCC2",
                "CCNc1ncc2c(n1)CCC2",
                "CCNc1ncc2c(n1)CCCCCCC2",
                "CNc1ncc2c(n1)CCCC2",
                "CCCNc1ncc2c(n1)CCC2"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007881402969360352,
            "chemical_diversity": 0.23636626919301107,
            "average_molecular_weight": 191.27799999999993,
            "api_call_time": 7.3173508644104
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCNc1ncc2c(n1)CCCC2', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=c1[nH]c(-c2ccco2)nc2cc(N3CCCC3)ccc12",
                "Cc1ccc(C(=O)Nc2ccc3c(c2)OCCO3)cn1",
                "CC(C)(C)C1=CC(=O)C=C(NC(=O)c2ccc(F)cc2)C1",
                "CN(C)C(=O)CN1C(=O)c2cccc(N3CCOCC3)c2C1=O",
                "Cc1ccc(S(=O)(=O)Nc2nc(C(=O)N3CCSCC3)cs2)cc1",
                "COc1ccc(CC(=O)Nc2nnc(C3CCCO3)s2)cc1",
                "Cc1nn(-c2ccc(S(N)(=O)=O)cc2)c2cc(O)ccc12",
                "CN1CCN(C2=NC3=C(c4cccs4)C(=O)NC3=N2)CC1",
                "O=C(Nc1ccccc1)c1csc(Nc2ccc(Br)cn2)n1",
                "O=C1NC(=O)C2(CCCCC2)N1Cc1ccc(Cl)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)C1=CC(=O)C=C(C1)NC(=O)C2=CC=C(C=C2)F",
                "O=C1NC(=O)C2(CCCCC2)N1CC3=CC=C(C=C3)Cl",
                "CN1CCN(CC1)C2=NC3=C(C(=O)NC3=N2)C4=CC=CS4",
                "CC1=NN(C2=C1C=CC(=C2)O)C3=CC=C(C=C3)S(=O)(=O)N",
                "COC1=CC=C(C=C1)CC(=O)NC2=NN=C(S2)C3CCCO3",
                "O=C(NC1=CC=CC=C1)C2=CSC(=N2)NC3=NC=C(C=C3)Br",
                "CC1=NC=C(C=C1)C(=O)NC2=CC3=C(OCCO3)C=C2",
                "CN(C)C(=O)CN1C(=O)C2=C(C1=O)C=CC=C2N3CCOCC3",
                "O=C1NC(=NC2=C1C=CC(=C2)N3CCCC3)C4=CC=CO4",
                "CC1=CC=C(C=C1)S(=O)(=O)NC2=NC(=CS2)C(=O)N3CCSCC3"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011297225952148438,
            "chemical_diversity": 0.8621602216798694,
            "average_molecular_weight": 313.19230000000005,
            "api_call_time": 17.251699924468994
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCNc1ncc2c(n1)CCCC2', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCNc1ncc2c(n1)CCSC2",
                "CCNc1ncc2c(n1)CCPC2",
                "CCNc1ncc2c(n1)C=CCC2",
                "CCNc1ncc2c(n1)CC=CC2",
                "CCNc1ncc2c(n1)CCCCC2",
                "CCNc1ncc2c(n1)CCOC2",
                "CCNc1ncc2c(n1)CCCO2",
                "CCNc1ncc2c(n1)CCCS2",
                "CCNc1ncc2c(n1)CCCC2",
                "CCNc1ncc2c(n1)CCNC2"
            ],
            "total_raw_response_smiles": [
                "CCNc1ncc2c(n1)CCCC2",
                "CCNc1ncc2c(n1)CCCO2",
                "CCNc1ncc2c(n1)CCCS2",
                "CCNc1ncc2c(n1)CCNC2",
                "CCNc1ncc2c(n1)CCSC2",
                "CCNc1ncc2c(n1)CCOC2",
                "CCNc1ncc2c(n1)CCPC2",
                "CCNc1ncc2c(n1)CC=CC2",
                "CCNc1ncc2c(n1)CCCCC2",
                "CCNc1ncc2c(n1)C=CCC2"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007538795471191406,
            "chemical_diversity": 0.4414436057570442,
            "average_molecular_weight": 184.14719999999994,
            "api_call_time": 10.021161079406738
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCNc1ncc2c(n1)CCCC2', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCNc1ncc2c(n1)CCSCC2",
                "CCNc1ncc2c(n1)CCCSC2",
                "CCNc1cc2c(cn1)CSCC2",
                "CCNc1ncc2c(n1)CC=CC2",
                "CCNc1ncc2c(n1)CCCNC2",
                "CCNc1ncc2c(n1)CCNCC2",
                "CCNc1ncc2c(n1)CCOC2",
                "CCNc1ncc2c(n1)CC(C)CC2",
                "CCNc1ncc2c(n1)CCOCC2",
                "CCCc1cnc2c(c1)CCNC2"
            ],
            "total_raw_response_smiles": [
                "CCCc1cnc2c(c1)CCNC2",
                "CCNc1ncc2c(c1)CCSC2",
                "CCNc1ncc2c(n1)CCCNC2",
                "CCNc1ncc2c(n1)CCOCC2",
                "CCNc1ncc2c(n1)CC(C)CC2",
                "CCNc1ncc2c(n1)CCSCC2",
                "CCNc1ncc2c(n1)CCOC2",
                "CCNc1ncc2c(n1)CCCSC2",
                "CCNc1ncc2c(n1)CCNCC2",
                "CCNc1ncc2c(n1)CC=CC2"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007917404174804688,
            "chemical_diversity": 0.5072652831256428,
            "average_molecular_weight": 191.27199999999996,
            "api_call_time": 7.399287700653076
        }
    ],
    "Cc1cc(F)ccc1[C@H](C)NCCN": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1cc(F)ccc1[C@H](C)NCCN', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1cc(F)ccc1C(C)NCCN",
                "Cc1cc(Cl)ccc1[C@H](C)NCCN",
                "CNCCN[C@@H](C)c1ccc(F)cc1C",
                "Cc1cc(F)ccc1[C@H](C)NCCN",
                "CCc1cc(F)ccc1[C@H](C)NCCN",
                "CC[C@H](NCCN)c1ccc(F)cc1C",
                "Cc1cc(F)ccc1[C@@H](C)NCCN",
                "Cc1cc(F)ccc1[C@H](C)NCCCN",
                "Cc1ccc(F)cc1[C@H](C)NCCN",
                "CNCCCN[C@@H](C)c1ccc(F)cc1C"
            ],
            "total_raw_response_smiles": [
                "Cc1cc(F)ccc1[C@H](C)NCCN",
                "Cc1cc(F)ccc1[C@@H](C)NCCN",
                "Cc1cc(F)ccc1C(C)NCCN",
                "Cc1cc(Cl)ccc1[C@H](C)NCCN",
                "Cc1cc(F)ccc1[C@H](C)NCCCN",
                "Cc1cc(F)ccc1[C@H](C)NCCNC",
                "Cc1cc(F)ccc1[C@H](C)NCCCNC",
                "CCc1cc(F)ccc1[C@H](C)NCCN",
                "Cc1cc(F)ccc1[C@H](CC)NCCN",
                "Cc1ccc(F)cc1[C@H](C)NCCN"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00736236572265625,
            "chemical_diversity": 0.32595713240634916,
            "average_molecular_weight": 206.33069999999998,
            "api_call_time": 8.430684328079224
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1cc(F)ccc1[C@H](C)NCCN', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)NC1CCN(Cc2ccccc2)CC1",
                "CC(C)(C)OC(=O)NCCC1=CCCCC1",
                "O=C(NCc1ccncc1)c1ccc(Cl)cc1",
                "Cn1cc(CN2CCN(c3ccccc3)CC2)cn1",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCCC2)cc1",
                "COc1ccc(Cn2cnc3c(N)ncnc32)cc1OC",
                "CCN(CC)CCOc1ccc(C(=O)OC)cc1",
                "Cc1nc2ccccc2n1CC(=O)N1CCOCC1",
                "CCCn1c(=O)c2c(ncn2C)n(C)c1=O",
                "O=C(Cn1cnc2ccccc21)N1CCSCC1"
            ],
            "total_raw_response_smiles": [
                "CC(C)NC1CCN(Cc2ccccc2)CC1",
                "O=C(NCc1ccncc1)c1ccc(Cl)cc1",
                "COc1ccc(Cn2cnc3c(N)ncnc32)cc1OC",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCCC2)cc1",
                "Cc1nc2ccccc2n1CC(=O)N1CCOCC1",
                "CCN(CC)CCOc1ccc(C(=O)OC)cc1",
                "Cn1cc(CN2CCN(c3ccccc3)CC2)cn1",
                "CC(C)(C)OC(=O)NCCC1=CCCCC1",
                "O=C(Cn1cnc2ccccc21)N1CCSCC1",
                "CCCn1c(=O)c2c(ncn2C)n(C)c1=O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009462594985961914,
            "chemical_diversity": 0.855194388325723,
            "average_molecular_weight": 250.86309999999997,
            "api_call_time": 12.624289751052856
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1cc(F)ccc1[C@H](C)NCCN', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1cc(I)ccc1[C@H](C)NCCN",
                "Cc1cc(F)ccc1[C@H](C)NCCF",
                "Cc1cc(Cl)ccc1[C@H](C)NCCN",
                "Cc1cc(O)ccc1[C@H](C)NCCN",
                "CNCCN[C@@H](C)c1ccc(F)cc1C",
                "Cc1cc(F)ccc1[C@H](C)NCCN",
                "Cc1cc(C#N)ccc1[C@H](C)NCCN",
                "Cc1cc(F)ccc1[C@H](C)NCCO",
                "Cc1cc(F)ccc1[C@H](C)NCCS",
                "Cc1cc(Br)ccc1[C@H](C)NCCN"
            ],
            "total_raw_response_smiles": [
                "Cc1cc(F)ccc1[C@H](C)NCCN",
                "Cc1cc(Cl)ccc1[C@H](C)NCCN",
                "Cc1cc(Br)ccc1[C@H](C)NCCN",
                "Cc1cc(I)ccc1[C@H](C)NCCN",
                "Cc1cc(C#N)ccc1[C@H](C)NCCN",
                "Cc1cc(O)ccc1[C@H](C)NCCN",
                "Cc1cc(F)ccc1[C@H](C)NCCO",
                "Cc1cc(F)ccc1[C@H](C)NCCF",
                "Cc1cc(F)ccc1[C@H](C)NCCS",
                "Cc1cc(F)ccc1[C@H](C)NCCNC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007322788238525391,
            "chemical_diversity": 0.39463702765577935,
            "average_molecular_weight": 218.80239999999998,
            "api_call_time": 8.774925470352173
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1cc(F)ccc1[C@H](C)NCCN', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)O[C@@H]2[C@@H](CO[C@]3(COS(N)(=O)=O)OC(C)(C)O[C@@H]23)O1",
                "O=C(NCCCCN1C(=O)c2ccccc2C1=O)c1ccc(Br)o1",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "COc1cc(C=O)ccc1O[C@H]1C[C@H](O)[C@@H](O)[C@H](O)[C@H]1O",
                "CC1=NN(c2cc(C)c(C)cc2C)C(=O)C1=Cc1ccco1",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "O=C(NCCCNC(=O)c1ccc(F)cc1)c1ccncc1",
                "CC(C)(C)OC(=O)NCCCCNC(=O)Oc1ccc(Cl)cc1",
                "CC(=O)OCCC/C=C/C=C/C=C/CCCCCCCC(=O)O",
                "O=C(O)c1ccc(N=Nc2c(O)ccc3ccccc23)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "CC(C)(C)OC(=O)NCCCCNC(=O)Oc1ccc(Cl)cc1",
                "O=C(O)c1ccc(N=Nc2c(O)ccc3ccccc23)cc1",
                "CC1(C)O[C@@H]2CO[C@]3(COS(N)(=O)=O)OC(C)(C)O[C@H]3[C@@H]2O1",
                "CC(=O)OCCC/C=C/C=C/C=C/CCCCCCCC(=O)O",
                "O=C(NCCCNC(=O)c1ccncc1)c1ccc(F)cc1",
                "CC1=NN(c2cc(C)c(C)cc2C)C(=O)C1=Cc1ccco1",
                "O=C1c2ccccc2C(=O)N1CCCCNC(=O)c1ccc(Br)o1",
                "COc1cc(C=O)ccc1O[C@H]1C[C@H](O)[C@@H](O)[C@H](O)[C@H]1O",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010622978210449219,
            "chemical_diversity": 0.8975918114967304,
            "average_molecular_weight": 307.06630000000007,
            "api_call_time": 18.894989490509033
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1cc(F)ccc1[C@H](C)NCCN', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1cc(I)ccc1[C@H](C)NCCN",
                "Cc1cc(N)ccc1[C@H](C)NCCN",
                "Cc1cc(Cl)ccc1[C@H](C)NCCN",
                "Cc1ccc([C@H](C)NCCN)c(C)c1",
                "Cc1cc(O)ccc1[C@H](C)NCCN",
                "Cc1cc(F)ccc1[C@H](C)NCCF",
                "Cc1cc(F)ccc1[C@H](C)NCCN",
                "Cc1cc(F)ccc1[C@H](C)NCCO",
                "Cc1cc(Br)ccc1[C@H](C)NCCN",
                "Cc1cc(S)ccc1[C@H](C)NCCN"
            ],
            "total_raw_response_smiles": [
                "Cc1cc(F)ccc1[C@H](C)NCCN",
                "Cc1cc(Cl)ccc1[C@H](C)NCCN",
                "Cc1cc(Br)ccc1[C@H](C)NCCN",
                "Cc1cc(I)ccc1[C@H](C)NCCN",
                "Cc1cc(C)ccc1[C@H](C)NCCN",
                "Cc1cc(O)ccc1[C@H](C)NCCN",
                "Cc1cc(N)ccc1[C@H](C)NCCN",
                "Cc1cc(S)ccc1[C@H](C)NCCN",
                "Cc1cc(F)ccc1[C@H](C)NCCO",
                "Cc1cc(F)ccc1[C@H](C)NCCF"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007401704788208008,
            "chemical_diversity": 0.3586081845147012,
            "average_molecular_weight": 215.70639999999997,
            "api_call_time": 9.01332950592041
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1cc(F)ccc1[C@H](C)NCCN', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(SCC(=O)Nc2cccc(C(F)(F)F)c2)s1",
                "CC(C)Cn1c(=O)c2c(ncn2C)n(C)c1=O",
                "COc1cc(C=NNC(=O)c2ccncc2)cc(OC)c1OC",
                "O=C(NCc1ccccc1)c1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "CC1(C)CC(=O)c2c([nH]c3ccc(S(=O)(=O)N4CCCC4)cc23)C1",
                "O=C(CSc1nnc(-c2ccco2)n1Cc1ccco1)Nc1ccccc1",
                "CC(C)(C)OC(=O)N1CCC(Nc2nc3ccccc3s2)CC1",
                "O=C(Nc1ccc(F)cc1)C1CCN(Cc2cccs2)CC1",
                "Cn1cnc(C(=O)N2CCN(C(=O)c3ccco3)CC2)c1",
                "COc1ccc(-c2n[nH]c(=O)c3ccc(Cl)cc23)cc1OC"
            ],
            "total_raw_response_smiles": [
                "O=C(NCc1ccccc1)c1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "CC(C)(C)OC(=O)N1CCC(Nc2nc3ccccc3s2)CC1",
                "COc1ccc(C2=NNC(=O)C3=C2C=C(Cl)C=C3)cc1OC",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(S(=O)(=O)N3CCCC3)cc12",
                "Cn1cnc(C(=O)N2CCN(C(=O)c3ccco3)CC2)c1",
                "O=C(Nc1ccc(F)cc1)C1CCN(Cc2cccs2)CC1",
                "Cc1nnc(SCC(=O)Nc2cccc(C(F)(F)F)c2)s1",
                "CC(C)Cn1c(=O)c2c(ncn2C)n(C)c1=O",
                "O=C(CSc1nnc(-c2ccco2)n1Cc1ccco1)Nc1ccccc1",
                "COc1cc(C=NNC(=O)c2ccncc2)cc(OC)c1OC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012296438217163086,
            "chemical_diversity": 0.8595941310207824,
            "average_molecular_weight": 322.9205000000001,
            "api_call_time": 17.492229461669922
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1cc(F)ccc1[C@H](C)NCCN', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1cc(F)ccc1[C@H](C)NCCF",
                "Cc1cc(Cl)ccc1[C@H](C)NCCN",
                "Cc1cc(F)ccc1[C@H](C)NCCN",
                "Cc1cc(F)ccc1[C@H](C)CCCN",
                "Cc1cc(F)ccc1[C@@H](C)NCCN",
                "Cc1cc(F)ccc1[C@H](C)NCCS",
                "Cc1cc(F)ccc1[C@H](C)NCCO",
                "Cc1cc(F)ccc1[C@H](C)NCCc1ccccc1",
                "Cc1cc(Br)ccc1[C@H](C)NCCN",
                "CCCN[C@@H](C)c1ccc(F)cc1C"
            ],
            "total_raw_response_smiles": [
                "Cc1cc(F)ccc1[C@H](C)NCCN",
                "Cc1cc(F)ccc1[C@@H](C)NCCN",
                "Cc1cc(F)ccc1[C@H](C)NCCO",
                "Cc1cc(F)ccc1[C@H](C)NCCS",
                "Cc1cc(F)ccc1[C@H](C)NCCF",
                "Cc1cc(F)ccc1[C@H](C)NCCC",
                "Cc1cc(Cl)ccc1[C@H](C)NCCN",
                "Cc1cc(Br)ccc1[C@H](C)NCCN",
                "Cc1cc(F)ccc1[C@H](C)NCCc1ccccc1",
                "Cc1cc(F)ccc1[C@H](C)CCCN"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007663249969482422,
            "chemical_diversity": 0.38274856876805174,
            "average_molecular_weight": 212.0169,
            "api_call_time": 8.274100542068481
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'Cc1cc(F)ccc1[C@H](C)NCCN', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)OC(=O)N(c2ccc(Cl)cc2)C1=O",
                "NC(=O)c1cc(I)c(N2CCOCC2)s1",
                "CC(C)(C)OC(=O)Nc1ccc(C#N)cn1",
                "Cc1nc(Cl)ccc1C(=O)N1CCOC1",
                "O=C(O)C1=Cc2cc(Cl)ccc2NC1",
                "CC(=O)N1CCc2c1cccc2C(F)(F)F",
                "COc1ncc(C2=NCCS2)c(Br)n1",
                "O=S(=O)(c1ccc(O)c(F)c1)N1CCCC1",
                "Cn1cc(C(=O)N2CCNC(=O)C2)cn1",
                "OC1CC(c2ncc(Br)cc2F)C1"
            ],
            "total_raw_response_smiles": [
                "Cc1nc(Cl)ccc1C(=O)N1CCOC1",
                "Fc1cc(Br)cnc1C1CC(O)C1",
                "Oc1ccc(S(=O)(=O)N2CCCC2)cc1F",
                "NC(=O)c1cc(I)c(N2CCOCC2)s1",
                "CC(C)(C)OC(=O)Nc1ccc(C#N)cn1",
                "CC1(C)OC(=O)N(c2ccc(Cl)cc2)C1=O",
                "COc1ncc(C2=NCCS2)c(Br)n1",
                "CC(=O)N1CCc2c(C(F)(F)F)cccc21",
                "O=C(O)C1=Cc2cc(Cl)ccc2NC1",
                "Cn1cc(C(=O)N2CCNC(=O)C2)cn1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008798837661743164,
            "chemical_diversity": 0.8724039492875724,
            "average_molecular_weight": 243.6286,
            "api_call_time": 12.859381675720215
        }
    ],
    "NC(=O)N[C@@H]1CCC[C@H](N)C1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'NC(=O)N[C@@H]1CCC[C@H](N)C1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(=O)N[C@@H]1CCC[C@H](N)C1",
                "NC(=O)N[C@H]1CCCC(N)C1",
                "NC(=O)NC1CCC[C@H](N)C1",
                "NC(=O)NC1CCCC(N)C1",
                "NC(=O)N[C@@H]1CCCC(N)C1",
                "NC(=O)NC1CCC[C@@H](N)C1",
                "NC(=O)N[C@@H]1CCC[C@@H](N)C1",
                "NC(=O)N[C@@H]1CCC[C@H](N)C1",
                "NC(=O)N[C@H]1CCC[C@@H](N)C1",
                "NC(=O)N[C@H]1CCC[C@H](N)C1"
            ],
            "total_raw_response_smiles": [
                "NC(=O)N[C@@H]1CCC[C@H](N)C1",
                "NC(=O)N[C@@H]1CCC[C@@H](N)C1",
                "NC(=O)N[C@@H]1CCCC(N)C1",
                "NC(=O)N[C@H]1CCC[C@H](N)C1",
                "NC(=O)N[C@H]1CCC[C@@H](N)C1",
                "NC(=O)N[C@H]1CCCC(N)C1",
                "NC(=O)NC1CCC[C@H](N)C1",
                "NC(=O)NC1CCC[C@@H](N)C1",
                "NC(=O)NC1CCCC(N)C1",
                "CC(=O)N[C@@H]1CCC[C@H](N)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00544428825378418,
            "chemical_diversity": 0.06206896551724128,
            "average_molecular_weight": 157.11819999999994,
            "api_call_time": 8.739943027496338
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NC(=O)N[C@@H]1CCC[C@H](N)C1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCc1ccccc1)C1CCN(C(=O)c2cccs2)CC1",
                "O=C(Nc1ccc(Cl)cc1)N1CCC(C(=O)N2CCOCC2)CC1",
                "COc1ccc(CC(=O)N2CCC(NC(=O)C3CCCCC3)CC2)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccccc2)CC1",
                "O=C(NC1CCCCC1)C1CCN(C(=O)c2ccc(F)cc2)CC1",
                "COC(=O)C1CCN(C(=O)N2CCC(NC(=O)C3CC3)CC2)CC1",
                "CC1(C)CC(=O)N(C2CCN(C(=O)c3ccco3)CC2)C1",
                "O=C(Nc1cccc(C(F)(F)F)c1)N1CCC(C(=O)N2CCCC2)CC1",
                "CC(C)CC(=O)N1CCC(NC(=O)c2ccc(Br)cc2)CC1",
                "Cc1cccc(C)c1NC(=O)C1CCN(C(=O)C2CCCC2)CC1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)OC(=O)N1CCC(CC1)NC(=O)c1ccccc1",
                "O=C(NCc1ccccc1)C1CCN(CC1)C(=O)c1cccs1",
                "COc1ccc(CC(=O)N2CCC(CC2)NC(=O)C2CCCCC2)cc1",
                "CC1(C)CC(=O)N(C1)C1CCN(CC1)C(=O)c1ccco1",
                "O=C(Nc1ccc(Cl)cc1)N1CCC(CC1)C(=O)N1CCOCC1",
                "Cc1cccc(C)c1NC(=O)C1CCN(CC1)C(=O)C1CCCC1",
                "O=C(NC1CCCCC1)C1CCN(CC1)C(=O)c1ccc(F)cc1",
                "CC(C)CC(=O)N1CCC(CC1)NC(=O)c1ccc(Br)cc1",
                "O=C(Nc1cccc(C(F)(F)F)c1)N1CCC(CC1)C(=O)N1CCCC1",
                "COC(=O)C1CCN(CC1)C(=O)N1CCC(CC1)NC(=O)C1CC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011166572570800781,
            "chemical_diversity": 0.708286608911495,
            "average_molecular_weight": 336.8475000000002,
            "api_call_time": 15.3602454662323
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NC(=O)N[C@@H]1CCC[C@H](N)C1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H]1CCC[C@@H](NC(N)=O)C1",
                "NC(=O)N[C@@H]1CCC[C@H](Br)C1",
                "NC(=O)N[C@@H]1CCC[C@H](O)C1",
                "CC[C@H]1CCC[C@@H](NC(N)=O)C1",
                "N#C[C@H]1CCC[C@@H](NC(N)=O)C1",
                "NC(=O)N[C@@H]1CCC[C@H](S)C1",
                "NC(=O)N[C@@H]1CCC[C@H](N)C1",
                "NC(=O)N[C@@H]1CCC[C@H](CO)C1",
                "NC(=O)N[C@@H]1CCC[C@H](Cl)C1",
                "NC(=O)N[C@@H]1CCC[C@H](F)C1"
            ],
            "total_raw_response_smiles": [
                "NC(=O)N[C@@H]1CCC[C@H](N)C1",
                "NC(=O)N[C@@H]1CCC[C@H](O)C1",
                "NC(=O)N[C@@H]1CCC[C@H](F)C1",
                "NC(=O)N[C@@H]1CCC[C@H](Cl)C1",
                "NC(=O)N[C@@H]1CCC[C@H](Br)C1",
                "NC(=O)N[C@@H]1CCC[C@H](C#N)C1",
                "NC(=O)N[C@@H]1CCC[C@H](S)C1",
                "NC(=O)N[C@@H]1CCC[C@H](C)C1",
                "NC(=O)N[C@@H]1CCC[C@H](CC)C1",
                "NC(=O)N[C@@H]1CCC[C@H](CO)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.005802154541015625,
            "chemical_diversity": 0.3829153824014673,
            "average_molecular_weight": 171.3549,
            "api_call_time": 8.510109901428223
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NC(=O)N[C@@H]1CCC[C@H](N)C1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NC1CCCCC1)c1ccc(O)c(=O)o1",
                "Cc1ccc(C(=O)Nc2cccc(O)c2)cc1",
                "Cc1nnc(SCC(=O)Nc2nccs2)[nH]1",
                "Cc1cc(=O)[nH]c(=S)n1N=Cc1ccc([N+](=O)[O-])o1",
                "CN1CCN(c2nc3c(ncn3C)c(=O)n2C)CC1",
                "CC(C)C[C@H](NC(=O)C(C)NC(=O)c1c[nH]cn1)C(=O)N[C@@H](Cc1ccccc1)C(=O)O",
                "CCOC(=O)C(C)NC(=O)C1CCCN1C(=O)c1ccccc1",
                "CC(C)(C)OC(=O)NCCc1c[nH]c2ccc(F)cc12",
                "COc1ccc(CCN2CCC(NC(=O)c3ccco3)CC2)cc1OC",
                "CCOC(=O)c1ccc(NC(=O)c2ccccc2Cl)cc1"
            ],
            "total_raw_response_smiles": [
                "CC1=CC=C(C=C1)C(=O)NC1=CC(=CC=C1)O",
                "CCOC(=O)C1=CC=C(C=C1)NC(=O)C1=CC=CC=C1Cl",
                "O=C(NC1CCCCC1)C1=CC=C(O)C(=O)O1",
                "CC(C)(C)OC(=O)NCCC1=CNC2=C1C=C(C=C2)F",
                "COC1=C(OC)C=C(CCN2CCC(CC2)NC(=O)C2=CC=CO2)C=C1",
                "CC1=NN=C(N1)SCC(=O)NC1=NC=CS1",
                "CN1CCN(CC1)C1=NC2=C(N=CN2C)C(=O)N1C",
                "CC(C)C[C@H](NC(=O)C(C)NC(=O)C1=CNC=N1)C(=O)N[C@@H](CC1=CC=CC=C1)C(=O)O",
                "CC1=CC(=O)NC(=S)N1N=CC1=CC=C(O1)[N+](=O)[O-]",
                "CCOC(=O)C(C)NC(=O)C1CCCN1C(=O)C1=CC=CC=C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009949684143066406,
            "chemical_diversity": 0.8555381074419808,
            "average_molecular_weight": 296.48150000000004,
            "api_call_time": 17.930155992507935
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NC(=O)N[C@@H]1CCC[C@H](N)C1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H]1CCC[C@@H](NC(N)=O)C1",
                "NC(=O)N[C@@H]1CCC[C@H](I)C1",
                "NC(=O)N[C@@H]1CCC[C@H](Br)C1",
                "NC(=O)N[C@@H]1CCC[C@H](O)C1",
                "CC[C@H]1CCC[C@@H](NC(N)=O)C1",
                "NC(=O)N[C@@H]1CCC[C@H](N)C1",
                "NC(=O)N[C@@H]1CCC[C@H](CO)C1",
                "NC(=O)N[C@@H]1CCC[C@H](Cl)C1",
                "NC(=O)N[C@@H]1CCC[C@H](F)C1",
                "NC[C@H]1CCC[C@@H](NC(N)=O)C1"
            ],
            "total_raw_response_smiles": [
                "NC(=O)N[C@@H]1CCC[C@H](N)C1",
                "NC(=O)N[C@@H]1CCC[C@H](O)C1",
                "NC(=O)N[C@@H]1CCC[C@H](F)C1",
                "NC(=O)N[C@@H]1CCC[C@H](Cl)C1",
                "NC(=O)N[C@@H]1CCC[C@H](Br)C1",
                "NC(=O)N[C@@H]1CCC[C@H](I)C1",
                "NC(=O)N[C@@H]1CCC[C@H](C)C1",
                "NC(=O)N[C@@H]1CCC[C@H](CC)C1",
                "NC(=O)N[C@@H]1CCC[C@H](CN)C1",
                "NC(=O)N[C@@H]1CCC[C@H](CO)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.005814552307128906,
            "chemical_diversity": 0.372529733952884,
            "average_molecular_weight": 181.14099999999996,
            "api_call_time": 8.68415379524231
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NC(=O)N[C@@H]1CCC[C@H](N)C1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cn1cc(C(=O)N2CCCC(c3ccccc3)C2)cn1",
                "O=C(CSc1nncs1)Nc1ccc(C(F)(F)F)cc1",
                "COc1cc(OC)c(C(=O)N2CCN(c3ccccc3)CC2)cc1OC",
                "O=C(NCc1ccccc1)c1ccc(Cl)s1",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3ccc(F)cc23)CC1",
                "Cc1ccc(NC(=O)Cn2nnc3ccccc32)cc1",
                "COc1ccc(C(=O)N2CCN(Cc3ccccc3)CC2)cc1OC",
                "Cc1nnc(SCC(=O)Nc2ccc(Br)cc2)n1C",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Cl)cc1C2",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "O=C(NCc1ccccc1)c1ccc(Cl)s1",
                "COc1ccc(C(=O)N2CCN(Cc3ccccc3)CC2)cc1OC",
                "Cc1nnc(SCC(=O)Nc2ccc(Br)cc2)n1C",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3ccc(F)cc23)CC1",
                "O=C(CSc1nncs1)Nc1ccc(C(F)(F)F)cc1",
                "Cn1cc(C(=O)N2CCCC(c3ccccc3)C2)cn1",
                "COc1cc(OC)c(C(=O)N2CCN(c3ccccc3)CC2)cc1OC",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Cl)cc1C2",
                "Cc1ccc(NC(=O)Cn2nnc3ccccc32)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011952400207519531,
            "chemical_diversity": 0.8276074277174383,
            "average_molecular_weight": 303.72970000000004,
            "api_call_time": 12.896000146865845
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NC(=O)N[C@@H]1CCC[C@H](N)C1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H]1CCC[C@@H](NC(N)=O)C1",
                "NC(=O)N[C@@H]1CCC[C@H](Br)C1",
                "NC(=O)N[C@@H]1CCC[C@H](O)C1",
                "NC(=O)N[C@H]1CC[C@@H](N)CC1",
                "NC(=O)N[C@@H]1CCCC[C@H]1N",
                "NC(=O)N[C@@H]1CCC[C@H](S)C1",
                "NC(=O)N[C@@H]1CCC[C@H](N)C1",
                "NC(=O)N[C@H]1CCC[C@@H](N)C1",
                "NC(=O)N[C@@H]1CCC[C@H](Cl)C1",
                "NC(=O)N[C@@H]1CCC[C@H](F)C1"
            ],
            "total_raw_response_smiles": [
                "NC(=O)N[C@@H]1CCC[C@H](N)C1",
                "NC(=O)N[C@@H]1CCC[C@H](O)C1",
                "NC(=O)N[C@@H]1CCC[C@H](F)C1",
                "NC(=O)N[C@@H]1CCC[C@H](C)C1",
                "NC(=O)N[C@@H]1CCC[C@H](S)C1",
                "NC(=O)N[C@@H]1CCC[C@H](Cl)C1",
                "NC(=O)N[C@@H]1CCC[C@H](Br)C1",
                "NC(=O)N[C@@H]1CC[C@H](N)CC1",
                "NC(=O)N[C@@H]1CCCC[C@H]1N",
                "NC(=O)N[C@H]1CCC[C@@H](N)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00657200813293457,
            "chemical_diversity": 0.4248512056028577,
            "average_molecular_weight": 167.55039999999997,
            "api_call_time": 11.778369903564453
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NC(=O)N[C@@H]1CCC[C@H](N)C1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "NCC(=O)NC1CCOCC1",
                "CC(=O)NC1CCNCC1",
                "NC(=O)N1CCOCC1",
                "NC(=O)c1ccccc1",
                "NC(=O)C1CCSC1",
                "CC(=O)NC1CCOC1",
                "O=C(NC1CCCCC1)C1CC1",
                "NC(=O)c1ccc(O)cc1",
                "CNC(=O)c1ccco1",
                "NC(=O)c1ccncc1"
            ],
            "total_raw_response_smiles": [
                "NC(=O)C1=CC=CC=C1",
                "OC1=CC=C(C=C1)C(=O)N",
                "CC(=O)NC1CCNCC1",
                "O=C(NC1CCCCC1)C1CC1",
                "NC(=O)C1=CC=NC=C1",
                "O=C(CN)NC1CCOCC1",
                "CNC(=O)C1=CC=CO1",
                "NC(=O)N1CCOCC1",
                "O=C(N)C1CCSC1",
                "CC(=O)NC1CCOC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004843950271606445,
            "chemical_diversity": 0.8080315677759056,
            "average_molecular_weight": 136.3692,
            "api_call_time": 7.809707164764404
        }
    ],
    "C/C=C/COC(=O)/C=C\\c1ccc[nH]1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C/C=C/COC(=O)/C=C\\c1ccc[nH]1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C/C=C/COC(=O)/C=C\\c1cccn1C",
                "C/C=C\\COC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)CCc1ccc[nH]1",
                "C/C=C/COC(=O)/C=C\\c1ccsc1",
                "C/C=C/COC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)/C=C/c1ccc[nH]1",
                "CC=CCOC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)/C=C\\c1cccnc1",
                "C/C=C/COC(=O)/C=C\\c1cc[nH]c1"
            ],
            "total_raw_response_smiles": [
                "C/C=C/COC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)/C=C\\c1cccn1C",
                "C/C=C/COC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)/C=C\\c1cnccc1",
                "CC=CCOC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)CCc1ccc[nH]1",
                "C/C=C/COC(=O)/C=C\\c1cc[nH]c1",
                "C/C=C/COC(=O)/C=C\\c1ccsc1",
                "C/C=C/COC(=O)/C=C/c1ccc[nH]1",
                "C/C=C\\COC(=O)/C=C\\c1ccc[nH]1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.007109165191650391,
            "chemical_diversity": 0.3955696350831235,
            "average_molecular_weight": 196.2417777777778,
            "api_call_time": 9.507320404052734
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C/C=C/COC(=O)/C=C\\c1ccc[nH]1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1cc(=O)oc2cc(OCC(=O)N3CCOCC3)ccc12",
                "COc1cc(C=NNC(=O)c2cccs2)ccc1O",
                "O=C(Nc1ccc(Cl)cc1)c1cc2ccccc2o1",
                "Cc1nc2ccccc2c(=O)n1-c1ccccc1",
                "O=C(CSc1nnc(-c2ccco2)o1)Nc1ccccc1",
                "COc1ccc(CC(=O)N2CCN(C)CC2)cc1OC",
                "CC(C)(C)OC(=O)c1ccc2c(c1)OCO2",
                "CC1(C)CC(=O)c2c([nH]c3ccccc3c2=O)C1",
                "Cn1c(=O)c2c(ncn2C)n(C)c1=O",
                "CC(C)C(=O)Nc1ccc(-c2cccs2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)OC(=O)c1ccc2c(c1)OCO2",
                "O=C(Nc1ccc(Cl)cc1)c1cc2ccccc2o1",
                "COc1ccc(CC(=O)N2CCN(C)CC2)cc1OC",
                "Cc1nc2ccccc2c(=O)n1-c1ccccc1",
                "CC(C)C(=O)Nc1ccc(-c2cccs2)cc1",
                "O=C(CSc1nnc(-c2ccco2)o1)Nc1ccccc1",
                "Cc1cc(=O)oc2cc(OCC(=O)N3CCOCC3)ccc12",
                "COc1cc(C=NNC(=O)c2cccs2)ccc1O",
                "Cn1c(=O)c2c(ncn2C)n(C)c1=O",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccccc1C2=O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.01108860969543457,
            "chemical_diversity": 0.8594354151172873,
            "average_molecular_weight": 257.0358,
            "api_call_time": 12.534210920333862
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C/C=C/COC(=O)/C=C\\c1ccc[nH]1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 6,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C/C=C/COC(=O)/C=C\\c1cccn1C",
                "C/C=C/COC(=O)/C=C\\c1ccc2[nH]ccc2c1",
                "C/C=C/COC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)/C=C\\c1cccnc1",
                "C/C=C/COC(=O)/C=C\\c1cc2ccccc2[nH]1",
                "C/C=C/COC(=O)/C=C\\c1cc[nH]c1"
            ],
            "total_raw_response_smiles": [
                "C/C=C/COC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)/C=C\\c1cccn1C",
                "C/C=C/COC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)/C=C\\c1cnccc1",
                "C/C=C/COC(=O)/C=C\\c1cc[nH]c1",
                "C/C=C/COC(=O)/C=C\\c1cc2ccccc2[nH]1",
                "C/C=C/COC(=O)/C=C\\c1ccc[nH]c1",
                "C/C=C/COC(=O)/C=C\\c1cncc[nH]1",
                "C/C=C/COC(=O)/C=C\\c1ccc2[nH]ccc2c1",
                "C/C=C/COC(=O)/C=C\\c1ccc[nH]c1"
            ],
            "validity_ratio": 0.6,
            "post_processing_time": 0.006092071533203125,
            "chemical_diversity": 0.46617216941181716,
            "average_molecular_weight": 212.25633333333334,
            "api_call_time": 10.123692035675049
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C/C=C/COC(=O)/C=C\\c1ccc[nH]1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(Nc1ccc(Cl)cc1)c1ccc2c(c1)OCO2",
                "Cc1nc2ccccc2c(=O)[nH]1",
                "COc1ccc(NC(=O)c2cccs2)cc1Br",
                "CC(C)(C)c1ccc(C(=O)Nc2ccccc2)cc1",
                "COc1cc(C=NNC(=O)c2ccncc2)ccc1O",
                "Cc1cc(C)nc(SCC(=O)N2CCOCC2)n1",
                "CC(C)C[C@H](NC(=O)c1ccco1)C(=O)O",
                "CC1(C)CC(=O)CC(=NNc2ccccc2)C1",
                "O=C(CCc1ccccc1)Nc1cccc(C(F)(F)F)c1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)c1ccc(C(=O)Nc2ccccc2)cc1",
                "O=C(Nc1ccc(Cl)cc1)c1ccc2c(c1)OCO2",
                "COc1ccc(NC(=O)c2cccs2)cc1Br",
                "Cc1nc2ccccc2c(=O)[nH]1",
                "CC(C)C[C@H](NC(=O)c1ccco1)C(=O)O",
                "O=C(CCc1ccccc1)Nc1cccc(C(F)(F)F)c1",
                "CC1(C)CC(=O)CC(=NNc2ccccc2)C1",
                "Cc1cc(C)nc(SCC(=O)N2CCOCC2)n1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "COc1cc(C=NNC(=O)c2ccncc2)ccc1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010755538940429688,
            "chemical_diversity": 0.8256400977588458,
            "average_molecular_weight": 262.52419999999995,
            "api_call_time": 14.110322952270508
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C/C=C/COC(=O)/C=C\\c1ccc[nH]1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 7,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C/C=C/COC(=O)/C=C\\c1cccn1C",
                "CC/C=C/COC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/CCCOC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)C/C=C\\c1ccc[nH]1",
                "CCC/C=C/COC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/CCOC(=O)/C=C\\c1ccc[nH]1"
            ],
            "total_raw_response_smiles": [
                "C/C=C/COC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)/C=C\\c1cccn1C",
                "C/C=C/COC(=O)/C=C\\c1ccc[nH]1C",
                "CC/C=C/COC(=O)/C=C\\c1ccc[nH]1",
                "CCC/C=C/COC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)/C=C\\c1ccc[nH]1CC",
                "C/C=C/COC(=O)/C=C\\c1ccc[nH]1CCC",
                "C/C=C/CCOC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/CCCOC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)C/C=C\\c1ccc[nH]1"
            ],
            "validity_ratio": 0.7,
            "post_processing_time": 0.005950450897216797,
            "chemical_diversity": 0.4039614396067891,
            "average_molecular_weight": 207.2608571428572,
            "api_call_time": 9.82797360420227
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C/C=C/COC(=O)/C=C\\c1ccc[nH]1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1ccc(-c2cc(C(F)(F)F)nn2-c2ccc(S(=O)(=O)N3CCCC3)cc2)cc1",
                "CC(C)(C)NC(=O)COc1ccc(-c2cccs2)cn1",
                "Cc1nc(SCC(=O)Nc2ccc(S(=O)(=O)N3CCOCC3)cc2)sc1C",
                "COc1cc(OC)c(C(=O)N2CCN(Cc3ccc4c(c3)OCO4)CC2)cc1Br",
                "COc1cc(N2CCOCC2)ccc1C(=O)NCc1ccco1",
                "CC1(C)CC(=O)c2c(oc3c(C(=O)O)c(O)cc(O)c3c2=O)C1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(F)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(C#N)cc2)CC1",
                "Cc1cc(C)n(-c2ccc(C(=O)NCCCN3CCOCC3)cc2)n1",
                "O=C(Cn1cnc2c(N3CCCC3)ncnc21)Nc1ccc(Cl)c(C(F)(F)F)c1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(F)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(C#N)cc2)CC1",
                "Cc1nc(SCC(=O)Nc2ccc(S(=O)(=O)N3CCOCC3)cc2)sc1C",
                "O=C(NCc1ccco1)c1ccc(N2CCOCC2)cc1OC",
                "COc1ccc(-c2cc(C(F)(F)F)nn2-c2ccc(S(=O)(=O)N3CCCC3)cc2)cc1",
                "CC1(C)CC(=O)C2=C(C1)Oc1c(C(=O)O)c(O)cc(O)c1C2=O",
                "Cc1cc(C)n(-c2ccc(C(=O)NCCCN3CCOCC3)cc2)n1",
                "O=C(Cn1cnc2c(N3CCCC3)ncnc21)Nc1ccc(Cl)c(C(F)(F)F)c1",
                "CC(C)(C)NC(=O)COc1ccc(-c2cccs2)cn1",
                "COc1cc(OC)c(C(=O)N2CCN(Cc3ccc4c(c3)OCO4)CC2)cc1Br"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.014031648635864258,
            "chemical_diversity": 0.8526143121961481,
            "average_molecular_weight": 368.0773000000001,
            "api_call_time": 20.07086157798767
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C/C=C/COC(=O)/C=C\\c1ccc[nH]1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C/C=C/CSC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)/C=C\\c1ccco1",
                "C/C=C/COC(=O)/C=C\\c1cccs1",
                "C/C=C\\COC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/CNC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)/C=C\\c1ccc[nH]1",
                "CC=CCOC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)/C=C\\c1ccccc1"
            ],
            "total_raw_response_smiles": [
                "C/C=C/COC(=O)/C=C\\c1cccn1",
                "C/C=C/COC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C\\COC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)/C=C\\c1ccco1",
                "C/C=C/COC(=O)/C=C\\c1cccs1",
                "C/C=C/COC(=O)/C=C\\c1ccccc1",
                "C/C=C/COC(=O)\\C=C/c1ccc[nH]1",
                "CC=CCOC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/CNC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/CSC(=O)/C=C\\c1ccc[nH]1"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.006772518157958984,
            "chemical_diversity": 0.42957506820260793,
            "average_molecular_weight": 196.74787500000002,
            "api_call_time": 10.71192216873169
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C/C=C/COC(=O)/C=C\\c1ccc[nH]1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C/C=C/CSC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)/C=C\\c1ccco1",
                "C/C=C/COC(=O)/C=C\\c1cccs1",
                "C/C=C/COC(=S)/C=C\\c1ccc[nH]1",
                "C/C=C/CNC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)/N=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)/C=C\\c1cccnc1",
                "C/C=C/COC(=O)/C=C\\c1ccncc1",
                "C/C=C/COC(=O)/C=N\\c1ccc[nH]1",
                "C/C=N/COC(=O)/C=C\\c1ccc[nH]1"
            ],
            "total_raw_response_smiles": [
                "C/C=C/COC(=O)/C=C\\c1ccco1",
                "C/C=C/COC(=O)/C=C\\c1cccs1",
                "C/C=C/COC(=O)/C=C\\c1cccnc1",
                "C/C=C/COC(=O)/C=C\\c1ccncc1",
                "C/C=C/COC(=O)/C=N\\c1ccc[nH]1",
                "C/C=C/COC(=S)/C=C\\c1ccc[nH]1",
                "C/C=C/CSC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/CNC(=O)/C=C\\c1ccc[nH]1",
                "C/C=N/COC(=O)/C=C\\c1ccc[nH]1",
                "C/C=C/COC(=O)/N=C\\c1ccc[nH]1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007045269012451172,
            "chemical_diversity": 0.5801553622019364,
            "average_molecular_weight": 198.84740000000002,
            "api_call_time": 8.350746631622314
        }
    ],
    "NCC1(CN)CCC1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'NCC1(CN)CCC1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(CN)CCC1",
                "NCC1(CN)CCCCC1",
                "NCC1(CN)CCCS1",
                "NCC1(CF)CCC1",
                "NCC1(CN)CC1",
                "NCC1(CO)CCC1",
                "NCC1(CN)CCCO1",
                "NCCC1(CN)CCC1",
                "NCC1(CN)CCC1",
                "NCC1(CN)CCCC1"
            ],
            "total_raw_response_smiles": [
                "NCC1(CN)CCC1",
                "NCC1(CN)CCCC1",
                "NCC1(CN)CCCCC1",
                "NCC1(CO)CCC1",
                "NCC1(CF)CCC1",
                "NCC1(CCN)CCC1",
                "NCC1(CN)CC1",
                "NCC1(CN)CCCO1",
                "NCC1(CN)CCCS1",
                "CC1(CN)CCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00413203239440918,
            "chemical_diversity": 0.5249337962091585,
            "average_molecular_weight": 122.1011,
            "api_call_time": 5.760962247848511
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NCC1(CN)CCC1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "c1ccc(C2CCCNC2)cc1",
                "O=C1CCc2ccccc2N1",
                "O=C1NC(=O)C2(CCCCC2)N1",
                "O=C1NCCC12CCCC2",
                "Nc1cccc2c1CCC2",
                "c1ccc(N2CCOCC2)cc1",
                "O=C1NCCCc2ccccc21",
                "O=C1NCCc2ccccc21",
                "C1CCC2(CC1)OCCO2",
                "O=C1CNCCc2ccccc21"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C2(CCCCC2)N1",
                "C1CCC2(CC1)OCCO2",
                "C1CC(=O)NC2=C1C=CC=C2",
                "C1CNCC(C1)C2=CC=CC=C2",
                "C1CCC2(C1)CCNC2=O",
                "C1COCCN1C2=CC=CC=C2",
                "O=C1NCCC2=C1C=CC=C2",
                "C1CC2=C(C1)C=CC=C2N",
                "C1CNCC(=O)C2=C1C=CC=C2",
                "C1CCNC(=O)C2=C1C=CC=C2"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007431507110595703,
            "chemical_diversity": 0.7980048164563542,
            "average_molecular_weight": 152.40159999999997,
            "api_call_time": 11.004797220230103
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NCC1(CN)CCC1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "NCC1(CS)CCC1",
                "NCC1(CI)CCC1",
                "NCC1(CP)CCC1",
                "NCC1(CF)CCC1",
                "NCC1(CCl)CCC1",
                "N#CCC1(CN)CCC1",
                "NCC1(CO)CCC1",
                "NCC1(CBr)CCC1",
                "NCC1(CN)CCC1"
            ],
            "total_raw_response_smiles": [
                "NCC1(CN)CCC1",
                "NCC1(CO)CCC1",
                "NCC1(CF)CCC1",
                "NCC1(CCl)CCC1",
                "NCC1(CBr)CCC1",
                "NCC1(CI)CCC1",
                "NCC1(CS)CCC1",
                "NCC1(CP)CCC1",
                "NCC1(CSi)CCC1",
                "NCC1(CC#N)CCC1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.00396728515625,
            "chemical_diversity": 0.44298220298220303,
            "average_molecular_weight": 141.09922222222218,
            "api_call_time": 5.76117467880249
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NCC1(CN)CCC1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1NC(=O)C(=O)C(=O)N1",
                "CN1CCN(c2nc3ccccc3c(=O)[nH]2)CC1",
                "CCOC(=O)c1ccccc1NC(=O)c1ccco1",
                "CC(=O)Nc1ccc(O)c(C(=O)O)c1",
                "Cc1ncsc1-c1ccc2c(c1)OCO2",
                "Cc1ccc(C(=O)Nc2ccc(Cl)cc2)cc1",
                "COc1cc(C=CC(=O)O)ccc1O",
                "Cc1nnc(Nc2nccs2)s1",
                "CC(C)(C)OC(=O)NCCc1c[nH]c2ccccc12",
                "CCOC(=O)C(C)(C)Oc1ccc(Br)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)C(=O)N1",
                "CC1=CC=C(C=C1)C(=O)NC2=CC=C(Cl)C=C2",
                "CCOC(=O)C1=CC=CC=C1NC(=O)C2=CC=CO2",
                "CC(C)(C)OC(=O)NCCC1=CNC2=C1C=CC=C2",
                "CC1=NN=C(NC2=NC=CS2)S1",
                "CCOC(=O)C(C)(C)OC1=CC=C(Br)C=C1",
                "CN1CCN(CC1)C2=NC3=CC=CC=C3C(=O)N2",
                "CC(=O)NC1=CC(=C(C=C1)O)C(=O)O",
                "COC1=C(O)C=CC(=C1)C=CC(=O)O",
                "CC1=C(SC=N1)C2=CC3=C(C=C2)OCO3"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008537769317626953,
            "chemical_diversity": 0.8789376727470488,
            "average_molecular_weight": 224.57289999999998,
            "api_call_time": 15.183479309082031
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NCC1(CN)CCC1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "NCC1(CCO)CCC1",
                "NCC1(CCCCO)CCC1",
                "NCCCCC1(CN)CCC1",
                "NCC1(CF)CCC1",
                "NCC1(CO)CCC1",
                "NCC1(CCCO)CCC1",
                "NCCCC1(CN)CCC1",
                "NCCC1(CN)CCC1",
                "NCC1(CN)CCC1",
                "NCC1(CCF)CCC1"
            ],
            "total_raw_response_smiles": [
                "NCC1(CN)CCC1",
                "NCC1(CCN)CCC1",
                "NCC1(CCCN)CCC1",
                "NCC1(CCCCN)CCC1",
                "NCC1(CO)CCC1",
                "NCC1(CCO)CCC1",
                "NCC1(CCCO)CCC1",
                "NCC1(CCCCO)CCC1",
                "NCC1(CF)CCC1",
                "NCC1(CCF)CCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004717588424682617,
            "chemical_diversity": 0.39458448272635915,
            "average_molecular_weight": 133.41569999999996,
            "api_call_time": 4.959644079208374
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NCC1(CN)CCC1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1NC(=O)C(c2ccccc2)C(c2ccccc2)N1",
                "O=C1CSC(Nc2ccc(C(F)(F)F)cc2)=N1",
                "COc1ccc(CC(=O)N2CCNCC2)cc1OC",
                "O=C(Nc1ccccc1)c1ccc2c(c1)OCO2",
                "CN1CCN(c2nc3ccccc3c(=O)[nH]2)CC1",
                "Nc1nnc(-c2ccc(Cl)cc2)s1",
                "Cc1nnc2n1-c1ccccc1C(c1ccccc1)=NC2",
                "Cc1c(-c2ccc(F)cc2)c(=O)ccn1C",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncccn2)CC1",
                "Cc1cc(=O)[nH]c2c(OCc3ccccc3)cccc12"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(C2=CC=CC=C2)C(C3=CC=CC=C3)N1",
                "C1=CC(=CC=C1C2=NN=C(S2)N)Cl",
                "CC1=C(C(=O)C=CN1C)C2=CC=C(C=C2)F",
                "COC1=C(C=C(C=C1)CC(=O)N2CCNCC2)OC",
                "CC1=NN=C2N1C3=C(C=CC=C3)C(=NC2)C4=CC=CC=C4",
                "O=C(NC1=CC=CC=C1)C2=CC3=C(C=C2)OCO3",
                "CN1CCN(CC1)C2=NC3=CC=CC=C3C(=O)N2",
                "CC(C)(C)OC(=O)N1CCC(CC1)NC2=NC=CC=N2",
                "CC1=CC(=O)NC2=C1C=CC=C2OCC3=CC=CC=C3",
                "O=C1CSC(=N1)NC2=CC=C(C=C2)C(F)(F)F"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010067224502563477,
            "chemical_diversity": 0.8777954468299829,
            "average_molecular_weight": 252.33239999999995,
            "api_call_time": 16.770676374435425
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NCC1(CN)CCC1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "NCC1(CS)CCC1",
                "NCC1(CI)CCC1",
                "NCC1(CP)CCC1",
                "NCC1(CF)CCC1",
                "NCC1(CCl)CCC1",
                "NCC1(CO)CCC1",
                "NCC1(CBr)CCC1",
                "NCC1(CN)CCC1"
            ],
            "total_raw_response_smiles": [
                "NCC1(CN)CCC1",
                "NCC1(CO)CCC1",
                "NCC1(CF)CCC1",
                "NCC1(CCl)CCC1",
                "NCC1(CBr)CCC1",
                "NCC1(CI)CCC1",
                "NCC1(CS)CCC1",
                "NCC1(CP)CCC1",
                "NC=C1(CN)CCC1",
                "NC#C1(CN)CCC1"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.0036988258361816406,
            "chemical_diversity": 0.42424242424242464,
            "average_molecular_weight": 143.21324999999996,
            "api_call_time": 7.0922229290008545
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'NCC1(CN)CCC1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "NC1CCSC1",
                "OC1CCCNC1",
                "OC1CCOC1",
                "NC1CCOCC1",
                "OC1CCSC1",
                "NC1CCSCC1",
                "OC1CCNCC1",
                "OC1CCOCC1",
                "NC1CCCCC1",
                "NC1CCCO1"
            ],
            "total_raw_response_smiles": [
                "NC1CCCCC1",
                "OC1CCNCC1",
                "NC1CCCO1",
                "OC1CCCNC1",
                "NC1CCSC1",
                "OC1CCOC1",
                "NC1CCOCC1",
                "OC1CCSC1",
                "NC1CCSCC1",
                "OC1CCOCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.003601551055908203,
            "chemical_diversity": 0.7546975254354382,
            "average_molecular_weight": 100.45660000000001,
            "api_call_time": 5.223074436187744
        }
    ],
    "CC(C)(C)CNC(=N)NC1CCCC1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)(C)CNC(=N)NC1CCCC1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)CNC(=N)NC1CCCC1F",
                "CC(C)(C)CNC(=N)NC1CCCC1Cl",
                "CCC(C)(C)CNC(=N)NC1CCCC1",
                "CC1CCCC1NC(=N)NCC(C)(C)C",
                "CC(C)(C)CNC(=N)N1CCCCC1",
                "CC(C)(C)CNC(=N)NC1CCCCC1",
                "CC1CCCCC1NC(=N)NCC(C)(C)C",
                "CC(C)(C)CNC(=N)NC1CCC1",
                "CC(C)(C)CNC(=N)NC1CCCCCC1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)CNC(=N)NC1CCCCC1",
                "CC(C)(C)CNC(=N)NC1CCCC1C",
                "CC(C)(C)CNC(=N)NC1CCC1",
                "CC(C)(C)CNC(=N)NC1CCCCC1C",
                "CC(C)(C)CNC(=N)NC1CCCCCC1",
                "CCC(C)(C)CNC(=N)NC1CCCC1",
                "CC(C)(CC)CNC(=N)NC1CCCC1",
                "CC(C)(C)CNC(=N)N1CCCCC1",
                "CC(C)(C)CNC(=N)NC1CCCC1F",
                "CC(C)(C)CNC(=N)NC1CCCC1Cl"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.006297588348388672,
            "chemical_diversity": 0.42185951322952153,
            "average_molecular_weight": 212.50344444444443,
            "api_call_time": 7.951530694961548
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)(C)CNC(=N)NC1CCCC1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(S(=O)(=O)N3CCOCC3)cc1N2",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(-c3ccccc3)cc2)CC1",
                "O=C(NCc1ccccc1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2=O",
                "O=C(Nc1ccc(F)cc1F)C1CCN(C(=O)c2ccco2)CC1",
                "CC(=O)N1CCc2c(c(-c3ccc(F)cc3)nn2-c2cccc(Cl)c2)C1",
                "COc1cc(OC)c(C(=O)NC2CCN(Cc3ccccc3)CC2)c(OC)c1",
                "COc1ccc(C2C(C(=O)OC(C)C)=C(C)NC3=C2C(=O)CCC3)cc1OC",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccs1",
                "Cc1cccc(C(=O)NC2CCN(Cc3ccccc3)CC2)c1Nc1ccccn1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccc(Cl)cc1",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(S(=O)(=O)N3CCOCC3)cc1N2",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(-c3ccccc3)cc2)CC1",
                "O=C(NCc1ccccc1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2=O",
                "COc1ccc(C2C(C(=O)OC(C)C)=C(C)NC3=C2C(=O)CCC3)cc1OC",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccs1",
                "Cc1cccc(C(=O)NC2CCN(Cc3ccccc3)CC2)c1Nc1ccccn1",
                "O=C(Nc1ccc(F)cc1F)C1CCN(C(=O)c2ccco2)CC1",
                "CC(=O)N1CCc2c(C1)c(-c1ccc(F)cc1)nn2-c1cccc(Cl)c1",
                "COc1cc(OC)c(C(=O)NC2CCN(Cc3ccccc3)CC2)c(OC)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.014013528823852539,
            "chemical_diversity": 0.8397804099533657,
            "average_molecular_weight": 354.10010000000017,
            "api_call_time": 17.28428554534912
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)(C)CNC(=N)NC1CCCC1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)CNC(=N)NC1CCOC1",
                "CC(C)(C)CNC(=N)NC1CCSCC1",
                "CCC(C)(C)CNC(=N)NC1CCCC1",
                "CC(C)(C)CNC(=N)NC1CCCC1",
                "CC(C)(C)CNC(=N)NC1CCCCC1",
                "CC(C)(C)CNC(=N)NC1CCCNC1",
                "CC(C)(C)CNC(=N)NC1CCSC1",
                "CC(C)(C)CNC(=N)NC1CCC1",
                "CC(C)(C)CNC(=N)NC1CCOCC1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)CNC(=N)NC1CCCCC1",
                "CC(C)(C)CNC(=N)NC1CCCC1",
                "CC(C)(C)CNC(=N)NC1CCC1",
                "CC(C)(C)CNC(=N)NC1CCOCC1",
                "CC(C)(C)CNC(=N)NC1CCSC1",
                "CC(C)(C)CNC(=N)NC1CCOC1",
                "CC(C)(C)CNC(=N)NC1CCSCC1",
                "CC(C)(C)CNC(=N)NC1CCCNC1",
                "CCC(C)(C)CNC(=N)NC1CCCC1",
                "CC(C)(CC)CNC(=N)NC1CCCC1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.006067752838134766,
            "chemical_diversity": 0.3556858476620929,
            "average_molecular_weight": 208.11711111111106,
            "api_call_time": 8.352137327194214
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)(C)CNC(=N)NC1CCCC1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCOC(=O)c1ccc(N=C(S)Nc2ccc(OC)cn2)nc1",
                "C1CCC(N2CCOCC2)CC1",
                "O=C1NC(=O)C(=O)N1",
                "CC1CN(c2nc3cc(Cl)ccc3c(=O)[nH]2)CCN1",
                "COc1ccc(CC(=O)Nc2ccc(Cl)c(Cl)c2)cc1OC",
                "Cc1nnc(-c2cc(F)cc(NC(=O)c3ccc(CN4CCN(C)CC4)cc3)c2)o1",
                "CCOC(=O)c1ccc(Nc2nc(=O)cc(-c3ccco3)[nH]2)cc1",
                "O=C(NCCc1cccs1)C1CCCN1C(=O)c1ccc(F)cc1",
                "CC(C)(C)OC(=O)NCCSSCCNC(=O)OC(C)(C)C",
                "Cc1ccc(S(=O)(=O)Nc2nccs2)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)N1",
                "C1COCCN1C2CCCCC2",
                "CC1=CC=C(C=C1)S(=O)(=O)NC2=NC=CS2",
                "CCOC(=O)C1=CC=C(C=C1)NC2=NC(=O)C=C(N2)C3=CC=CO3",
                "CC1CN(CCN1)C2=NC3=C(C(=O)N2)C=CC(=C3)Cl",
                "CC(C)(C)OC(=O)NCCSSCCNC(=O)OC(C)(C)C",
                "O=C(NCCC1=CC=CS1)C2CCCN2C(=O)C3=CC=C(C=C3)F",
                "COC1=C(C=C(C=C1)CC(=O)NC2=CC(=C(C=C2)Cl)Cl)OC",
                "CC1=NN=C(O1)C2=CC(=CC(=C2)NC(=O)C3=CC=C(C=C3)CN4CCN(CC4)C)F",
                "CCOC(=O)C1=CN=C(C=C1)N=C(S)NC2=NC=C(C=C2)OC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009640693664550781,
            "chemical_diversity": 0.8978125468349701,
            "average_molecular_weight": 292.27360000000004,
            "api_call_time": 18.63363218307495
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)(C)CNC(=N)NC1CCCC1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(C)CNC(=N)NC1CCCC1",
                "CC(C)(C)CNC(=N)NC1CCOC1",
                "CC(C)(C)CNC(=N)NC1CCSC1",
                "CC(C)(C)CNC(=N)NC1CCSCC1",
                "CC(C)(C)CNC(=N)NC1CCCCC1",
                "CC(C)(C)CNC(=N)NC1CCOCC1",
                "CC(C)(C)CNC(=N)NC1CCC1",
                "CCCC(C)CNC(=N)NC1CCCC1",
                "CC(C)(C)CNC(=N)NC1CCCCCC1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)CNC(=N)NC1CCCCC1",
                "CC(C)(C)CNC(=N)NC1CCCCCC1",
                "CC(C)(C)CNC(=N)NC1CCC1",
                "CC(C)(C)CNC(=N)NC1CCOCC1",
                "CC(C)(C)CNC(=N)NC1CCSCC1",
                "CC(C)(C)CNC(=N)NC1CCOC1",
                "CC(C)(C)CNC(=N)NC1CCSC1",
                "CCC(C)CNC(=N)NC1CCCC1",
                "CC(CC)CNC(=N)NC1CCCC1",
                "CCCC(C)CNC(=N)NC1CCCC1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.0061626434326171875,
            "chemical_diversity": 0.42147060896168864,
            "average_molecular_weight": 209.56588888888888,
            "api_call_time": 7.867023468017578
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)(C)CNC(=N)NC1CCCC1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)NS(=O)(=O)c1ccc2c(c1)C(=O)C(=O)N2",
                "Cc1cc(C(=O)CSc2nnc(C)s2)cs1",
                "CN1CCN(C(=O)c2ccc3c(c2)C(=O)N(C)C3=O)CC1",
                "COc1ccc(C=NNC(=O)c2cc(C)on2)cc1OC",
                "O=C(NCc1ccco1)c1cc(Br)cs1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(F)cc1",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccs1",
                "CC1(C)OC(=O)N(Cc2ccccc2)C1=O",
                "Cc1nnc(SCC(=O)Nc2cccc(Cl)c2)o1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(F)cc1",
                "CC1(C)OC(=O)N(Cc2ccccc2)C1=O",
                "CN1CCN(C(=O)c2ccc3c(c2)C(=O)N(C)C3=O)CC1",
                "CC(C)(C)NS(=O)(=O)c1ccc2c(c1)C(=O)C(=O)N2",
                "O=C(NCc1ccco1)c1cc(Br)cs1",
                "Cc1nnc(SCC(=O)Nc2cccc(Cl)c2)o1",
                "COc1ccc(C=NNC(=O)c2cc(C)on2)cc1OC",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccs1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "Cc1cc(C(=O)CSc2nnc(C)s2)cs1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010297536849975586,
            "chemical_diversity": 0.8647573240190308,
            "average_molecular_weight": 283.98940000000005,
            "api_call_time": 14.106536865234375
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)(C)CNC(=N)NC1CCCC1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)CNC(=N)NC1CCNC1",
                "CC(C)(C)CNC(=N)NC1CCOC1",
                "CC(C)(C)CNC(=N)NC1CCCS1",
                "CC(C)(C)CNC(=N)NC1CCCN1",
                "CC(C)(C)CNC(=N)NC1CCCO1",
                "CC(C)(C)CNC(=N)NC1CCCC1",
                "CC(C)(C)CNC(=N)NC1CCCCC1",
                "CC(C)(C)CN=C(N)NC1CCCC1",
                "CC(C)(C)CNC(=N)NC1CCSC1",
                "CC(C)(C)CNC(=N)NC1CCC1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)CNC(=N)NC1CCCC1",
                "CC(C)(C)CNC(=N)NC1CCCO1",
                "CC(C)(C)CNC(=N)NC1CCCS1",
                "CC(C)(C)CNC(=N)NC1CCCN1",
                "CC(C)(C)CNC(=N)NC1CCNC1",
                "CC(C)(C)CNC(=N)NC1CCOC1",
                "CC(C)(C)CNC(=N)NC1CCSC1",
                "CC(C)(C)CNC(=N)NC1CCC1",
                "CC(C)(C)CNC(=N)NC1CCCCC1",
                "CC(C)(C)CN=C(N)NC1CCCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006186962127685547,
            "chemical_diversity": 0.46742807539605835,
            "average_molecular_weight": 201.52599999999998,
            "api_call_time": 7.605297088623047
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)(C)CNC(=N)NC1CCCC1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)CNC(=S)Nc1ccccc1",
                "CC(C)(C)CNC(=N)NCc1cccs1",
                "CC(C)(C)CNC(=O)OCc1ccccc1",
                "CC(C)(C)CNC(=O)C1CCOCC1",
                "CC(C)(C)CNC(=N)NC1CCCCC1",
                "CC(C)(C)CNC(=O)c1cnccn1",
                "CC(C)(C)COC(=O)c1ccccc1",
                "CC(C)(C)CNC(=N)Nc1ccncc1",
                "CC(C)(C)CNC(=O)NCc1ccco1",
                "CC(C)(C)CNC(=S)NC1CCNCC1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)COC(=O)c1ccccc1",
                "CC(C)(C)CNC(=O)c1cnccn1",
                "CC(C)(C)CNC(=S)Nc1ccccc1",
                "CC(C)(C)CNC(=O)NCc1ccco1",
                "CC(C)(C)CNC(=N)NCc1cccs1",
                "CC(C)(C)CNC(=O)OCc1ccccc1",
                "CC(C)(C)CNC(=N)Nc1ccncc1",
                "CC(C)(C)CNC(=O)C1CCOCC1",
                "CC(C)(C)CNC(=N)NC1CCCCC1",
                "CC(C)(C)CNC(=S)NC1CCNCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007071495056152344,
            "chemical_diversity": 0.6997769116932285,
            "average_molecular_weight": 211.1136,
            "api_call_time": 8.865710973739624
        }
    ],
    "C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H](NCC1(C#N)CC1)C1CCCC1",
                "C[C@@H](NCC1(C#N)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C#N)CC1)C1CCOCC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCSC1",
                "C[C@H](NCC1(C#N)CC1)C1CCSCC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCNC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCCO1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCNC1=O",
                "C[C@H](NCC1(C#N)CCC1)[C@@H]1CCOC1"
            ],
            "total_raw_response_smiles": [
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCSC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCNC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCCC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCCO1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCNC1=O",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCOCC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCSCC1",
                "C[C@H](NCC1(C#N)CCC1)[C@@H]1CCOC1",
                "C[C@@H](NCC1(C#N)CC1)[C@@H]1CCOC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007485628128051758,
            "chemical_diversity": 0.3794319681799744,
            "average_molecular_weight": 202.70399999999998,
            "api_call_time": 11.165000677108765
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)c1ccc(C(=O)N2CCN(Cc3ccccc3)CC2)cc1",
                "Cc1cccc(NC(=O)c2ccc(CN3CCOCC3)cc2)c1",
                "COc1ccc(CNC(=O)c2ccc(-n3ccnc3)cc2)cc1OC",
                "CC(C)NC(=O)Cn1c(SCc2cccc(F)c2)nc2ccccc21",
                "O=C(NCc1ccncc1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2",
                "O=C(Cn1cnc2c1c(=O)n(Cc1ccccc1)c(=O)n2C1CCCC1)N1CCOCC1",
                "O=C(CSc1nnc(-c2ccco2)n1Cc1ccccc1)Nc1ccc(Cl)cc1",
                "COc1ccc(Cn2c(=O)c3ccccc3n(CC(=O)Nc3ccc(F)cc3)c2=O)cc1",
                "CC(C)Oc1ccc(C(=O)NCc2cccs2)cc1",
                "Cc1ccc(S(=O)(=O)N2CCN(C(=O)c3ccco3)CC2)cc1"
            ],
            "total_raw_response_smiles": [
                "CC(C)(C)c1ccc(C(=O)N2CCN(Cc3ccccc3)CC2)cc1",
                "O=C(NCc1ccncc1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2",
                "COc1ccc(Cn2c(=O)c3ccccc3n(CC(=O)Nc3ccc(F)cc3)c2=O)cc1",
                "CC(C)Oc1ccc(C(=O)NCc2cccs2)cc1",
                "Cc1cccc(NC(=O)c2ccc(CN3CCOCC3)cc2)c1",
                "O=C(Cn1cnc2c1c(=O)n(Cc1ccccc1)c(=O)n2C1CCCC1)N1CCOCC1",
                "CC(C)NC(=O)Cn1c(SCc2cccc(F)c2)nc2ccccc21",
                "COc1ccc(CNC(=O)c2ccc(-n3ccnc3)cc2)cc1OC",
                "O=C(CSc1nnc(-c2ccco2)n1Cc1ccccc1)Nc1ccc(Cl)cc1",
                "Cc1ccc(S(=O)(=O)N2CCN(C(=O)c3ccco3)CC2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.013237953186035156,
            "chemical_diversity": 0.788725399599307,
            "average_molecular_weight": 360.4744000000001,
            "api_call_time": 17.73782467842102
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H](NCC1(C(=O)Br)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C(=O)F)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C(=N)N)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C(=O)I)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C(=O)O)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C(=O)Cl)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C(=O)S)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C(N)=O)CC1)[C@@H]1CCOC1"
            ],
            "total_raw_response_smiles": [
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C(N)=O)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C(=O)O)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C(=O)N)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C(=N)N)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C(=O)Cl)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C(=O)Br)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C(=O)F)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C(=O)I)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C(=O)S)CC1)[C@@H]1CCOC1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.0073986053466796875,
            "chemical_diversity": 0.29333997641924425,
            "average_molecular_weight": 234.09344444444437,
            "api_call_time": 11.131539821624756
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CN1CCN(c2nc(-c3ccco3)nc3ccccc23)CC1",
                "O=C(O)c1ccc(N2C(=O)c3ccccc3C2=O)cc1",
                "CC1(C)CC(=O)C2=C(C1)N(Cc1ccccc1)c1ccccc1N2",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3[nH]ccc23)CC1",
                "COc1cc(C=CC(=O)N2CCOCC2)cc(OC)c1OC",
                "Cc1nnc(SCC2=C(C(=O)O)N3C(=O)[C@@H](NC(=O)Cn4cnnn4)[C@H]3SC2)s1",
                "O=C(Nc1ccc(Cl)cc1)c1ccc(OC(F)(F)F)cc1",
                "CC[C@H](C)[C@@H](C(=O)N[C@@H](Cc1ccccc1)C(=O)O)N(C)C(=O)c1cccs1",
                "N#C[C@]1(C(F)(F)F)OC(=O)Nc2ccc(Br)cc21",
                "CC(=O)N1CCN(Cc2ccccc2)CC1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)N1CCN(Cc2ccccc2)CC1",
                "O=C(Nc1ccc(Cl)cc1)c1ccc(OC(F)(F)F)cc1",
                "COc1cc(C=CC(=O)N2CCOCC2)cc(OC)c1OC",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3[nH]ccc23)CC1",
                "CC1(C)CC(=O)C2=C(C1)N(Cc1ccccc1)c1ccccc1N2",
                "O=C(O)c1ccc(N2C(=O)c3ccccc3C2=O)cc1",
                "CN1CCN(c2nc(-c3ccco3)nc3ccccc23)CC1",
                "Cc1nnc(SCC2=C(C(=O)O)N3C(=O)[C@@H](NC(=O)Cn4cnnn4)[C@H]3SC2)s1",
                "CC[C@H](C)[C@@H](C(=O)N[C@@H](Cc1ccccc1)C(=O)O)N(C)C(=O)c1cccs1",
                "O=C1Nc2ccc(Br)cc2[C@@](C#N)(C(F)(F)F)O1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.013608694076538086,
            "chemical_diversity": 0.867888709875823,
            "average_molecular_weight": 321.6822000000001,
            "api_call_time": 17.53939127922058
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H](NCC1(C)CC1)[C@@H]1CCOC1",
                "CCCCC1(CN[C@@H](C)[C@@H]2CCOC2)CC1",
                "C[C@H](NCC1(C#N)CCCCCC1)[C@@H]1CCOC1",
                "CCCCCC1(CN[C@@H](C)[C@@H]2CCOC2)CC1",
                "CCC1(CN[C@@H](C)[C@@H]2CCOC2)CC1",
                "CCCC1(CN[C@@H](C)[C@@H]2CCOC2)CC1",
                "C[C@H](NCC1(C#N)CCCC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C#N)CCC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C#N)CCCCC1)[C@@H]1CCOC1"
            ],
            "total_raw_response_smiles": [
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C#N)CCC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C#N)CCCC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C#N)CCCCC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C#N)CCCCCC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(CC)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(CCC)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(CCCC)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(CCCCC)CC1)[C@@H]1CCOC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008093833923339844,
            "chemical_diversity": 0.3070710903713538,
            "average_molecular_weight": 216.84049999999993,
            "api_call_time": 11.189920663833618
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "Cc1cc(Nc2ncnc3cc(Br)ccc23)cc(C(=O)Nc2ccc(N3CCOCC3)cc2)n1",
                "O=C(O)c1ccc(NC(=O)C2CCN(c3ncnc4c3nc(N3CCOCC3)n4Cc3ccccc3)CC2)cc1",
                "CC(C)CC(NC(=O)C1CCCN1C(=O)c1ccc2ccccc2n1)C(=O)N1Cc2ccccc2C1",
                "CC(C)Cn1cnc(C(=O)N2CCCC(c3cccc(C(F)(F)F)c3)C2)c1Cl",
                "O=C(NCc1ccncc1)c1ccc2c(c1)C(=O)N(CCN1CCOCC1)C2=O",
                "COc1cc(C=NNC(=O)c2cc(OC)c(OC)c(OC)c2)ccc1O",
                "COc1ccc(-c2cc(C(F)(F)F)nc(SCC(=O)Nc3ccc(S(=O)(=O)N4CCCC4)cc3)n2)cc1OC",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(-c3ccc(C#N)cc3)o2)CC1",
                "CC1(C)CC(=O)C2=C(C1)N(Cc1ccc(F)cc1)c1nc(N)nc(O)c1C2c1ccccc1Cl"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(-c3ccc(C#N)cc3)o2)CC1",
                "COc1cc(C=NNC(=O)c2cc(OC)c(OC)c(OC)c2)ccc1O",
                "CC1(C)CC(=O)C2=C(C1)N(Cc1ccc(F)cc1)c1nc(N)nc(O)c1C2c1ccccc1Cl",
                "O=C(NCc1ccncc1)c1ccc2c(c1)C(=O)N(CCN1CCOCC1)C2=O",
                "CC(C)Cn1cnc(C(=O)N2CCCC(c3cccc(C(F)(F)F)c3)C2)c1Cl",
                "Cc1cc(Nc2ncnc3cc(Br)ccc23)cc(C(=O)Nc2ccc(N3CCOCC3)cc2)n1",
                "O=C(O)c1ccc(NC(=O)C2CCN(c3ncnc4c3nc(N3CCOCC3)n4Cc3ccccc3)CC2)cc1",
                "COc1ccc(-c2cc(C(F)(F)F)nc(SCC(=O)Nc3ccc(S(=O)(=O)N4CCCC4)cc3)n2)cc1OC",
                "CC(C)CC(NC(=O)C1CCCN1C(=O)c1ccc2ccccc2n1)C(=O)N1Cc2ccccc2C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.016473770141601562,
            "chemical_diversity": 0.8415963925903258,
            "average_molecular_weight": 461.9223000000002,
            "api_call_time": 24.392936944961548
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H](NCC1(C#N)CC1)C1CCCC1",
                "C[C@H](NCC1(C#N)CC1)C1CCOCC1",
                "C[C@H](NCC1(C#N)CO1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C=N)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCSC1",
                "C[C@H](NCC1(C#N)CC1)[C@H]1CCOC1",
                "C#CC1(CN[C@@H](C)[C@@H]2CCOC2)CC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCNC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1O"
            ],
            "total_raw_response_smiles": [
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCSC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCNC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCCC1",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1O",
                "C[C@H](NCC1(C#N)CC1)[C@@H]1CCOCC1",
                "C[C@H](NCC1(C#N)CC1)[C@H]1CCOC1",
                "C[C@H](NCC1(C=N)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C#C)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C#N)CO1)[C@@H]1CCOC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007418394088745117,
            "chemical_diversity": 0.43960221901149177,
            "average_molecular_weight": 198.89179999999993,
            "api_call_time": 10.857439517974854
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C[C@H](NCC1(C#N)CC1)[C@@H]1CCOC1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H](NCC1(N=N)CC1)C1CC=CC1",
                "C[C@H](NCC1(B(O)O)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(S(C)(=O)=O)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C=O)CC1)[C@@H]1CCOC1",
                "C#CC1(CN[C@@H](C)[C@@H]2CCOC2)CC1",
                "C[C@H](NCC1(C(=O)O)CC1)[C@@H]1CCSC1",
                "C[C@H](NCC1([N+](=O)[O-])CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(P(=O)(O)O)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C(N)=O)CC1)[C@@H]1CCNC1",
                "C[C@H](NCC1(C(F)(F)F)CC1)C1CCCC1"
            ],
            "total_raw_response_smiles": [
                "C[C@H](NCC1(C(=O)O)CC1)[C@@H]1CCSC1",
                "C[C@H](NCC1(C(N)=O)CC1)[C@@H]1CCNC1",
                "C[C@H](NCC1(C(F)(F)F)CC1)[C@@H]1CCCC1",
                "C[C@H](NCC1(S(=O)(=O)C)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(N=N)CC1)[C@@H]1CC=CC1",
                "C[C@H](NCC1(P(=O)(O)O)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(B(O)O)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1([N+](=O)[O-])CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C=O)CC1)[C@@H]1CCOC1",
                "C[C@H](NCC1(C#C)CC1)[C@@H]1CCOC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007847070693969727,
            "chemical_diversity": 0.5882580407194328,
            "average_molecular_weight": 218.37669999999994,
            "api_call_time": 11.025336265563965
        }
    ],
    "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CS1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CS1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C1C[C@H](NN=C2CCC3C[C@@H]23)CS1",
                "C1C[C@H](NN=C2CC[C@@H]3C[C@@H]23)CS1",
                "C1C[C@H](NN=C2CC[C@H]3CC23)CS1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CO1",
                "C1C[C@H](NN=C2CC[C@@H]3C[C@H]23)CS1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CS1",
                "C1CCC(NN=C2CC[C@H]3C[C@@H]23)C1",
                "C1C[C@@H](NN=C2CC[C@H]3C[C@@H]23)CS1",
                "C1CC(NN=C2CC[C@H]3C[C@@H]23)C1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@H]23)CS1"
            ],
            "total_raw_response_smiles": [
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CS1",
                "C1C[C@H](NN=C2CC[C@@H]3C[C@@H]23)CS1",
                "C1C[C@@H](NN=C2CC[C@H]3C[C@@H]23)CS1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@H]23)CS1",
                "C1C[C@H](NN=C2CC[C@@H]3C[C@H]23)CS1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CO1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CC1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)C1",
                "C1C[C@H](NN=C2CCC3C[C@@H]23)CS1",
                "C1C[C@H](NN=C2CC[C@H]3CC23)CS1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0076045989990234375,
            "chemical_diversity": 0.20370958259847138,
            "average_molecular_weight": 189.70149999999998,
            "api_call_time": 10.905444145202637
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CS1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(Cn1cnc2ccccc21)N1CCCC1",
                "Cc1ccc(S(=O)(=O)N2CCNCC2)cc1",
                "O=C1CCCN1c1ccc(Cl)cc1",
                "COc1ccc(CN2CCNCC2)cc1",
                "O=C1NC(=O)C2(CCCCC2)N1",
                "CC1(C)CC(=O)NC(=O)C1",
                "CC(C)(C)OC(=O)N1CCNCC1",
                "Cc1nnc(SCC(=O)N2CCCC2)n1C",
                "Cc1n[nH]c(=O)c2ccccc12",
                "C1CCC2(CC1)OCCO2"
            ],
            "total_raw_response_smiles": [
                "CC1=NNC(=O)c2ccccc21",
                "O=C1NC(=O)C2(CCCCC2)N1",
                "C1CCC2(CC1)OCCO2",
                "CC(C)(C)OC(=O)N1CCNCC1",
                "O=C1CCCN1c1ccc(Cl)cc1",
                "COc1ccc(CN2CCNCC2)cc1",
                "CC1(C)CC(=O)NC(=O)C1",
                "Cc1nnc(SCC(=O)N2CCCC2)n1C",
                "O=C(Cn1cnc2ccccc21)N1CCCC1",
                "Cc1ccc(S(=O)(=O)N2CCNCC2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007977485656738281,
            "chemical_diversity": 0.876408602501151,
            "average_molecular_weight": 190.9876,
            "api_call_time": 12.912759780883789
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CS1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1NCCC[C@@H]1NN=C1CC[C@H]2C[C@@H]12",
                "O=C1CC[C@@H](NN=C2CC[C@H]3C[C@@H]23)CCO1",
                "C1CCC(NN=C2CC[C@H]3C[C@@H]23)CC1",
                "C1CC[C@H](NN=C2CC[C@H]3C[C@@H]23)CSC1",
                "C1COCC[C@@H](NN=C2CC[C@H]3C[C@@H]23)C1",
                "O=C1CCC[C@H](NN=C2CC[C@H]3C[C@@H]23)CS1",
                "C1CSC[C@@H](NN=C2CC[C@H]3C[C@@H]23)C1",
                "O=C1CCC[C@H](NN=C2CC[C@H]3C[C@@H]23)C1",
                "C1COC[C@@H](NN=C2CC[C@H]3C[C@@H]23)C1",
                "C1CNC[C@@H](NN=C2CC[C@H]3C[C@@H]23)C1"
            ],
            "total_raw_response_smiles": [
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CSC1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)COC1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CNC1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CC(=O)C1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CCC1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)C(=O)NC1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CCC(=O)O1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CSC(=O)C1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CSCC1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CCOC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009028196334838867,
            "chemical_diversity": 0.42406261945065526,
            "average_molecular_weight": 209.71120000000002,
            "api_call_time": 11.762583017349243
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CS1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nnc(SCC(=O)N2CCN(C(=O)c3ccco3)CC2)s1",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "O=C(Nc1ccc(N2CCOCC2)cc1)c1csc(N2CCOCC2)n1",
                "Cc1ccc(NC(=O)c2ccc(CN3CCN(C)CC3)cc2)cc1Cl",
                "CC1(C)CC(=O)c2c(nc(S)n(-c3ccccc3)c2=O)C1",
                "COc1ccc(C2C(C(=O)OC(C)C)=C(C)NC3=C2C(=O)CCC3)cc1",
                "Cc1cc(NC(=O)c2cc(Cl)ccc2O)no1",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "COc1cc(C=CC(=O)N2CCN(C)CC2)cc(OC)c1OC",
                "O=C(CSc1ncccn1)N1CCN(c2ccccc2)CC1"
            ],
            "total_raw_response_smiles": [
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "COc1cc(C=CC(=O)N2CCN(C)CC2)cc(OC)c1OC",
                "Cc1nnc(SCC(=O)N2CCN(C(=O)c3ccco3)CC2)s1",
                "O=C(CSc1ncccn1)N1CCN(c2ccccc2)CC1",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "COc1ccc(C2C(C(=O)OC(C)C)=C(C)NC3=C2C(=O)CCC3)cc1",
                "Cc1cc(NC(=O)c2cc(Cl)ccc2O)no1",
                "CC1(C)CC(=O)C2=C(C1)N=C(S)N(c1ccccc1)C2=O",
                "O=C(Nc1ccc(N2CCOCC2)cc1)c1csc(N2CCOCC2)n1",
                "Cc1ccc(NC(=O)c2ccc(CN3CCN(C)CC3)cc2)cc1Cl"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012506484985351562,
            "chemical_diversity": 0.8302879288042029,
            "average_molecular_weight": 321.5772000000001,
            "api_call_time": 15.46865177154541
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CS1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1CC[C@@H](NN=C2CC[C@H]3C[C@@H]23)CCO1",
                "O=C1CCC[C@H](NN=C2CC[C@H]3C[C@@H]23)CCO1",
                "C1CCC(NN=C2CC[C@H]3C[C@@H]23)CC1",
                "C1CC(NN=C2CC[C@H]3C[C@@H]23)CCO1",
                "C1CSC[C@@H](NN=C2CC[C@H]3C[C@@H]23)C1",
                "O=S1(=O)CC[C@@H](NN=C2CC[C@H]3C[C@@H]23)CCO1",
                "C1COC[C@@H](NN=C2CC[C@H]3C[C@@H]23)C1",
                "C1CC(NN=C2CC[C@H]3C[C@@H]23)CCN1",
                "C1CNC[C@@H](NN=C2CC[C@H]3C[C@@H]23)C1"
            ],
            "total_raw_response_smiles": [
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CSC1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CCC1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)COC1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CNC1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CCO1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CCN1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CCC(=O)O1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CCS(=O)(=O)O1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CC[N+](=O)[O-]1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CCOC(=O)C1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.008214712142944336,
            "chemical_diversity": 0.4078108583360468,
            "average_molecular_weight": 210.52688888888886,
            "api_call_time": 12.503053188323975
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CS1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1nc(SCC(=O)Nc2ccc(C#N)cc2)sc1C(=O)O",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(Br)s2)CC1",
                "CC1(C)CC(=O)c2c(oc3c(C#N)ccc(N4CCOCC4)c23)C1",
                "COc1ccc(C(=O)N2CCN(c3ncccn3)CC2)cc1OC",
                "Cc1cc(C)n(C(=O)CSc2nnc(-c3ccco3)o2)n1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(F)cc1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCCC2)cc1)c1cccs1",
                "O=C(NCc1ccco1)c1ccc(N2CCOCC2)cc1",
                "Cc1ccc(NC(=O)C2CCN(C(=O)c3ccco3)CC2)cc1",
                "CC(C)(C)NC(=O)COc1ccc(N2C(=O)CSC2=O)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(F)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(Br)s2)CC1",
                "Cc1nc(SCC(=O)Nc2ccc(C#N)cc2)sc1C(=O)O",
                "O=C(NCc1ccco1)c1ccc(N2CCOCC2)cc1",
                "COc1ccc(C(=O)N2CCN(c3ncccn3)CC2)cc1OC",
                "CC1(C)CC(=O)C2=C(C1)Oc1c(C#N)ccc(c12)N1CCOCC1",
                "Cc1cc(C)n(C(=O)CSc2nnc(-c3ccco3)o2)n1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCCC2)cc1)c1cccs1",
                "CC(C)(C)NC(=O)COc1ccc(N2C(=O)CSC2=O)cc1",
                "Cc1ccc(NC(=O)C2CCN(C(=O)c3ccco3)CC2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011685848236083984,
            "chemical_diversity": 0.8415468197537259,
            "average_molecular_weight": 325.4035,
            "api_call_time": 18.003960132598877
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CS1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)[SiH2]1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)C[Si]1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)C[Se]1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)C[Ge]1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CO1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)[GeH2]1",
                "C1CCC(NN=C2CC[C@H]3C[C@@H]23)C1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)[SeH]1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CP1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CN1"
            ],
            "total_raw_response_smiles": [
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CO1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CC1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CN1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CP1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)C[Se]1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)C[Si]1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)C[Ge]1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)[SiH2]1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)[GeH2]1",
                "C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)[SeH]1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007216930389404297,
            "chemical_diversity": 0.445039496298526,
            "average_molecular_weight": 204.18139999999997,
            "api_call_time": 14.035611391067505
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C1C[C@H](NN=C2CC[C@H]3C[C@@H]23)CS1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "I[C@@H]1CCC(=NN[C@H]2CCSC2)C1",
                "F[C@@H]1CCC(=NN[C@H]2CCSC2)C1",
                "Br[C@@H]1CCC(=NN[C@H]2CCSC2)C1",
                "C1CC(=NN[C@H]2CCSC2)CO1",
                "C1CC(=NN[C@H]2CCSC2)CS1",
                "O[C@H]1CCC(=NN[C@H]2CCSC2)C1",
                "Cl[C@@H]1CCC(=NN[C@H]2CCSC2)C1",
                "C1CC(=NN[C@H]2CCSC2)CN1",
                "N[C@H]1CCC(=NN[C@H]2CCSC2)C1",
                "S[C@@H]1CCC(=NN[C@H]2CCSC2)C1"
            ],
            "total_raw_response_smiles": [
                "C1C[C@H](NN=C2CCOC2)CS1",
                "C1C[C@H](NN=C2CCSC2)CS1",
                "C1C[C@H](NN=C2CCNC2)CS1",
                "C1C[C@H](NN=C2CC[C@@H](C2)O)CS1",
                "C1C[C@H](NN=C2CC[C@@H](C2)N)CS1",
                "C1C[C@H](NN=C2CC[C@H](C2)F)CS1",
                "C1C[C@H](NN=C2CC[C@H](C2)Cl)CS1",
                "C1C[C@H](NN=C2CC[C@H](C2)Br)CS1",
                "C1C[C@H](NN=C2CC[C@H](C2)I)CS1",
                "C1C[C@H](NN=C2CC[C@H](C2)S)CS1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006844043731689453,
            "chemical_diversity": 0.3766676257904322,
            "average_molecular_weight": 218.43879999999996,
            "api_call_time": 9.399773120880127
        }
    ],
    "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)N1C[C@H](C(N)=O)[C@H]2CCC[C@H]21",
                "CC(C)N1C[C@H]2CCC[C@H]2[C@H]1C(N)=O",
                "CCC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(=O)O",
                "CC(C)N1C[C@@H]2CCCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C#N",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=S",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O"
            ],
            "total_raw_response_smiles": [
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@H]2CCC[C@H]2[C@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(O)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(=O)N",
                "CCC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C#N",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=S",
                "CC(C)N1C[C@@H]2CC[C@@H]3CC[C@@H]2[C@@H]31C(N)=O",
                "CC(C)N1[C@@H]2CCC[C@@H]2[C@@H](C(N)=O)C1"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.00737309455871582,
            "chemical_diversity": 0.3705007752291174,
            "average_molecular_weight": 199.68037500000003,
            "api_call_time": 14.797213077545166
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C1NC2(CCOCC2)C(=O)N1C1CCCCC1",
                "O=C1NC2(CCSC2)C(=O)N1C1CCC1",
                "O=C1NC2(CCCC2)N(c2ccco2)C1=O",
                "O=C(c1ccccc1)N1C2CCCC2C2CCCC21",
                "O=C1NC(=O)C2(CCCCC2)N1",
                "O=C1NC2(CCCCC2)N(C2CCCO2)C1=O",
                "O=C(c1ccccc1)N1C2CCCC1CC2",
                "O=C1NC2CCCC2(c2ccccc2)N1",
                "O=C1NCCC2(CCCC2)C1=O",
                "O=C1NC(=O)C2(CCCCC2)N1C1CCCCC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C2(CCCCC2)N1",
                "C1CCC2(CC1)C(=O)NC(=O)N2C3CCCCC3",
                "O=C1NCCC2(CCCC2)C1=O",
                "C1CC2CCC(C1)N2C(=O)C3=CC=CC=C3",
                "O=C(C1=CC=CC=C1)N2C3CCCC3C4CCCC24",
                "C1CCC2(CC1)NC(=O)C(=O)N2C3CCCO3",
                "O=C1NC2(CCOCC2)C(=O)N1C3CCCCC3",
                "C1CC2NC(=O)NC2(C3=CC=CC=C3)C1",
                "O=C1NC2(CCSC2)C(=O)N1C3CCC3",
                "C1CCC2(C1)NC(=O)C(=O)N2C3=CC=CO3"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00848078727722168,
            "chemical_diversity": 0.7551354973475575,
            "average_molecular_weight": 219.57899999999995,
            "api_call_time": 13.2782461643219
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)N1C[C@H]2CCC[C@H]2[C@H]1C(N)=O",
                "CCC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(=O)O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(=N)O",
                "CC(C)N1C[C@@H]2CCCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C#N",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O"
            ],
            "total_raw_response_smiles": [
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(O)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(=O)O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C#N",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C=O",
                "CCC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@H]2CCC[C@H]2[C@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CC[C@@H]3CC[C@@H]2[C@@H]31C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(=N)O"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.00710749626159668,
            "chemical_diversity": 0.379972804732177,
            "average_molecular_weight": 195.79500000000002,
            "api_call_time": 11.606313705444336
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCCc1ccccc1)c1ccc2cn[nH]c2c1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(F)cc2)CC1",
                "O=C1Nc2ccccc2C(=O)C1Cc1ccncc1",
                "CC(=O)Nc1ccc(C(=O)Nc2ccc(-c3ccccc3)o2)cc1",
                "C[C@H]1CC[C@@H](C(=O)N2CCN(c3ccccc3F)CC2)CC1",
                "CON=C(C(=O)NC1C(=O)N2C(C(=O)O)=C(CSc3nnc(C)s3)CSC12)c1csc(N)n1",
                "COc1ccc(C(=O)Nc2ccc(Cl)c(Cl)c2)cc1OC",
                "Cc1ccc(S(=O)(=O)Nc2ccc(Cl)cn2)cc1",
                "CC1(C)C(=O)NC(=O)C12CCCCC2",
                "CN1CCN(C2=Nc3ccccc3Nc3ccc(Cl)cc32)CC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C2(CCCCC2)C1(C)C",
                "CC1=CC=C(C=C1)S(=O)(=O)NC2=NC=C(Cl)C=C2",
                "C[C@H]1CC[C@H](CC1)C(=O)N2CCN(CC2)C3=CC=CC=C3F",
                "CC(C)(C)OC(=O)N1CCC(CC1)NC(=O)C2=CC=C(C=C2)F",
                "O=C(NCCC1=CC=CC=C1)C2=CC3=C(C=C2)C=NN3",
                "COC1=C(OC)C=C(C=C1)C(=O)NC2=CC(=C(C=C2)Cl)Cl",
                "CC1=NN=C(S1)SCC2=C(N3C(C(C3=O)NC(=O)C(=NOC)C4=CSC(=N4)N)SC2)C(=O)O",
                "O=C1C(C(=O)NC2=CC=CC=C12)CC3=CC=NC=C3",
                "CC(=O)NC1=CC=C(C=C1)C(=O)NC2=CC=C(O2)C3=CC=CC=C3",
                "CN1CCN(CC1)C2=NC3=CC=CC=C3NC4=C2C=C(C=C4)Cl"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011541366577148438,
            "chemical_diversity": 0.8664993854155825,
            "average_molecular_weight": 312.33850000000007,
            "api_call_time": 18.84754776954651
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(=O)O",
                "CCCC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(=N)O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=S",
                "CC(C)CN1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O"
            ],
            "total_raw_response_smiles": [
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CCC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CC(CC)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)CN1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(O)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(=O)O",
                "CCCC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=S",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(=N)O"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.007611989974975586,
            "chemical_diversity": 0.4207375484777379,
            "average_molecular_weight": 207.19237500000003,
            "api_call_time": 15.159046649932861
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCc1ccco1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2=O",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccoc1",
                "O=C(CSc1nnc(-c2ccco2)n1-c1ccccc1)N1CCSCC1",
                "O=C(N[C@@H]1CCCC[C@H]1c1ccc(F)cc1)c1ccc(Cl)s1",
                "COc1ccc(C2=NNC(=O)[C@@H]3CCCN23)cc1OC",
                "CC(C)Cn1cnc(C(=O)N[C@H]2CN(C(=O)c3ccco3)C[C@H]2C)c1",
                "CC(C)C[C@H](NC(=O)c1cccs1)C(=O)N1CCOCC1",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3cc(Br)ccc23)CC1",
                "Cc1nnc(SCC(=O)N2CCN(c3ccc(C(F)(F)F)cc3)CC2)n1C",
                "CC1(C)O[C@@H]2O[C@@]3(COS(=O)(=O)N3)OC[C@H]2O1"
            ],
            "total_raw_response_smiles": [
                "O=C(N[C@@H]1CCCC[C@H]1c1ccc(F)cc1)c1ccc(Cl)s1",
                "CC(C)(C)OC(=O)N1CCC(Nc2ncnc3cc(Br)ccc23)CC1",
                "O=C(NCc1ccco1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2=O",
                "COc1ccc(C2=NNC(=O)[C@@H]3CCCN32)cc1OC",
                "CC(C)C[C@H](NC(=O)c1cccs1)C(=O)N1CCOCC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccoc1",
                "CC1(C)O[C@@H]2CO[C@]3(COS(=O)(=O)N3)O[C@H]2O1",
                "Cc1nnc(SCC(=O)N2CCN(c3ccc(C(F)(F)F)cc3)CC2)n1C",
                "O=C(CSc1nnc(-c2ccco2)n1-c1ccccc1)N1CCSCC1",
                "CC(C)Cn1cnc(C(=O)N[C@H]2CN(C(=O)c3ccco3)C[C@H]2C)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012254953384399414,
            "chemical_diversity": 0.8594038310755373,
            "average_molecular_weight": 342.52420000000006,
            "api_call_time": 17.34312081336975
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)N1C[C@H]2CCC[C@H]2[C@H]1C(N)=O",
                "CCC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(=O)O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(=N)O",
                "CC(C)N1C[C@@H]2CCCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C#N",
                "CC(C)N1C[C@@H]2CC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=S",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O"
            ],
            "total_raw_response_smiles": [
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@H]2CCC[C@H]2[C@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(O)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(=O)O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=S",
                "CC(C)N1C[C@@H]2CCCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C#N",
                "CCC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(=N)O"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.0058820247650146484,
            "chemical_diversity": 0.3484058946032289,
            "average_molecular_weight": 197.74555555555557,
            "api_call_time": 12.861850500106812
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(C)N1C[C@@H]2CCC[C@@H]2[C@@H]1C(N)=O', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)N1C[C@@H]2CCOC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCNC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CC[C@@H](Cl)[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CC[C@@H](Br)[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCSC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CC[C@@H](O)[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CC=C[C@@H]2[C@@H]1C(N)=S",
                "CC(C)N1C[C@@H]2CC[C@@H](F)[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CC[C@@H](I)[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCCC[C@@H]2[C@@H]1C(=O)O"
            ],
            "total_raw_response_smiles": [
                "CC(C)N1C[C@@H]2CCCC[C@@H]2[C@@H]1C(O)=O",
                "CC(C)N1C[C@@H]2CCSC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CC=C[C@@H]2[C@@H]1C(N)=S",
                "CC(C)N1C[C@@H]2CCOC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CCNC[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CC[C@@H](F)[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CC[C@@H](Cl)[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CC[C@@H](Br)[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CC[C@@H](I)[C@@H]2[C@@H]1C(N)=O",
                "CC(C)N1C[C@@H]2CC[C@@H](O)[C@@H]2[C@@H]1C(N)=O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008165836334228516,
            "chemical_diversity": 0.4837719320955013,
            "average_molecular_weight": 232.83100000000005,
            "api_call_time": 12.568384408950806
        }
    ],
    "CCC[C@H](C)N[C@@H](C)CN(C)C": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC[C@H](C)N[C@@H](C)CN(C)C', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC[C@H](C)N(C)[C@@H](C)CN(C)C",
                "CCC[C@H](C)N[C@@H](C)CNC",
                "CCC[C@H](C)N[C@H](C)CN(C)C",
                "CC[C@H](C)N[C@@H](C)CN(C)C",
                "CCC[C@H](C)N[C@@H](C)CN(C)C",
                "CCC[C@@H](C)N(C)[C@@H](C)CN(C)C",
                "CCCC[C@H](C)N[C@@H](C)CN(C)C",
                "CCC[C@@H](C)N[C@@H](C)CN(C)C",
                "CCC[C@H](C)N[C@@H](C)CN(C)CC"
            ],
            "total_raw_response_smiles": [
                "CCC[C@H](C)N[C@@H](C)CN(C)C",
                "CCC[C@@H](C)N[C@@H](C)CN(C)C",
                "CCC[C@H](C)N[C@H](C)CN(C)C",
                "CCC[C@H](C)N[C@@H](C)CNC",
                "CCC[C@H](C)N[C@@H](C)CN(C)CC",
                "CCCC[C@H](C)N[C@@H](C)CN(C)C",
                "CC[C@H](C)N[C@@H](C)CN(C)C",
                "CCC[C@@H](C)N(C)[C@@H](C)CN(C)C",
                "CCC[C@H](C)N(C)[C@@H](C)CN(C)C",
                "CCC[C@H](C)N[C@H](C)CN(C)C"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.002225160598754883,
            "chemical_diversity": 0.4314810064967648,
            "average_molecular_weight": 175.4331111111111,
            "api_call_time": 9.002875089645386
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC[C@H](C)N[C@@H](C)CN(C)C', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccccc2)CC1",
                "CC1=C(C(=O)Nc2ccccc2)C(=O)N(C)C1=O",
                "Cc1cc(C)n(C(=O)CSc2nnc(C)s2)n1",
                "O=C(Nc1ccccc1)c1ccc(N2CCOCC2)cc1",
                "CN1CCN(C(=O)c2ccc(Cl)cc2)CC1",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Cl)cc1C2",
                "O=C(NCc1cccs1)c1cccc(C(F)(F)F)c1",
                "COc1ccc(C2=NC(C)(C)CO2)cc1OC",
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccccc1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccccc1",
                "CC1=C(C(=O)Nc2ccccc2)C(=O)N(C)C1=O",
                "O=C(Nc1ccccc1)c1ccc(N2CCOCC2)cc1",
                "CN1CCN(C(=O)c2ccc(Cl)cc2)CC1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccccc2)CC1",
                "O=C(NCc1cccs1)c1cccc(C(F)(F)F)c1",
                "COc1ccc(C2=NC(C)(C)CO2)cc1OC",
                "Cc1cc(C)n(C(=O)CSc2nnc(C)s2)n1",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Cl)cc1C2",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010266780853271484,
            "chemical_diversity": 0.8525355597075942,
            "average_molecular_weight": 270.6031,
            "api_call_time": 13.822661399841309
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC[C@H](C)N[C@@H](C)CN(C)C', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC[C@H](C)N[C@@H](C)CN(C)CCO",
                "CCC[C@H](C)N[C@@H](C)CN(C)CCF",
                "CCC[C@H](C)N[C@@H](C)CNC",
                "CCC[C@H](C)N[C@@H](C)CN(C)CC#N",
                "CCC[C@H](C)N[C@@H](C)CN",
                "CCC[C@H](C)N[C@@H](C)CN(C)C",
                "CCC[C@H](C)N[C@@H](C)CN(C)CCN",
                "CCC[C@H](C)N[C@@H](C)CN(C)CS",
                "CCC[C@H](C)N[C@@H](C)CN(C)CC"
            ],
            "total_raw_response_smiles": [
                "CCC[C@H](C)N[C@@H](C)CN(C)C",
                "CCC[C@H](C)N[C@@H](C)CN(CC)C",
                "CCC[C@H](C)N[C@@H](C)CN(C)CC",
                "CCC[C@H](C)N[C@@H](C)CNC",
                "CCC[C@H](C)N[C@@H](C)CN",
                "CCC[C@H](C)N[C@@H](C)CN(C)CCO",
                "CCC[C@H](C)N[C@@H](C)CN(C)CCN",
                "CCC[C@H](C)N[C@@H](C)CN(C)CCF",
                "CCC[C@H](C)N[C@@H](C)CN(C)CC#N",
                "CCC[C@H](C)N[C@@H](C)CN(C)CS"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.0047380924224853516,
            "chemical_diversity": 0.4136778532647012,
            "average_molecular_weight": 185.66133333333332,
            "api_call_time": 9.267333269119263
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC[C@H](C)N[C@@H](C)CN(C)C', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCOC(=O)c1ccc(NC(=O)Nc2ccccn2)cc1",
                "COc1ccc(CC(=O)N2CCOCC2)cc1OC",
                "O=C(Nc1ccccc1)c1ccc(Cl)s1",
                "O=C1NC(=O)C(=O)N1",
                "Cc1nnc(SCc2ccc(N(C)C)cc2)s1",
                "CC(C)(C)OC(=O)NCCc1ccc(Cl)cc1",
                "COc1ccc(NC(=O)c2scnc2C)cc1OC",
                "Cc1cc(C(=O)Nc2ccc(Cl)c(Cl)c2)no1",
                "CC(C)NCC(O)COc1ccccc1",
                "c1ccc(CN2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)N1",
                "C1COCCN1CC1=CC=CC=C1",
                "CC(C)(C)OC(=O)NCCC1=CC=C(C=C1)Cl",
                "CC1=NN=C(S1)SCC2=CC=C(C=C2)N(C)C",
                "O=C(NC1=CC=CC=C1)C2=CC=C(S2)Cl",
                "COC1=C(C=C(C=C1)CC(=O)N2CCOCC2)OC",
                "CC(C)NCC(COC1=CC=CC=C1)O",
                "CC1=CC(=NO1)C(=O)NC2=CC(=C(C=C2)Cl)Cl",
                "CCOC(=O)C1=CC=C(C=C1)NC(=O)NC2=CC=CC=N2",
                "CC1=C(SC=N1)C(=O)NC2=CC(=C(C=C2)OC)OC"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008689165115356445,
            "chemical_diversity": 0.8573255340497672,
            "average_molecular_weight": 235.9507,
            "api_call_time": 14.449963331222534
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC[C@H](C)N[C@@H](C)CN(C)C', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC[C@H](C)N[C@@H](C)CN(C)CCO",
                "CCC[C@H](C)N[C@@H](C)CN(C)C(C)C",
                "CCC[C@H](C)N[C@@H](C)CN(C)CCF",
                "CCC[C@H](C)N[C@@H](C)CN(C)CCI",
                "CCC[C@H](C)N[C@@H](C)CN(C)C",
                "CCC[C@H](C)N[C@@H](C)CN(C)CCBr",
                "CCC[C@H](C)N[C@@H](C)CN(C)CCC",
                "CCC[C@H](C)N[C@@H](C)CN(C)C(C)(C)C",
                "CCC[C@H](C)N[C@@H](C)CN(C)CCCl",
                "CCC[C@H](C)N[C@@H](C)CN(C)CC"
            ],
            "total_raw_response_smiles": [
                "CCC[C@H](C)N[C@@H](C)CN(C)C",
                "CCC[C@H](C)N[C@@H](C)CN(CC)C",
                "CCC[C@H](C)N[C@@H](C)CN(CCC)C",
                "CCC[C@H](C)N[C@@H](C)CN(C(C)C)C",
                "CCC[C@H](C)N[C@@H](C)CN(C(C)(C)C)C",
                "CCC[C@H](C)N[C@@H](C)CN(CCO)C",
                "CCC[C@H](C)N[C@@H](C)CN(CCF)C",
                "CCC[C@H](C)N[C@@H](C)CN(CCCl)C",
                "CCC[C@H](C)N[C@@H](C)CN(CCBr)C",
                "CCC[C@H](C)N[C@@H](C)CN(CCI)C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.005749940872192383,
            "chemical_diversity": 0.34775548987110816,
            "average_molecular_weight": 217.87369999999996,
            "api_call_time": 9.53832483291626
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC[C@H](C)N[C@@H](C)CN(C)C', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)Cn1c(=O)c2c(ncn2C)n(C)c1=O",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(F)cc2)CC1",
                "O=C1NC(=O)C(c2ccccc2)=C1Nc1ccc(Cl)cc1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(F)(F)F)cc2)o1",
                "Nc1ncnc2c1ncn2CC(=O)N1CCN(c2ccccc2)CC1",
                "COc1ccc(C2=NNC(=O)C3(CCCCC3)N2)cc1OC",
                "O=C(NCc1cccs1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2",
                "CCN(CC)CCNC(=O)c1ccc(N2CCOCC2)cc1",
                "CC1(C)CC(=O)NC(=O)C1=NNc1cccc(Br)c1",
                "O=C1OC2(CCCCC2)C(=O)N1CCN1CCOCC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1Nc1ccc(Cl)cc1",
                "C1CCC2(CC1)OC(=O)N(CCN1CCOCC1)C2=O",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccc(F)cc2)CC1",
                "O=C(NCc1cccs1)c1ccc2c(c1)C(=O)N(Cc1ccccc1)C2",
                "COc1ccc(C2=NNC(=O)C3(CCCCC3)N2)cc1OC",
                "CC1(C)CC(=O)NC(=O)C1=NNc1cccc(Br)c1",
                "Cc1nnc(SCC(=O)Nc2ccc(C(F)(F)F)cc2)o1",
                "O=C(Cn1cnc2c(N)ncnc21)N1CCN(c2ccccc2)CC1",
                "CC(C)Cn1c(=O)c2c(ncn2C)n(C)c1=O",
                "CCN(CC)CCNC(=O)c1ccc(N2CCOCC2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011398792266845703,
            "chemical_diversity": 0.8757308282118311,
            "average_molecular_weight": 308.98190000000005,
            "api_call_time": 17.95235514640808
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC[C@H](C)N[C@@H](C)CN(C)C', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC[C@H](C)N[C@@H](C)CN(C)O",
                "CCC[C@H](C)N[C@@H](C)CN(C)S",
                "CCC[C@H](C)N[C@H](C)CN(C)C",
                "CCC[C@H](C)N[C@@H](C)CN",
                "CCC[C@H](C)N[C@@H](C)CN(C)C",
                "CCC[C@H](C)N[C@@H](C)N(C)C",
                "CCC[C@H](C)N[C@@H](C)SN(C)C",
                "CCC[C@@H](C)N[C@@H](C)CN(C)C",
                "CCC[C@H](C)N[C@@H](C)CN(C)CC"
            ],
            "total_raw_response_smiles": [
                "CCC[C@H](C)N[C@@H](C)CN(C)C",
                "CCC[C@@H](C)N[C@@H](C)CN(C)C",
                "CCC[C@H](C)N[C@H](C)CN(C)C",
                "CCC[C@H](C)N[C@@H](C)CN(C)CC",
                "CCC[C@H](C)N[C@@H](C)CN(CC)C",
                "CCC[C@H](C)N[C@@H](C)CN(C)O",
                "CCC[C@H](C)N[C@@H](C)CN(C)S",
                "CCC[C@H](C)N[C@@H](C)SN(C)C",
                "CCC[C@H](C)N[C@@H](C)N(C)C",
                "CCC[C@H](C)N[C@@H](C)CN"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.004324436187744141,
            "chemical_diversity": 0.3702096714836177,
            "average_molecular_weight": 173.42688888888887,
            "api_call_time": 8.052470684051514
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC[C@H](C)N[C@@H](C)CN(C)C', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(CSc1ncccn1)Nc1ccc(Cl)cc1",
                "O=C(Nc1ccccc1)c1ccncc1",
                "Cc1ccc(NC(=O)CSc2nccs2)cc1",
                "COc1ccc(C=NNC(=O)c2ccco2)cc1",
                "COc1ccc(NC(=O)Nc2ccccn2)cc1",
                "CC(C)(C)OC(=O)Nc1ccccc1",
                "CCOC(=O)c1ccc(N)cc1",
                "Cc1nnc(SCC(=O)Nc2ccccc2)s1",
                "Cc1cc(C)n(C(=O)CSc2nnnn2C)n1",
                "O=C(Cn1cnc2ccccc21)Nc1ccccc1"
            ],
            "total_raw_response_smiles": [
                "CCOC(=O)c1ccc(N)cc1",
                "CC(C)(C)OC(=O)Nc1ccccc1",
                "O=C(Nc1ccccc1)c1ccncc1",
                "COc1ccc(C=NNC(=O)c2ccco2)cc1",
                "Cc1nnc(SCC(=O)Nc2ccccc2)s1",
                "O=C(CSc1ncccn1)Nc1ccc(Cl)cc1",
                "Cc1cc(C)n(C(=O)CSc2nnnn2C)n1",
                "O=C(Cn1cnc2ccccc21)Nc1ccccc1",
                "Cc1ccc(NC(=O)CSc2nccs2)cc1",
                "COc1ccc(NC(=O)Nc2ccccn2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009086370468139648,
            "chemical_diversity": 0.7601504327215272,
            "average_molecular_weight": 235.7261,
            "api_call_time": 12.29762864112854
        }
    ],
    "CC(=O)c1cc(F)cnc1N": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)c1cc(F)cnc1N', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(=O)c1cc(F)cnc1N",
                "CC(O)c1cc(F)cnc1N",
                "CNc1ncc(F)cc1C(C)=O",
                "CC(=O)c1cc(F)cnc1N",
                "CC(=O)c1cc(F)cnc1S",
                "CC(=O)c1cc(F)ccc1N",
                "CC(=O)c1cc(Br)cnc1N",
                "CC(=O)c1cc(I)cnc1N",
                "CC(=O)c1cc(F)cnc1O",
                "CC(=O)c1cc(Cl)cnc1N"
            ],
            "total_raw_response_smiles": [
                "CC(=O)c1cc(F)cnc1N",
                "CC(=O)c1cc(Cl)cnc1N",
                "CC(=O)c1cc(Br)cnc1N",
                "CC(=O)c1cc(I)cnc1N",
                "CC(=O)c1cc(F)ccc1N",
                "CC(=O)c1cc(F)cnc1O",
                "CC(=O)c1cc(F)cnc1S",
                "CCC(=O)c1cc(F)cnc1N",
                "CC(=O)c1cc(F)cnc1NC",
                "CC(O)c1cc(F)cnc1N"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006660938262939453,
            "chemical_diversity": 0.543933108359947,
            "average_molecular_weight": 177.3825,
            "api_call_time": 6.372642993927002
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)c1cc(F)cnc1N', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCc1ccccn1)c1ccc(F)cc1",
                "Cc1ccc(NC(=O)c2ccc(F)cc2F)cn1",
                "Cc1nc2ccc(C(=O)NCc3ccco3)cc2s1",
                "O=C(Nc1ccon1)c1cccc(Cl)c1",
                "COc1ccc(Cn2c(=O)c3c(=O)c4ccccc4c=3c2=O)cc1Cl",
                "CC(C)(C)OC(=O)N1CCN(c2ccc3c(c2)C(=O)C(=O)c2ccccc2-3)CC1",
                "O=C(NCc1ccncc1)c1ccc(Cl)s1",
                "O=C(Nc1nccs1)c1ccco1",
                "Cc1cc(NC(=O)c2cccs2)no1",
                "COc1ccc(C(=O)Nc2nnc(C)s2)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C(Nc1nccs1)c1ccco1",
                "COc1ccc(CN2C(=O)C3=C(C2=O)C(=O)c2ccccc23)cc1Cl",
                "CC(C)(C)OC(=O)N1CCN(c2ccc3c(c2)C(=O)C(=O)c2ccccc23)CC1",
                "O=C(NCc1ccncc1)c1ccc(Cl)s1",
                "Cc1cc(NC(=O)c2cccs2)no1",
                "Cc1ccc(NC(=O)c2ccc(F)cc2F)cn1",
                "O=C(Nc1ccon1)c1cccc(Cl)c1",
                "Cc1nc2ccc(C(=O)NCc3ccco3)cc2s1",
                "O=C(NCc1ccccn1)c1ccc(F)cc1",
                "COc1ccc(C(=O)Nc2nnc(C)s2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.01069021224975586,
            "chemical_diversity": 0.8057042348378937,
            "average_molecular_weight": 262.41280000000006,
            "api_call_time": 12.115830183029175
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)c1cc(F)cnc1N', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(=O)c1cc(S)cnc1N",
                "CCC(=O)c1cc(F)cnc1N",
                "CC(=O)c1cc(F)cnc1N",
                "CC(=O)c1cc(O)cnc1N",
                "CC(=O)c1cc(Br)cnc1N",
                "COc1cnc(N)c(C(C)=O)c1",
                "CC(=O)c1cc(I)cnc1N",
                "CC(=O)c1cc(C#N)cnc1N",
                "CC(=O)c1cc(Cl)cnc1N",
                "CC(=O)c1cc(C)cnc1N"
            ],
            "total_raw_response_smiles": [
                "CC(=O)c1cc(F)cnc1N",
                "CC(=O)c1cc(Cl)cnc1N",
                "CC(=O)c1cc(Br)cnc1N",
                "CC(=O)c1cc(I)cnc1N",
                "CC(=O)c1cc(C#N)cnc1N",
                "CC(=O)c1cc(O)cnc1N",
                "CC(=O)c1cc(S)cnc1N",
                "CC(=O)c1cc(C)cnc1N",
                "CC(=O)c1cc(OC)cnc1N",
                "CCC(=O)c1cc(F)cnc1N"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006453752517700195,
            "chemical_diversity": 0.4218505534941729,
            "average_molecular_weight": 176.7913,
            "api_call_time": 6.299776315689087
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)c1cc(F)cnc1N', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)CC(NC(=O)c2ccc(Cl)cc2)CC(C)(CN)O1",
                "O=C(O)c1ccc2c(c1)C(=O)OC21CCC(O)CC1",
                "COc1ccc(CCN2C(=O)C3C4C=CC(C4)C3C2=O)cc1OC",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "O=C1CCCN1c1ccc(OC2CCNCC2)c(Cl)c1",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "Cc1nnc(SCC2=C(C(=O)O)N3C(=O)C(NC(=O)CN4CCC5CCCC5C4)C3SC2)s1",
                "CC1(C)SC2C(NC(=O)Cc3ccccc3)C(=O)N2C1C(=O)O",
                "CC(C)NCC(O)COc1cccc2[nH]ccc12",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "CC1(C)CC(NC(=O)c2ccc(Cl)cc2)CC(C)(CN)O1",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "COc1ccc(CCN2C(=O)C3C4C=CC(C4)C3C2=O)cc1OC",
                "CC(C)Cn1cnc2c1c(=O)n(C)c(=O)n2C",
                "O=C(O)c1ccc2c(c1)C(=O)OC23CCC(O)CC3",
                "Cc1nnc(SCC2=C(C(=O)O)N3C(=O)C(NC(=O)CN4CC5CCCC5CC4)C3SC2)s1",
                "CC1(C)SC2C(NC(=O)Cc3ccccc3)C(=O)N2C1C(=O)O",
                "O=C1CCCN1c1ccc(OC2CCNCC2)c(Cl)c1",
                "CC(C)NCC(O)COc1cccc2[nH]ccc12"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012740135192871094,
            "chemical_diversity": 0.8685758878396888,
            "average_molecular_weight": 307.95640000000014,
            "api_call_time": 17.727511167526245
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)c1cc(F)cnc1N', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(=O)c1cc(F)cnc1N",
                "CC(=O)c1cc(N)cnc1N",
                "CC(=O)c1cc(S)cnc1N",
                "CC(=O)c1cc(F)cnc1N",
                "CC(=O)c1cc(O)cnc1N",
                "CC(=O)c1cc(Br)cnc1N",
                "CC(=O)c1cc(I)cnc1N",
                "CC(=O)c1cc(P)cnc1N",
                "CC(=O)c1cc(Cl)cnc1N",
                "CC(=O)c1cc(C)cnc1N"
            ],
            "total_raw_response_smiles": [
                "CC(=O)c1cc(F)cnc1N",
                "CCC(=O)c1cc(F)cnc1N",
                "CC(=O)c1cc(Cl)cnc1N",
                "CC(=O)c1cc(Br)cnc1N",
                "CC(=O)c1cc(I)cnc1N",
                "CC(=O)c1cc(C)cnc1N",
                "CC(=O)c1cc(O)cnc1N",
                "CC(=O)c1cc(N)cnc1N",
                "CC(=O)c1cc(S)cnc1N",
                "CC(=O)c1cc(P)cnc1N"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006930828094482422,
            "chemical_diversity": 0.39538181636126724,
            "average_molecular_weight": 175.98739999999998,
            "api_call_time": 6.70950722694397
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)c1cc(F)cnc1N', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "N#Cc1ccc(C(=O)NCc2ccccn2)s1",
                "CC1(C)OB(c2ccc(S(=O)(=O)N3CCOCC3)cc2)OC1(C)C",
                "Cc1cc(=O)oc2c(C)c(O)ccc12",
                "COc1cc(C=NNC(=O)c2ccco2)cc(Br)c1O",
                "O=c1[nH]c(=O)c2cc(Cl)ccc2[nH]1",
                "O=C(Nc1ccc(C(F)(F)F)cc1)c1nsc(N2CCOCC2)n1",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccs1",
                "O=C(O)c1ccc(NC(=S)N2CCSCC2)cc1",
                "Cc1nnc(SCC(=O)Nc2ccc(Cl)cn2)s1",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(N)cc2)CC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)c2cc(Cl)ccc2N1",
                "CC1(C)OB(c2ccc(S(=O)(=O)N3CCOCC3)cc2)OC1(C)C",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(N)cc2)CC1",
                "O=C(Nc1ccc(C(F)(F)F)cc1)c1nsc(N2CCOCC2)n1",
                "COc1cc(C=NNC(=O)c2ccco2)cc(Br)c1O",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1cccs1",
                "O=C(NCc1ccccn1)c1ccc(C#N)s1",
                "Cc1nnc(SCC(=O)Nc2ccc(Cl)cn2)s1",
                "CC1=CC(=O)Oc2c(C)c(O)ccc21",
                "O=C(O)c1ccc(NC(=S)N2CCSCC2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009840726852416992,
            "chemical_diversity": 0.872972950837155,
            "average_molecular_weight": 283.77259999999995,
            "api_call_time": 14.727487087249756
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)c1cc(F)cnc1N', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(=O)c1cc(F)cnc1C",
                "CC(=O)c1cc(F)cnc1O",
                "CC(=O)c1cc(O)cnc1N",
                "CC(=O)c1cc(F)ncc1N",
                "CC(=O)c1cc(F)ccc1N",
                "CC(=O)c1cc(Br)cnc1N",
                "CC(=O)c1cc(I)cnc1N",
                "CC(=O)c1cc(C#N)cnc1N",
                "CC(=O)c1cc(Cl)cnc1N",
                "CC(=O)c1cc(C)cnc1N"
            ],
            "total_raw_response_smiles": [
                "CC(=O)c1cc(Cl)cnc1N",
                "CC(=O)c1cc(Br)cnc1N",
                "CC(=O)c1cc(I)cnc1N",
                "CC(=O)c1cc(C#N)cnc1N",
                "CC(=O)c1cc(O)cnc1N",
                "CC(=O)c1cc(C)cnc1N",
                "CC(=O)c1cc(F)ccc1N",
                "CC(=O)c1cc(F)ncc1N",
                "CC(=O)c1cc(F)cnc1O",
                "CC(=O)c1cc(F)cnc1C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.005947589874267578,
            "chemical_diversity": 0.5181393838825845,
            "average_molecular_weight": 172.6781,
            "api_call_time": 7.195393800735474
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CC(=O)c1cc(F)cnc1N', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(N)c1cc(N)cnc1Br",
                "CC(N)c1cc(C#N)cnc1N",
                "Cc1ccc(I)c(C(C)S)c1",
                "CC(O)c1nc(S)ccc1Cl",
                "CC(=N)c1cc(N=N)ccc1F",
                "CC(=N)c1nc(Br)ccc1F",
                "CC(S)c1cc(C=O)ccc1N",
                "CC(=O)c1cc(Cl)ccc1O",
                "CC(O)c1cc(I)cnc1S",
                "CC(=S)c1nc(C)cnc1O"
            ],
            "total_raw_response_smiles": [
                "CC(=O)c1cc(Cl)ccc1O",
                "CC(=N)c1nc(Br)ccc1F",
                "CC(O)c1cc(I)cnc1S",
                "CC(N)c1cc(C#N)cnc1N",
                "CC(S)c1cc(C=O)ccc1N",
                "CC(=S)c1nc(C)cnc1O",
                "CC(=N)c1cc(N=N)ccc1F",
                "CC(O)c1nc(S)ccc1Cl",
                "CC(N)c1cc(N)cnc1Br",
                "CC(S)c1cc(C)ccc1I"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006072282791137695,
            "chemical_diversity": 0.8317763237692515,
            "average_molecular_weight": 202.95089999999996,
            "api_call_time": 8.72209906578064
        }
    ],
    "CCC(O)(CC)CN(C)C(C)=O": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(O)(CC)CN(C)C(C)=O', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(O)(CC)CN(C)C(C)O",
                "CCN(CC(O)(CC)CC)C(C)=O",
                "CCC(C)(O)CN(C)C(C)=O",
                "CCC(O)(CC)CN(C)C(C)=O",
                "CCC(O)(CC)CNC(C)=O",
                "CCC(O)(CC)CN(C)C(N)=O",
                "CCC(O)(CC)CN(C)C(=O)O",
                "CCC(O)(CC)CN(C)C(C)C"
            ],
            "total_raw_response_smiles": [
                "CCC(O)(CC)CN(C)C(C)=O",
                "CCC(O)(CC)CN(C)C(C)C",
                "CCC(O)(CC)CN(C)C(C)O",
                "CCC(O)(CC)CN(C)C(=O)C",
                "CCC(O)(CC)CN(C)C(N)=O",
                "CCC(O)(CC)CN(CC)C(C)=O",
                "CCC(O)(CC)CN(C)C(O)=O",
                "CC(O)(CC)CN(C)C(C)=O",
                "CCC(O)(C)CN(C)C(C)=O",
                "CCC(O)(CC)CNC(C)=O"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.0012388229370117188,
            "chemical_diversity": 0.5425923990225573,
            "average_molecular_weight": 172.130125,
            "api_call_time": 8.531474351882935
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(O)(CC)CN(C)C(C)=O', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccccc2)CC1",
                "Cc1cc(C)nc(SCC(=O)N2CCSCC2)n1",
                "O=C(NCc1ccncc1)c1ccc(Cl)cc1",
                "O=C(CSc1ncccn1)Nc1cccc(Cl)c1",
                "COC(=O)C1=C(C)NC(C)=C(C(=O)OC)C1c1ccc(OC)cc1",
                "Cc1nnc(SCC(=O)Nc2ccccc2)s1",
                "O=c1[nH]c(=O)n(-c2ccccc2)cc1-c1ccccc1",
                "CC1(C)OC(=O)N(Cc2ccccc2)C1=O",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1ccccc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=CN1c1ccccc1",
                "CC1(C)OC(=O)N(Cc2ccccc2)C1=O",
                "O=C(NCc1ccncc1)c1ccc(Cl)cc1",
                "COc1ccc(C2C(C(=O)OC)=C(C)NC(C)=C2C(=O)OC)cc1",
                "CC(C)(C)OC(=O)N1CCC(NC(=O)c2ccccc2)CC1",
                "Cc1nnc(SCC(=O)Nc2ccccc2)s1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "CC1=NN(c2ccccc2)C(=O)C1=Cc1ccccc1",
                "Cc1cc(C)nc(SCC(=O)N2CCSCC2)n1",
                "O=C(CSc1ncccn1)Nc1cccc(Cl)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010694742202758789,
            "chemical_diversity": 0.8403216309691672,
            "average_molecular_weight": 279.3197,
            "api_call_time": 13.560003757476807
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(O)(CC)CN(C)C(C)=O', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCC(O)(CC)CN(C)C(=O)S",
                "CCC(O)(CC)CN(C)C(=O)Cl",
                "CCC(O)(CC)CN(C)C(C)=S",
                "CCC(O)(CC)CN(C)C(C)=O",
                "CCC(O)(CC)CN(C)C(=O)F",
                "CCC(O)(CC)CN(C)C(=O)O",
                "CCC(O)(CC)CN(C)C(=O)OC",
                "CCC(O)(CC)CN(C)C(N)=O",
                "CCC(O)(CC)CN(C)C(=O)CF",
                "CCC(O)(CC)CN(C)C(=O)NC"
            ],
            "total_raw_response_smiles": [
                "CCC(O)(CC)CN(C)C(C)=O",
                "CCC(O)(CC)CN(C)C(=O)OC",
                "CCC(O)(CC)CN(C)C(=O)NC",
                "CCC(O)(CC)CN(C)C(=O)CF",
                "CCC(O)(CC)CN(C)C(=O)Cl",
                "CCC(O)(CC)CN(C)C(=O)F",
                "CCC(O)(CC)CN(C)C(=O)N",
                "CCC(O)(CC)CN(C)C(=O)O",
                "CCC(O)(CC)CN(C)C(=O)S",
                "CCC(O)(CC)CN(C)C(C)=S"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.00436854362487793,
            "chemical_diversity": 0.39737696321357185,
            "average_molecular_weight": 184.3013,
            "api_call_time": 7.228610277175903
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(O)(CC)CN(C)C(C)=O', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CN1C(=O)CN=C(c2ccco2)C1=O",
                "CNC(=O)c1ccc(OC)c(Oc2ccccc2)c1",
                "CC1=NN(c2ccc(N(C)C)cc2)C(=O)C1",
                "O=C1NC(=O)C(=O)N1",
                "CC(C)(C)OC(=O)Nc1cccc(Cl)c1",
                "O=C(Nc1ccc(F)cc1)c1ccncc1",
                "Cc1ccc(S(N)(=O)=O)cc1",
                "COc1ccc(CC(=O)Nc2ccccc2)cc1OC",
                "CC(C)CC(NC(=O)C(Cc1ccccc1)NC(=O)OC(C)(C)C)C(=O)O",
                "CCOC(=O)c1ccccc1Br"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)N1",
                "CC1=CC=C(C=C1)S(=O)(=O)N",
                "CCOC(=O)C1=CC=CC=C1Br",
                "CN1C(=O)CN=C(C2=CC=CO2)C1=O",
                "CC(C)(C)OC(=O)NC1=CC(=CC=C1)Cl",
                "O=C(NC1=CC=C(C=C1)F)C1=CC=NC=C1",
                "COC1=C(OC)C=C(CC(=O)NC2=CC=CC=C2)C=C1",
                "CC1=NN(C(=O)C1)C1=CC=C(C=C1)N(C)C",
                "CNC(=O)C1=CC(=C(C=C1)OC)OC1=CC=CC=C1",
                "CC(C)CC(NC(=O)C(CC1=CC=CC=C1)NC(=O)OC(C)(C)C)C(=O)O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009062528610229492,
            "chemical_diversity": 0.8582987750804394,
            "average_molecular_weight": 227.478,
            "api_call_time": 13.468064308166504
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(O)(CC)CN(C)C(C)=O', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 8,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCN(CC(O)(CC)CC)C(C)=O",
                "CCC(=O)N(CC)CC(O)(CC)CC",
                "CCC(O)(CC)CN(C)C(C)=O",
                "CCCC(=O)N(C)CC(O)(CC)CC",
                "CCCC(O)(CC)CN(CC)C(C)=O",
                "CCCC(O)(CC)CN(C)C(C)=O",
                "CCCC(O)(CC)CN(C)C(=O)CC",
                "CCC(=O)N(C)CC(O)(CC)CC"
            ],
            "total_raw_response_smiles": [
                "CCC(O)(CC)CN(C)C(C)=O",
                "CCC(O)(CC)CN(C)C(CC)=O",
                "CCC(O)(CC)CN(C)C(CCC)=O",
                "CCC(O)(CC)CN(CC)C(C)=O",
                "CCC(O)(CC)CN(CC)C(CC)=O",
                "CCC(O)(CCC)CN(C)C(C)=O",
                "CCC(O)(CCC)CN(C)C(CC)=O",
                "CCC(O)(CCC)CN(CC)C(C)=O",
                "CCCC(O)(CC)CN(C)C(C)=O",
                "CCCC(O)(CC)CN(CC)C(C)=O"
            ],
            "validity_ratio": 0.8,
            "post_processing_time": 0.004900455474853516,
            "chemical_diversity": 0.43800793738310373,
            "average_molecular_weight": 192.54312499999995,
            "api_call_time": 7.091324806213379
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(O)(CC)CN(C)C(C)=O', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COc1cc(C=NNC(=O)c2cc(C)on2)ccc1O",
                "CC1(C)OC(=O)c2c(Br)cc(N3CCOCC3)cc21",
                "CC(=O)Nc1ccc(-c2cc(C(F)(F)F)nn2-c2ccccc2)cc1",
                "Cc1nnc(SCC(=O)Nc2ccc(N3CCOCC3)cc2)s1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(F)cc1",
                "COc1ccc(C2=NNC(=O)C3(CCOCC3)N2)cc1OC",
                "O=C(CSc1nnc(-c2ccco2)n1C1CC1)Nc1ccc(Cl)cn1",
                "Cc1cc(NC(=O)C2=CC(c3cccc(F)c3)CC(=O)N2)no1",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3sc(C4CC4)cc23)CC1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1Nc1ccc(F)cc1",
                "CC1(C)OC(=O)C2=C1C=C(N1CCOCC1)C=C2Br",
                "O=C(Nc1ccc(S(=O)(=O)N2CCOCC2)cc1)c1ccco1",
                "COc1cc(C=NNC(=O)c2cc(C)on2)ccc1O",
                "CC(C)(C)OC(=O)N1CCN(c2ncnc3sc(C4CC4)cc23)CC1",
                "Cc1nnc(SCC(=O)Nc2ccc(N3CCOCC3)cc2)s1",
                "O=C(CSc1nnc(-c2ccco2)n1C1CC1)Nc1ccc(Cl)cn1",
                "CC(=O)Nc1ccc(-c2cc(C(F)(F)F)nn2-c2ccccc2)cc1",
                "COc1ccc(C2=NNC(=O)C3(CCOCC3)N2)cc1OC",
                "Cc1cc(NC(=O)C2=CC(c3cccc(F)c3)CC(=O)N2)no1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011688709259033203,
            "chemical_diversity": 0.8474037134601532,
            "average_molecular_weight": 330.7297,
            "api_call_time": 17.95289158821106
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(O)(CC)CN(C)C(C)=O', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCN(CC(O)(CC)CC)C(C)=O",
                "CCC(O)(CC)CN(C)C=O",
                "CCC(O)(CC)CN(C)C(C)=S",
                "CCC(C)(O)CN(C)C(C)=O",
                "CCC(O)(CC)CN(C)C(C)=O",
                "CCC(O)(CC)CNC(C)=O",
                "CCC(O)(CC)CN(C)C(=O)O",
                "CCC(O)(CC)CN(C)C(N)=O",
                "CCC(=O)N(C)CC(O)(CC)CC",
                "CCC(CC)(CN(C)C(C)=O)OC"
            ],
            "total_raw_response_smiles": [
                "CCC(O)(CC)CN(C)C(C)=O",
                "CCC(O)(CC)CN(C)C(C)=S",
                "CCC(O)(CC)CN(C)C(N)=O",
                "CCC(O)(CC)CN(C)C(O)=O",
                "CCC(O)(CC)CN(CC)C(C)=O",
                "CCC(O)(CC)CN(C)C(CC)=O",
                "CCC(O)(C)CN(C)C(C)=O",
                "CCC(OC)(CC)CN(C)C(C)=O",
                "CCC(O)(CC)CN(C)C=O",
                "CCC(O)(CC)CNC(C)=O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004404306411743164,
            "chemical_diversity": 0.5329329593602752,
            "average_molecular_weight": 175.15879999999999,
            "api_call_time": 8.810252666473389
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCC(O)(CC)CN(C)C(C)=O', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)CC(O)CN(C)C=O",
                "CC(=O)N(C)CC(C)CO",
                "CC(O)CN1C(=O)CCC1C",
                "CCC(=O)NCC1CCCO1",
                "CC(=O)N1CCCC1CO",
                "CC(O)CNC(=O)C1CCCC1",
                "CNC(=O)C1CCCCC1O",
                "CCC(O)CNC(=N)N",
                "CCC(O)CNC1CCOC1",
                "CC(O)CN1CCNCC1"
            ],
            "total_raw_response_smiles": [
                "CNC(=O)C1CCCCC1O",
                "CC(=O)N1CCCC1CO",
                "CC(O)CN1CCNCC1",
                "CCC(=O)NCC1CCCO1",
                "CN(CC(O)CC(C)C)C=O",
                "CC(O)CNC(=O)C1CCCC1",
                "CCC(O)CNC(=N)N",
                "CC(O)CN1C(=O)CCC1C",
                "CCC(O)CNC1CCOC1",
                "CC(CN(C)C(C)=O)CO"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0048482418060302734,
            "chemical_diversity": 0.826285417572712,
            "average_molecular_weight": 152.51219999999998,
            "api_call_time": 8.553615808486938
        }
    ],
    "COCC(C)(C)CCCN": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'COCC(C)(C)CCCN', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COCC(C)(C)CCCN1CCCC1",
                "COCC(C)(C)CCCO",
                "COCC(C)(C)CCCS",
                "COCC(C)(C)CCCF",
                "CCCC(C)(C)COC",
                "CCCCC(C)(C)COC",
                "COCC(C)(C)CCCN(C)C",
                "COCC(C)(C)CCCNC(C)=O",
                "COCC(C)(C)CCCN",
                "CNCCCC(C)(C)COC"
            ],
            "total_raw_response_smiles": [
                "COCC(C)(C)CCCN",
                "COCC(C)(C)CCCO",
                "COCC(C)(C)CCCF",
                "COCC(C)(C)CCCC",
                "COCC(C)(C)CCCNC",
                "COCC(C)(C)CCC",
                "COCC(C)(C)CCCS",
                "COCC(C)(C)CCCNC(C)=O",
                "COCC(C)(C)CCCN(C)C",
                "COCC(C)(C)CCCN1CCCC1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.004658699035644531,
            "chemical_diversity": 0.45673896224895305,
            "average_molecular_weight": 159.56779999999998,
            "api_call_time": 8.379786491394043
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COCC(C)(C)CCCN', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "Cc1ccc(C(=O)Nc2ccc(N)cc2)cc1",
                "O=C(O)CN1C(=O)NC(=O)C12CCCCC2",
                "O=C1CCc2cc(C(=O)O)ccc2N1",
                "CC(C)(C)C(=O)Nc1ccc(Cl)c(Cl)c1",
                "c1ccc2sc(N3CCNCC3)nc2c1",
                "Cc1cc(=O)n(-c2ccccc2)[nH]1",
                "Cc1nnc(-c2ccc(Cl)cc2)o1",
                "COc1ccc(C(=O)NCCc2ccccc2)cc1",
                "O=C1CCc2ccc(Br)cc2N1",
                "COc1ccc(Cl)cc1C(=O)NCCC(=O)O"
            ],
            "total_raw_response_smiles": [
                "CC1=CC=C(C=C1)C(=O)NC2=CC=C(C=C2)N",
                "C1CCC2(CC1)C(=O)NC(=O)N2CC(=O)O",
                "CC1=NN=C(O1)C2=CC=C(C=C2)Cl",
                "C1CC(=O)NC2=C1C=CC(=C2)Br",
                "COC1=C(C=C(C=C1)Cl)C(=O)NCCC(=O)O",
                "CC1=CC(=O)N(N1)C2=CC=CC=C2",
                "C1CN(CCN1)C2=NC3=CC=CC=C3S2",
                "CC(C)(C)C(=O)NC1=CC(=C(C=C1)Cl)Cl",
                "C1CC(=O)NC2=C1C=C(C=C2)C(=O)O",
                "COC1=CC=C(C=C1)C(=O)NCCC2=CC=CC=C2"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.009148836135864258,
            "chemical_diversity": 0.8597105897805181,
            "average_molecular_weight": 221.70339999999996,
            "api_call_time": 14.146654844284058
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COCC(C)(C)CCCN', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COCC(C)(C)CCCC(N)=O",
                "COCC(C)(C)CCCO",
                "COCC(C)(C)CCCC#N",
                "COCC(C)(C)CCCS",
                "COCC(C)(C)CCCF",
                "COCC(C)(C)CCCC(=O)O",
                "COCC(C)(C)CCCBr",
                "COCC(C)(C)CCCCl",
                "COCC(C)(C)CCC=O",
                "COCC(C)(C)CCCN"
            ],
            "total_raw_response_smiles": [
                "COCC(C)(C)CCCN",
                "COCC(C)(C)CCCO",
                "COCC(C)(C)CCCC#N",
                "COCC(C)(C)CCCC(=O)N",
                "COCC(C)(C)CCCC(=O)O",
                "COCC(C)(C)CCCS",
                "COCC(C)(C)CCCCl",
                "COCC(C)(C)CCCBr",
                "COCC(C)(C)CCCF",
                "COCC(C)(C)CCC=O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.003671407699584961,
            "chemical_diversity": 0.44850428024594957,
            "average_molecular_weight": 162.27489999999997,
            "api_call_time": 6.481578826904297
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COCC(C)(C)CCCN', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(O)C1CCCN1C(=O)c1ccccc1",
                "CCOC(=O)c1ccccc1N",
                "O=C1NC(=O)C(=O)C(=O)N1",
                "CCCCN1C(=O)c2ccccc2C1=O",
                "CC1=NN(c2ccccc2)C(=O)C1",
                "Cc1ccc(C(=O)Nc2ccc(Cl)cc2)cc1",
                "CC(C)(C)NCC(O)COc1cccc2[nH]ccc12",
                "Cc1cc(=O)[nH]c2cc(O)ccc12",
                "Cn1c(=O)c2c(ncn2C)n(C)c1=O",
                "COc1cc(C(=O)Nc2ccccc2)ccc1O"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)C(=O)N1",
                "CC1=CC=C(C=C1)C(=O)NC2=CC=C(Cl)C=C2",
                "CCOC(=O)C1=CC=CC=C1N",
                "CC(C)(C)NCC(O)COC1=CC=CC2=C1C=CN2",
                "O=C(O)C1CCCN1C(=O)C2=CC=CC=C2",
                "CN1C=NC2=C1C(=O)N(C)C(=O)N2C",
                "CC1=NN(C2=CC=CC=C2)C(=O)C1",
                "CCCCN1C(=O)C2=CC=CC=C2C1=O",
                "COC1=C(O)C=CC(C(=O)NC2=CC=CC=C2)=C1",
                "CC1=CC(=O)NC2=C1C=CC(O)=C2"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.007828712463378906,
            "chemical_diversity": 0.859968156151003,
            "average_molecular_weight": 202.46509999999998,
            "api_call_time": 13.34716796875
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COCC(C)(C)CCCN', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COCC(C)(C)CCCCN",
                "CCCC(C)(CCCN)COC",
                "COCC(C)(C)CCCCCCN",
                "COCC(C)(C)CCC(C)N",
                "COCC(C)(C)CCN",
                "CCC(N)CCC(C)(C)COC",
                "COCC(C)(C)CCCN(C)C",
                "COCC(C)(C)CCCN",
                "CCC(CC)(CCCN)COC",
                "CCC(C)(CCCN)COC"
            ],
            "total_raw_response_smiles": [
                "COCC(C)(C)CCCN",
                "COCC(C)(C)CCCCN",
                "COCC(C)(C)CCCCCCN",
                "COCC(C)(C)CCN",
                "COCC(C)(CC)CCCN",
                "COCC(CC)(CC)CCCN",
                "COCC(C)(CCC)CCCN",
                "COCC(C)(C)CCC(C)N",
                "COCC(C)(C)CCC(CC)N",
                "COCC(C)(C)CCCN(C)C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.003876209259033203,
            "chemical_diversity": 0.48473821558192964,
            "average_molecular_weight": 163.48109999999997,
            "api_call_time": 8.44990086555481
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COCC(C)(C)CCCN', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC(C)C(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "O=C(Nc1ccc(C(F)(F)F)cc1)N1CCSCC1",
                "COc1cc(OC)c(C(=O)N2CCC(N3CCOCC3)CC2)c(OC)c1",
                "O=C1NC2(CCCCC2)C(=O)N1CCN1CCOCC1",
                "CC1(C)CC(=O)NC(=O)C1(C)Cc1ccc(Br)cc1",
                "O=C1NC(=O)C(c2ccc(Cl)cc2)=C1c1ccccc1",
                "COc1ccc(C(=O)N2CCN(CC(=O)N3CCOCC3)CC2)cc1",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(F)cc2)CC1",
                "O=C(NCc1ccccc1)c1ccc(N2CCOCC2)cc1",
                "Cc1cc(C)c(S(=O)(=O)N2CCN(C(=O)C3CCCO3)CC2)c(C)c1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)=C1c1ccc(Cl)cc1",
                "C1CCC2(CC1)C(=O)N(CCN1CCOCC1)C(=O)N2",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(F)cc2)CC1",
                "O=C(NCc1ccccc1)c1ccc(N2CCOCC2)cc1",
                "COc1ccc(C(=O)N2CCN(CC(=O)N3CCOCC3)CC2)cc1",
                "CC1(C)CC(=O)NC(=O)C1(C)Cc1ccc(Br)cc1",
                "O=C(Nc1ccc(C(F)(F)F)cc1)N1CCSCC1",
                "Cc1cc(C)c(S(=O)(=O)N2CCN(C(=O)C3CCCO3)CC2)c(C)c1",
                "CC(C)C(=O)N1CCN(c2ncnc3[nH]ccc23)CC1",
                "COc1cc(OC)c(C(=O)N2CCC(N3CCOCC3)CC2)c(OC)c1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011016368865966797,
            "chemical_diversity": 0.838246331750766,
            "average_molecular_weight": 313.60010000000005,
            "api_call_time": 15.327343702316284
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COCC(C)(C)CCCN', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COCC(C)(C)CC(C)N",
                "COCC(C)(C)CCCO",
                "COCC(C)(C)CCCI",
                "COCC(C)(C)CCCC#N",
                "COCC(C)(C)CCCS",
                "COCC(C)(C)CCCF",
                "CNCCC(C)(C)COC",
                "COCC(C)(C)CCC(C)N",
                "COCC(C)(C)CCCN",
                "COCC(C)(C)CCC=N"
            ],
            "total_raw_response_smiles": [
                "COCC(C)(C)CCCN",
                "COCC(C)(C)CCCO",
                "COCC(C)(C)CCCS",
                "COCC(C)(C)CCC=N",
                "COCC(C)(C)CC(N)C",
                "COCC(C)(C)CCNC",
                "COCC(C)(C)CCCF",
                "COCC(C)(C)CCCI",
                "COCC(C)(C)CCCC#N",
                "COCC(C)(C)CCC(N)C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0038945674896240234,
            "chemical_diversity": 0.5009780483892083,
            "average_molecular_weight": 160.63579999999996,
            "api_call_time": 5.8919970989227295
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'COCC(C)(C)CCCN', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "COCC(C)(C)CCCO",
                "COCC(C)(C)CCCS",
                "CNCCC(C)(C)COC",
                "COCC(C)(C)CCC#N",
                "COCC(C)(C)CCI",
                "COCC(C)(C)CC(C)=O",
                "COCC(C)(C)CC1CC1",
                "COCC(C)(C)CCBr",
                "CNCC(C)(C)CCCCl",
                "COCC(C)(C)CC(C)O"
            ],
            "total_raw_response_smiles": [
                "CNCC(C)(C)CCCCl",
                "COCC(C)(C)CCCO",
                "COCC(C)(C)CCCS",
                "COCC(C)(C)CCC#N",
                "COCC(C)(C)CC(O)C",
                "COCC(C)(C)CC(=O)C",
                "COCC(C)(C)CC1CC1",
                "COCC(C)(C)CCNC",
                "COCC(C)(C)CCBr",
                "COCC(C)(C)CCI"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0039920806884765625,
            "chemical_diversity": 0.5980700643088963,
            "average_molecular_weight": 162.8566,
            "api_call_time": 7.235435247421265
        }
    ],
    "CCCCN[C@@H]1CCN(CCC)C1": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCN[C@@H]1CCN(CCC)C1', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCCN[C@H]1CCCNCC1",
                "CCCNC1CCN(CCC)CC1",
                "CCCCN(C)C1CCN(CCC)C1",
                "CCCCN[C@@H]1CCN(CC)C1",
                "CCCCN[C@@H]1CCNC1",
                "CCCN[C@@H]1CCN(CCC)C1",
                "CCCCN1CCN(CCC)CC1",
                "CCCCN[C@@H]1CCN(C)C1",
                "CCCCN[C@H]1CCN(CCC)C1",
                "CCCCNC1CCNCC1"
            ],
            "total_raw_response_smiles": [
                "CCCCN[C@@H]1CCNC1",
                "CCCCN[C@@H]1CCNCC1",
                "CCCCN[C@@H]1CCNCCC1",
                "CCCCN[C@@H]1CCN(CC)C1",
                "CCCCN[C@@H]1CCN(C)C1",
                "CCCCN[C@H]1CCN(CCC)C1",
                "CCCCN1CCN(CCC)CC1",
                "CCCN[C@@H]1CCN(CCC)C1",
                "CCCNC1CCN(CCC)CC1",
                "CCCCN(C)C1CCN(CCC)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006068229675292969,
            "chemical_diversity": 0.5491401579064834,
            "average_molecular_weight": 171.70269999999996,
            "api_call_time": 8.003405809402466
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCN[C@@H]1CCN(CCC)C1', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCN1C(=O)CSC1c1ccc(Cl)cc1",
                "CC(C)(C)OC(=O)N1CCN(c2ncccn2)CC1",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCCC2)cc1",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "Cc1nnc(SCC(=O)Nc2ccccc2)s1",
                "COc1ccc(C2=NC(C)(C)CO2)cc1OC",
                "Cc1cc(C)n2nc(NC(=O)C3CC3)nc2n1",
                "CC1(C)OB(c2ccc(F)cc2)OC1(C)C",
                "Nc1ncnc2c1ncn2CC(=O)N1CCOCC1",
                "O=C(NCc1ccncc1)c1ccc(Cl)s1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "CC(C)(C)OC(=O)N1CCN(c2ncccn2)CC1",
                "COc1ccc(C2=NC(C)(C)CO2)cc1OC",
                "CC1(C)OB(c2ccc(F)cc2)OC1(C)C",
                "O=C(NCc1ccncc1)c1ccc(Cl)s1",
                "Cc1nnc(SCC(=O)Nc2ccccc2)s1",
                "CCN1C(=O)CSC1c1ccc(Cl)cc1",
                "Cc1cc(C)n2nc(NC(=O)C3CC3)nc2n1",
                "O=C(Cn1cnc2c(N)ncnc21)N1CCOCC1",
                "CC(=O)Nc1ccc(S(=O)(=O)N2CCCC2)cc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.011072158813476562,
            "chemical_diversity": 0.8819604815035759,
            "average_molecular_weight": 249.5655,
            "api_call_time": 14.835739612579346
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCN[C@@H]1CCN(CCC)C1', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCCN[C@@H]1CCN(CCC(=O)O)C1",
                "CCCCN[C@@H]1CCN(CCF)C1",
                "CCCCN[C@@H]1CCN(CCC#N)C1",
                "CCCCN[C@@H]1CCN(CCCl)C1",
                "CCCCN[C@@H]1CCN(CCS)C1",
                "CCCCN[C@@H]1CCN(CCO)C1",
                "CCCCN[C@@H]1CCN(CCCC)C1",
                "CCCCN[C@@H]1CCN(CC(C)C)C1",
                "CCCCN[C@@H]1CCN(CCBr)C1",
                "CCCCN[C@@H]1CCN(CCCO)C1"
            ],
            "total_raw_response_smiles": [
                "CCCCN[C@@H]1CCN(CCO)C1",
                "CCCCN[C@@H]1CCN(CCC(=O)O)C1",
                "CCCCN[C@@H]1CCN(CCC#N)C1",
                "CCCCN[C@@H]1CCN(CC(C)C)C1",
                "CCCCN[C@@H]1CCN(CCCO)C1",
                "CCCCN[C@@H]1CCN(CCCC)C1",
                "CCCCN[C@@H]1CCN(CCS)C1",
                "CCCCN[C@@H]1CCN(CCF)C1",
                "CCCCN[C@@H]1CCN(CCCl)C1",
                "CCCCN[C@@H]1CCN(CCBr)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.0067903995513916016,
            "chemical_diversity": 0.30481300460917893,
            "average_molecular_weight": 203.75499999999994,
            "api_call_time": 9.11734390258789
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCN[C@@H]1CCN(CCC)C1', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C[C@H]1CCCC[C@H]1NC(=O)c1ccc(O)c(O)c1",
                "O=C1NC(=O)C(=O)C(=O)N1",
                "O=C(Nc1ccccc1)c1ccccc1",
                "CC(=O)N1CCN(c2nc3ccccc3s2)CC1",
                "N#Cc1ccc(N)cc1",
                "COc1ccc(CC(=O)NC(Cc2ccccc2)C(=O)O)cc1OC",
                "CC(C)NCC(O)COc1cccc2c1CCCC2",
                "Cc1nnc(SCc2ccc(Cl)cc2)[nH]1",
                "CCCCC[C@H](O)/C=C/c1ccccc1",
                "CC(C)(C)OC(=O)NCCc1c[nH]c2ccccc12"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(=O)C(=O)N1",
                "C1=CC=C(C(=O)NC2=CC=CC=C2)C=C1",
                "CCCCC[C@H](O)/C=C/C1=CC=CC=C1",
                "C1=CC(=CC=C1C#N)N",
                "CC(C)(C)OC(=O)NCCC1=CNC2=C1C=CC=C2",
                "CC1=NN=C(N1)SCC2=CC=C(C=C2)Cl",
                "COC1=C(OC)C=C(CC(=O)NC(CC2=CC=CC=C2)C(=O)O)C=C1",
                "CC(C)NCC(O)COC1=CC=CC2=C1CCCC2",
                "CC(=O)N1CCN(CC1)C2=NC3=CC=CC=C3S2",
                "C[C@H]1CCCC[C@H]1NC(=O)C2=CC(=C(C=C2)O)O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008848905563354492,
            "chemical_diversity": 0.8899430791792046,
            "average_molecular_weight": 227.92470000000003,
            "api_call_time": 13.943772792816162
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCN[C@@H]1CCN(CCC)C1', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCCN1CC[C@@H](NCCC)C1",
                "CCCCN[C@@H]1CCN(CC)C1",
                "CCCN[C@@H]1CCN(CCC)C1",
                "CCCCN[C@@H]1CCN(CCCC)C1",
                "CCCCN[C@@H]1CCN(CC(C)(C)C)C1",
                "CCCCN1CC[C@@H](NCC)C1",
                "CCCCN[C@@H]1CCN(CC(C)C)C1",
                "CCCCN[C@@H]1CCN(C)C1",
                "CCCCN[C@@H]1CCN(CCC(C)C)C1",
                "CCCCCN1CC[C@@H](NCCCC)C1"
            ],
            "total_raw_response_smiles": [
                "CCCN[C@@H]1CCN(CCC)C1",
                "CCCCN[C@@H]1CCN(CC)C1",
                "CCCCN[C@@H]1CCN(CCCC)C1",
                "CCCN[C@@H]1CCN(CCCC)C1",
                "CCCCN[C@@H]1CCN(C)C1",
                "CCN[C@@H]1CCN(CCCC)C1",
                "CCCCN[C@@H]1CCN(CCC(C)C)C1",
                "CCCCN[C@@H]1CCN(CC(C)C)C1",
                "CCCCN[C@@H]1CCN(CCCCC)C1",
                "CCCCN[C@@H]1CCN(CC(C)(C)C)C1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006360054016113281,
            "chemical_diversity": 0.3364260939592175,
            "average_molecular_weight": 188.53509999999991,
            "api_call_time": 8.184362888336182
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCN[C@@H]1CCN(CCC)C1', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(Nc1ccc(S(=O)(=O)N2CCCC2)cc1)C1CC1",
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "O=C(NCc1ccco1)c1ccc(C(=O)N2CCOCC2)s1",
                "COc1ccc(C=NNC(=O)c2ccncc2)cc1OC",
                "O=C(Nc1nccs1)c1ccccc1",
                "COc1cc(C=C2C(=O)NC(=S)NC2=O)ccc1O",
                "CC(=O)N1CCc2c(C)nc(SC(F)(F)F)nc2C1",
                "CC1(C)OB(c2ccc(C#N)cc2)OC1(C)C",
                "Cc1nnc(SCC(=O)Nc2ccc(Cl)cn2)s1",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(F)cc2)CC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)C(c2ccccc2)(c2ccccc2)N1",
                "C1=CC=C(C(=O)NC2=NC=CS2)C=C1",
                "CC(C)(C)OC(=O)N1CCN(C(=O)c2ccc(F)cc2)CC1",
                "COc1ccc(C=NNC(=O)c2ccncc2)cc1OC",
                "CC1(C)OB(c2ccc(C#N)cc2)OC1(C)C",
                "O=C(NCc1ccco1)c1ccc(C(=O)N2CCOCC2)s1",
                "Cc1nnc(SCC(=O)Nc2ccc(Cl)cn2)s1",
                "CC(=O)N1CCc2c(C)nc(SC(F)(F)F)nc2C1",
                "O=C(Nc1ccc(S(=O)(=O)N2CCCC2)cc1)C1CC1",
                "COc1cc(C=C2C(=O)NC(=S)NC2=O)ccc1O"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.010407447814941406,
            "chemical_diversity": 0.8791853673868626,
            "average_molecular_weight": 276.4400000000001,
            "api_call_time": 14.00887942314148
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCN[C@@H]1CCN(CCC)C1', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCC[N+](C)[C@@H]1CCN(CCC)C1",
                "CCCCN[C@@H]1CCN(CCC)S1",
                "CCCCN[C@@H]1CCN(CCC)C1",
                "CCCCN[C@@H]1CCN(CC)C1",
                "CCCCN1CCN(CCC)CC1",
                "CCCCN[C@@H]1CCN(CCCC)C1",
                "CCCCN[C@@H]1CCN(CCC)C1O",
                "CCCCN[C@@H]1CCN(CCC)C1=O",
                "CCCCN[C@H]1CCN(CCC)C1",
                "CCCCN[C@@H]1CCN(CCC)N1"
            ],
            "total_raw_response_smiles": [
                "CCCCN[C@@H]1CCN(CCC)C1",
                "CCCCN[C@@H]1CCN(CCCC)C1",
                "CCCCN[C@@H]1CCN(CC)C1",
                "CCCCN[C@H]1CCN(CCC)C1",
                "CCCCN1CCN(CCC)CC1",
                "CCCCN[C@@H]1CCN(CCC)C1=O",
                "CCCCN[C@@H]1CCN(CCC)C1O",
                "CCCCN[C@@H]1CCN(CCC)N1",
                "CCCCN[C@@H]1CCN(CCC)S1",
                "CCCC[N+]([C@@H]1CCN(CCC)C1)C"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006246805191040039,
            "chemical_diversity": 0.5417748694496661,
            "average_molecular_weight": 190.6307,
            "api_call_time": 8.621544599533081
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'CCCCN[C@@H]1CCN(CCC)C1', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CCCCN1CCC(CCC)CC1",
                "CCCC[N+]1([O-])CC[C@H](CCC)C1",
                "CCCC[C@@]1(C)CCN(CCC)C1",
                "CCCCN1CC[C@](C)(CCC)C1",
                "CCCCN1CC[C@@](CC)(CCC)C1",
                "CCCCN1CN(CC)CC[C@@H]1C",
                "CCCCN1OCC[C@@H]1CCC",
                "CCCCN1CCN(CCC)C[C@H]1C",
                "CCCC[C@H]1CCN(CCC)C1"
            ],
            "total_raw_response_smiles": [
                "CCCCS[C@H]1CCO(CCO)C1",
                "CCCCN1CC[C@@H](CCC)CC1",
                "CCCC[N+]1([O-])CC[C@H](CCC)C1",
                "CCCCN1CC[C@](C)(CCC)C1",
                "CCCC[C@H]1CCN(CCC)C1",
                "CCCCN1[C@H](C)CN(CCC)CC1",
                "CCCCN1CC[C@@](CC)(CCC)C1",
                "CCCC[C@@]1(C)CCN(CCC)C1",
                "CCCCN1[C@@H](CCC)CCO1",
                "CCCCN1[C@@H](C)CCN(CC)C1"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.006271839141845703,
            "chemical_diversity": 0.6693653259611706,
            "average_molecular_weight": 183.99677777777774,
            "api_call_time": 10.848126888275146
        }
    ],
    "C#CCCCC(=O)N1CC[C@H]1CO": [
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CCCCC(=O)N1CC[C@H]1CO', generate 10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with minimal structural changes to find similar but new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C#CCCCC(=O)N1CCC1CF",
                "C#CCCCC(=O)N1CCC1CO",
                "C#CCCC[C@@H](O)N1CC[C@H]1CO",
                "C#CCCC[C@H](O)N1CC[C@H]1CO",
                "C#CCCCC(=O)N1CC[C@@H]1CS",
                "C#CCCCC(=O)N1CC[C@H]1CS",
                "C#CCCCC(=O)N1CC[C@H]1CF",
                "C#CCCCC(=O)N1CC[C@@H]1CO",
                "C#CCCCC(=O)N1CCC1CS",
                "C#CCCCC(=O)N1CC[C@@H]1CF"
            ],
            "total_raw_response_smiles": [
                "C#CCCCC(=O)N1CC[C@@H]1CO",
                "C#CCCCC(=O)N1CC[C@H]1CS",
                "C#CCCCC(=O)N1CC[C@@H]1CS",
                "C#CCCCC(=O)N1CC[C@H]1CF",
                "C#CCCCC(=O)N1CC[C@@H]1CF",
                "C#CCCCC(=O)N1CCC1CO",
                "C#CCCCC(=O)N1CCC1CS",
                "C#CCCCC(=O)N1CCC1CF",
                "C#CCCC[C@@H](O)N1CC[C@H]1CO",
                "C#CCCC[C@H](O)N1CC[C@H]1CO"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006023406982421875,
            "chemical_diversity": 0.3313395382960602,
            "average_molecular_weight": 187.0559,
            "api_call_time": 9.845863580703735
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CCCCC(=O)N1CC[C@H]1CO', generate 10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules with significant structural changes to find new candidates. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(NCCO)C1CCCCC1",
                "O=C1NC(CO)CCC1O",
                "N#CC1CCC(O)CN1",
                "O=C(C1=CCCCC1)N1CCNCC1",
                "O=C1NC(=O)c2ccccc21",
                "O=C(NCCO)c1cccnc1",
                "O=C1CCC(CO)N1",
                "O=C(C1CCCCC1)N1CCNCC1",
                "O=C(NC1CCOC1)c1cccs1",
                "O=C(NC1COC1)C1=CCCCC1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)c2ccccc21",
                "C1CC(CO)NC1=O",
                "C1CCC(CC1)C(=O)N1CCNCC1",
                "O=C(NCCO)c1cccnc1",
                "C1CC(O)C(=O)NC1CO",
                "O=C(NC1CCOC1)c1cccs1",
                "C1CNCCN1C(=O)C1=CCCCC1",
                "O=C(NC1COC1)C1=CCCCC1",
                "C1CC(O)CNC1C#N",
                "C1CCC(CC1)C(=O)NCCO"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006398916244506836,
            "chemical_diversity": 0.8466671705638975,
            "average_molecular_weight": 164.0068,
            "api_call_time": 9.587545394897461
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CCCCC(=O)N1CC[C@H]1CO', generate 10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules with slight variations on functional groups while maintaining the backbone structure. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C#CCCCC(=O)N1CC[C@H]1CCl",
                "C#CCCCC(=O)N1CC[C@@H]1CS",
                "C#CCCCC(=O)N1CC[C@@H]1CCl",
                "C#CCCCC(=O)N1CC[C@H]1CS",
                "C#CCCCC(=O)N1CC[C@@H]1CO",
                "C#CCCCC(=O)N1CC[C@H]1CF",
                "C#CCCCC(=O)N1CC[C@@H]1CBr",
                "C#CCCCC(=O)N1CC[C@H]1CBr",
                "C#CCCCC(=O)N1CC[C@H]1CO",
                "C#CCCCC(=O)N1CC[C@@H]1CF"
            ],
            "total_raw_response_smiles": [
                "C#CCCCC(=O)N1CC[C@H]1CO",
                "C#CCCCC(=O)N1CC[C@@H]1CO",
                "C#CCCCC(=O)N1CC[C@H]1CS",
                "C#CCCCC(=O)N1CC[C@@H]1CS",
                "C#CCCCC(=O)N1CC[C@H]1CF",
                "C#CCCCC(=O)N1CC[C@@H]1CF",
                "C#CCCCC(=O)N1CC[C@H]1CCl",
                "C#CCCCC(=O)N1CC[C@@H]1CCl",
                "C#CCCCC(=O)N1CC[C@H]1CBr",
                "C#CCCCC(=O)N1CC[C@@H]1CBr"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.005743741989135742,
            "chemical_diversity": 0.23303303303303313,
            "average_molecular_weight": 201.1154,
            "api_call_time": 7.922714710235596
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CCCCC(=O)N1CC[C@H]1CO', generate 10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules that significantly vary in size and functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "O=C(Nc1ccccc1)c1ccncc1",
                "CN1CCN(c2nc3ccccc3c(=O)[nH]2)CC1",
                "CC(=O)Nc1ccc(O)c(C(=O)O)c1",
                "Cc1nnc(SCc2ccc(Cl)cc2)s1",
                "O=c1[nH]cnc2c(Cl)cncc12",
                "Cc1ccc(C(=O)N2CCNCC2)cc1",
                "COc1ccc(Cl)cc1C(=O)NCCc1ccccc1",
                "CCOC(=O)c1cccc(N)c1",
                "CCOC(=O)c1ccc(N=C=S)cc1",
                "CC(C)(C)OC(=O)N1CCC(N2C(=O)c3ccccc3C2=O)CC1"
            ],
            "total_raw_response_smiles": [
                "CC1=CC=C(C=C1)C(=O)N2CCNCC2",
                "CCOC(=O)C1=CC=CC(=C1)N",
                "O=C1NC=NC2=C1C=NC=C2Cl",
                "CC(C)(C)OC(=O)N1CCC(CC1)N2C(=O)C3=CC=CC=C3C2=O",
                "CN1CCN(CC1)C2=NC3=CC=CC=C3C(=O)N2",
                "CC1=NN=C(S1)SCC2=CC=C(C=C2)Cl",
                "COC1=C(C=C(C=C1)Cl)C(=O)NCCC2=CC=CC=C2",
                "CC(=O)NC1=CC(=C(C=C1)O)C(=O)O",
                "CCOC(=O)C1=CC=C(C=C1)N=C=S",
                "O=C(NC1=CC=CC=C1)C2=CC=NC=C2"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.008795976638793945,
            "chemical_diversity": 0.8497611730672103,
            "average_molecular_weight": 227.29270000000002,
            "api_call_time": 14.50745177268982
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CCCCC(=O)N1CC[C@H]1CO', generate 10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are similar molecules by tweaking only the side chains. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C#CCCCC(=O)N1CCC1CBr",
                "C#CCCCC(=O)N1CCC1CI",
                "C#CCCCC(=O)N1CCC1CF",
                "C#CCCCC(=O)N1CCC1CO",
                "C#CCCCC(=O)N1CCC1C(Cl)Cl",
                "C#CCCCC(=O)N1CC[C@@H]1CO",
                "C#CCCCC(=O)N1CCCC1CO",
                "C#CCCCC(=O)N1CCC1CCl",
                "C#CCCCC(=O)N1CC[C@H]1CO",
                "C#CCCCC(=O)N1CCC1C(F)F"
            ],
            "total_raw_response_smiles": [
                "C#CCCCC(=O)N1CC[C@H]1CO",
                "C#CCCCC(=O)N1CCC1CO",
                "C#CCCCC(=O)N1CC[C@@H]1CO",
                "C#CCCCC(=O)N1CCCC1CO",
                "C#CCCCC(=O)N1CCC1CF",
                "C#CCCCC(=O)N1CCC1CCl",
                "C#CCCCC(=O)N1CCC1CBr",
                "C#CCCCC(=O)N1CCC1CI",
                "C#CCCCC(=O)N1CCC1C(F)F",
                "C#CCCCC(=O)N1CCC1C(Cl)Cl"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006097555160522461,
            "chemical_diversity": 0.29822579974026364,
            "average_molecular_weight": 209.248,
            "api_call_time": 7.512807130813599
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CCCCC(=O)N1CC[C@H]1CO', generate 10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by significantly altering the core structure and introducing completely new functional groups. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Cl)cc1C2c1ccccc1",
                "O=c1[nH]c(=O)c2ccc(Cl)cc2[nH]1",
                "C1CCC(Nc2nc(N3CCOCC3)nc(N3CCOCC3)n2)CC1",
                "Cc1cc(C)c(S(=O)(=O)N2CCN(C(=O)c3ccco3)CC2)c(C)c1",
                "O=C(Nc1ccc(F)cc1)c1ccc(CN2CCOCC2)cc1",
                "COc1ccc(C(=O)N2CCN(Cc3ccc(F)cc3)CC2)cc1OC",
                "Cc1ccc(NC(=O)C2CCN(Cc3ccncc3)CC2)cc1Cl",
                "O=C(CSc1nnc(-c2ccco2)n1Cc1ccccc1)N1CCOCC1",
                "CC(C)C[C@H](NC(=O)c1cccs1)C(=O)N1CCCCC1",
                "CC(C)(C)OC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1"
            ],
            "total_raw_response_smiles": [
                "O=C1NC(=O)c2ccc(Cl)cc2N1",
                "CC(C)(C)OC(=O)Nc1ccc(S(=O)(=O)N2CCOCC2)cc1",
                "C1CCC(CC1)Nc1nc(N2CCOCC2)nc(N2CCOCC2)n1",
                "CC(C)C[C@H](NC(=O)c1cccs1)C(=O)N1CCCCC1",
                "O=C(Nc1ccc(F)cc1)c1ccc(CN2CCOCC2)cc1",
                "Cc1cc(C)c(S(=O)(=O)N2CCN(C(=O)c3ccco3)CC2)c(C)c1",
                "COc1ccc(C(=O)N2CCN(Cc3ccc(F)cc3)CC2)cc1OC",
                "Cc1ccc(NC(=O)C2CCN(Cc3ccncc3)CC2)cc1Cl",
                "O=C(CSc1nnc(-c2ccco2)n1Cc1ccccc1)N1CCOCC1",
                "CC1(C)CC(=O)C2=C(C1)Nc1ccc(Cl)cc1C2c1ccccc1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.012405157089233398,
            "chemical_diversity": 0.8375966630221499,
            "average_molecular_weight": 329.7301000000001,
            "api_call_time": 44.44564628601074
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CCCCC(=O)N1CC[C@H]1CO', generate 10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 9,
            "prompt_strategy": "10 molecules that are similar molecules by changing one or two atoms or bonds to produce closely related structures. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C#CCCC[C@@H](O)N1CC[C@H]1CO",
                "C#CCCCC(=O)N1CC[C@H]1CS",
                "C#CCCCC(=O)N1CC[C@H]1CF",
                "C#CCCCC(=O)N1CC[C@@H]1CO",
                "C#CCCCC(=N)N1CC[C@H]1CO",
                "C#CCCCC(=O)N1CC[C@H]1CN",
                "C#CCCCC(=S)N1CC[C@H]1CO",
                "C#CCCCC(=O)N1CC[C@H]1CC",
                "C#CCCNC(=O)N1CC[C@H]1CO"
            ],
            "total_raw_response_smiles": [
                "C#CCCCC(=O)N1CC[C@@H]1CO",
                "C#CCCCC(=O)N1CC[C@H]1CS",
                "C#CCCCC(=O)N1CC[C@H]1CF",
                "C#CCCCC(=O)N1CC[C@H]1CN",
                "C#CCCCC(=O)N1CC[C@H]1CC",
                "C#CCCCC(=N)N1CC[C@H]1CO",
                "C#CCCCC(=S)N1CC[C@H]1CO",
                "C#CCCC[C@@H](O)N1CC[C@H]1CO",
                "C#CCCC/C(=O/N1CC[C@H]1CO",
                "C#CCCNC(=O)N1CC[C@H]1CO"
            ],
            "validity_ratio": 0.9,
            "post_processing_time": 0.005255460739135742,
            "chemical_diversity": 0.441203085439123,
            "average_molecular_weight": 184.92288888888888,
            "api_call_time": 7.629851818084717
        },
        {
            "full_prompt": "Given the molecule with SMILES representation 'C#CCCCC(=O)N1CC[C@H]1CO', generate 10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "number_of_total_generated_smiles_raw_responses": 10,
            "number_of_valid_canonicalized_smiles": 10,
            "prompt_strategy": "10 molecules that are completely different molecules by changing multiple atoms or bonds. Respond with just the SMILES strings as elements of a Python list",
            "generated_smiles": [
                "C#CCNCC(=O)N1CC[C@@H]1CS",
                "C#CCCC(=N)N1CC[C@H]1CSC",
                "C#CC(=O)NCC1CCCCC1O",
                "C#CC(=O)CC[C@H]1CCNC1O",
                "C#CCC(=O)N1CCC[C@H]1CCl",
                "C#CCCC[C@H](N)C1CCOC1=O",
                "C#CCNC(=O)[C@@H]1CCOC1C",
                "C#CCCC[C@@H](O)N1CCCC1=O",
                "C#CCC(=O)CC1CCNC1CO",
                "C#CCCC[C@@H](N)C1=NCCO1"
            ],
            "total_raw_response_smiles": [
                "C#CCNCC(=O)N1CC[C@@H]1CS",
                "C#CC(=O)NCC1CCCCC1O",
                "C#CCCC[C@@H](O)N1CCCC1=O",
                "C#CCC(=O)N1CCC[C@H]1CCl",
                "C#CCCC[C@H](N)C1CCOC1=O",
                "C#CCC(=O)CC1CCNC1CO",
                "C#CCNC(=O)[C@@H]1CCOC1C",
                "C#CCCC(=N)N1CC[C@H]1CSC",
                "C#CC(=O)CC[C@H]1CCNC1O",
                "C#CCCC[C@@H](N)C1=NCCO1"
            ],
            "validity_ratio": 1.0,
            "post_processing_time": 0.006400108337402344,
            "chemical_diversity": 0.7860145790882365,
            "average_molecular_weight": 180.58440000000002,
            "api_call_time": 9.625309228897095
        }
    ]
}